/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 08 23:30:29 GMT 2022
 */

package orig.src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import orig.src.Bug;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Bug_ESTest extends Bug_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Bug bug0 = new Bug("orig.src.Bug", 0, (-1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Bug bug0 = new Bug("DU9c$L", 1068, 76);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bug bug0 = null;
      try {
        bug0 = new Bug(",~qBmrn]e)", (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("orig.src.Bug", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bug bug0 = null;
      try {
        bug0 = new Bug("*uO'>5jh96h", 2548, 2548);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // bug found
         //
         verifyException("orig.src.Bug", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bug bug0 = new Bug("orig.src.Bug", 0, 0);
      bug0.run();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Bug bug0 = new Bug("sX!Z]", 1, (-956));
      bug0.run();
  }

    @Test(timeout = 4000)
    public void test6()  throws Throwable  {
        Bug bug0 = new Bug("A", 10, 0);
        Thread t0=new Thread(bug0);
        t0.start();
        try{
            t0.sleep(1);
        }
        catch (Exception e){
            System.out.println(e.getStackTrace());
        }
        try {
            Bug bug1 = new Bug("B", 10, 0);
            fail("Expecting exception: RuntimeException");
        } catch(RuntimeException e) {
            verifyException("orig.src.Bug", e);
        }
    }
}
