/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 06 00:37:37 GMT 2022
 */

package code.src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import code.src.Distance;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Distance_ESTest extends Distance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = Distance.squaredDistance(0.0, 657.93591278537, 2875.185805438477, (-1.0));
      assertEquals(8700889.952953191, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[1] = 2125L;
      long long0 = Distance.chebyshevDistance(longArray0, longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[1] = 2125L;
      long[] longArray1 = new long[2];
      long long0 = Distance.chebyshevDistance(longArray0, longArray1);
      assertEquals(2125L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = (-122L);
      long long0 = Distance.chebyshevDistance(longArray0, longArray0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = Distance.euclideanDistance(920.02, 920.02, 920.02, 920.02);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long[] longArray0 = new long[3];
      longArray0[0] = (-122L);
      long[] longArray1 = new long[2];
      long long0 = Distance.chebyshevDistance(longArray0, longArray1);
      assertEquals(122L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Distance.chebyshevDistance((long[]) null, (long[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("code.src.Distance", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      long[] longArray0 = new long[4];
      long[] longArray1 = new long[1];
      // Undeclared exception!
      try { 
        Distance.chebyshevDistance(longArray1, longArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("code.src.Distance", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = Distance.euclideanDistance(6.0, (-4203L), (-1L), 0.0);
      assertEquals(4203.005829165599, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Distance distance0 = new Distance();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = Distance.squaredDistance(920.02, 920.02, 920.02, 920.02);
      assertEquals(0.0, double0, 0.01);
  }
}
