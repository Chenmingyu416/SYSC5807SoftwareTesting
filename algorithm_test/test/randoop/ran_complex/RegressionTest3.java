import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        code.src.Complex complex2 = code.src.Complex.polar(121.44752674007574d, 29147.719905143265d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        double double39 = complex36.abs();
        code.src.Complex complex40 = complex2.sub(complex36);
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        complex43.imaginary = 100.0f;
        code.src.Complex complex50 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str51 = complex50.toString();
        code.src.Complex complex54 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex55 = complex50.sub(complex54);
        code.src.Complex complex56 = complex43.multiply(complex55);
        java.lang.String str57 = complex55.toString();
        double double58 = complex55.real;
        code.src.Complex complex59 = complex2.add(complex55);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double63 = complex62.real;
        java.lang.String str64 = complex62.toString();
        code.src.Complex complex65 = complex55.sub(complex62);
        code.src.Complex complex68 = code.src.Complex.polar((double) 0.0f, 36.40054944640259d);
        double double69 = complex68.real;
        code.src.Complex complex70 = complex62.add(complex68);
        java.lang.Class<?> wildcardClass71 = complex70.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1050.9408051475186d + "'", double39 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(100.0,10.0)" + "'", str51, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str57, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 589.1068753368511d + "'", double58 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 28.09571990514327d + "'", double63 == 28.09571990514327d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str64, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) '#');
        double double3 = complex2.imaginary;
        double double4 = complex2.real;
        double double5 = complex2.real;
        code.src.Complex complex8 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex11 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double12 = complex11.imaginary;
        complex11.imaginary = (byte) 10;
        code.src.Complex complex15 = complex8.sub(complex11);
        double double16 = complex8.abs();
        code.src.Complex complex17 = complex2.multiply(complex8);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-317.11773840932915d) + "'", double12 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNotNull(complex17);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        code.src.Complex complex2 = new code.src.Complex(492.8116754934422d, 309.0545367982484d);
        java.lang.String str3 = complex2.toString();
        complex2.real = 0.0f;
        complex2.real = 673.590879631022d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(492.8116754934422,309.0545367982484)" + "'", str3, "(492.8116754934422,309.0545367982484)");
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        code.src.Complex complex2 = code.src.Complex.polar(8.373954245956892d, 8.373954245956892d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        double double36 = complex35.abs();
        code.src.Complex complex39 = code.src.Complex.polar((-906.2883532154044d), 520.0d);
        complex39.imaginary = 100.00499987500625d;
        code.src.Complex complex42 = complex35.sub(complex39);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex42);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        double double3 = complex2.imaginary;
        java.lang.Class<?> wildcardClass4 = complex2.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 280.95719905143267d);
        complex2.real = (-288.4361024143587d);
        double double5 = complex2.real;
        double double6 = complex2.real;
        java.lang.Class<?> wildcardClass7 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-288.4361024143587d) + "'", double5 == (-288.4361024143587d));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-288.4361024143587d) + "'", double6 == (-288.4361024143587d));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        double double58 = complex48.abs();
        double double59 = complex48.abs();
        code.src.Complex complex62 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        double double79 = complex78.real;
        code.src.Complex complex82 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex86 = complex82.multiply(complex85);
        double double87 = complex86.imaginary;
        code.src.Complex complex88 = complex78.sub(complex86);
        code.src.Complex complex89 = complex62.add(complex88);
        complex88.imaginary = 100L;
        code.src.Complex complex92 = complex48.add(complex88);
        java.lang.String str93 = complex48.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 109.15415943981125d + "'", double58 == 109.15415943981125d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 109.15415943981125d + "'", double59 == 109.15415943981125d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 290.95719905143267d + "'", double79 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 437.56491210010614d + "'", double87 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(43.756491210010616,100.0)" + "'", str93, "(43.756491210010616,100.0)");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex68.imaginary;
        double double70 = complex68.imaginary;
        java.lang.String str71 = complex68.toString();
        double double72 = complex68.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(0.0,0.0)" + "'", str71, "(0.0,0.0)");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 0.0d);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        double double36 = complex32.abs();
        double double37 = complex32.imaginary;
        code.src.Complex complex40 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex41 = complex32.sub(complex40);
        double double42 = complex41.imaginary;
        double double43 = complex41.abs();
        double double44 = complex41.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1050.9408051475186d + "'", double36 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 865.1298242002123d + "'", double42 == 865.1298242002123d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1042.070607321742d + "'", double43 == 1042.070607321742d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 865.1298242002123d + "'", double44 == 865.1298242002123d);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        java.lang.String str35 = complex15.toString();
        complex15.real = 14827.945873355611d;
        code.src.Complex complex40 = new code.src.Complex((double) 1.0f, (-280.95719905143267d));
        code.src.Complex complex41 = complex15.add(complex40);
        complex15.real = 88.75649121001061d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str35, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex41);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        code.src.Complex complex2 = code.src.Complex.polar(141.42842712835352d, 87.48639198643185d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        code.src.Complex complex2 = code.src.Complex.polar(252.8614791462894d, 220.6179825218609d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        code.src.Complex complex2 = code.src.Complex.polar(437.56491210010614d, (double) 0L);
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 100, 589.1068753368511d);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex21.sub(complex41);
        code.src.Complex complex47 = new code.src.Complex();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        double double81 = complex80.real;
        code.src.Complex complex82 = complex47.multiply(complex80);
        code.src.Complex complex83 = complex21.multiply(complex80);
        code.src.Complex complex86 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double87 = complex86.imaginary;
        code.src.Complex complex88 = complex80.add(complex86);
        double double89 = complex80.imaginary;
        double double90 = complex80.real;
        code.src.Complex complex91 = complex5.add(complex80);
        code.src.Complex complex92 = complex2.sub(complex80);
        complex80.imaginary = 12809.571990514327d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 581.9143981028653d + "'", double81 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 437.56491210010614d + "'", double87 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 875.1298242002123d + "'", double89 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 581.9143981028653d + "'", double90 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        code.src.Complex complex16 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex17 = complex10.add(complex16);
        java.lang.String str18 = complex10.toString();
        code.src.Complex complex21 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double22 = complex21.imaginary;
        code.src.Complex complex23 = complex10.add(complex21);
        complex23.real = 0.0d;
        complex23.imaginary = 1051.4948429356753d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(complex23);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        complex2.imaginary = (-62.9683262670583d);
        double double18 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 62.9683262670583d + "'", double18 == 62.9683262670583d);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (short) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double41 = complex40.abs();
        double double42 = complex40.real;
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        java.lang.String str66 = complex61.toString();
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        code.src.Complex complex74 = complex61.add(complex73);
        code.src.Complex complex75 = complex58.add(complex74);
        java.lang.String str76 = complex58.toString();
        double double77 = complex58.abs();
        double double78 = complex58.real;
        code.src.Complex complex79 = complex40.sub(complex58);
        code.src.Complex complex80 = complex36.add(complex58);
        code.src.Complex complex81 = complex2.sub(complex80);
        code.src.Complex complex84 = new code.src.Complex(0.0d, (double) (byte) 0);
        code.src.Complex complex85 = complex81.add(complex84);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 28.09571990514327d + "'", double42 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(10.0,0.0)" + "'", str66, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str76, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 525.4704025737593d + "'", double77 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 290.95719905143267d + "'", double78 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex85);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        java.lang.Class<?> wildcardClass18 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, (double) 10);
        complex2.imaginary = (-76.93620332370243d);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        code.src.Complex complex2 = code.src.Complex.polar(907.1298242002123d, (-317.11773840932915d));
        complex2.real = 0L;
        complex2.imaginary = (-489.10687533685115d);
        complex2.imaginary = 104.0d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex8 = new code.src.Complex((double) 10L, (double) '#');
        double double9 = complex8.imaginary;
        code.src.Complex complex10 = complex5.multiply(complex8);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        double double18 = complex17.imaginary;
        code.src.Complex complex19 = complex10.multiply(complex17);
        code.src.Complex complex20 = complex2.sub(complex17);
        code.src.Complex complex23 = new code.src.Complex(393.80842089009553d, 582.9143981028653d);
        code.src.Complex complex24 = complex2.sub(complex23);
        double double25 = complex23.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 437.56491210010614d + "'", double18 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 393.80842089009553d + "'", double25 == 393.80842089009553d);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex47.imaginary;
        code.src.Complex complex49 = complex40.sub(complex47);
        double double50 = complex47.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 437.56491210010614d + "'", double48 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 520.0d + "'", double50 == 520.0d);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        code.src.Complex complex17 = code.src.Complex.polar(141.4213562373095d, (-272.8614791462894d));
        code.src.Complex complex18 = complex11.multiply(complex17);
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex21.imaginary = (short) 0;
        double double24 = complex21.abs();
        double double25 = complex21.real;
        double double26 = complex21.real;
        complex21.imaginary = 612077.1638882305d;
        code.src.Complex complex29 = complex11.add(complex21);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-0.0d) + "'", double25 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + (-0.0d) + "'", double26 == (-0.0d));
        org.junit.Assert.assertNotNull(complex29);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        code.src.Complex complex2 = code.src.Complex.polar(537.5649121001061d, 141.77446878757826d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        code.src.Complex complex2 = code.src.Complex.polar(291.95719905143267d, 875.1869567153606d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str6 = complex5.toString();
        double double7 = complex5.imaginary;
        code.src.Complex complex10 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex26.sub(complex46);
        code.src.Complex complex52 = new code.src.Complex();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        double double86 = complex85.real;
        code.src.Complex complex87 = complex52.multiply(complex85);
        code.src.Complex complex88 = complex26.multiply(complex85);
        code.src.Complex complex89 = complex10.sub(complex88);
        double double90 = complex88.real;
        double double91 = complex88.real;
        code.src.Complex complex94 = code.src.Complex.polar((double) (byte) 100, (double) 1.0f);
        code.src.Complex complex95 = complex88.sub(complex94);
        complex94.real = 522.5935322982863d;
        code.src.Complex complex98 = complex5.add(complex94);
        code.src.Complex complex99 = complex2.add(complex98);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(1.0,290.95719905143267)" + "'", str6, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 290.95719905143267d + "'", double7 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 581.9143981028653d + "'", double86 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-213613.9212426372d) + "'", double90 == (-213613.9212426372d));
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-213613.9212426372d) + "'", double91 == (-213613.9212426372d));
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex98);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        double double51 = complex39.imaginary;
        double double52 = complex39.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 875.1298242002123d + "'", double51 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 582.9143981028653d + "'", double52 == 582.9143981028653d);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        java.lang.String str41 = complex15.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 100.0f, (double) (short) -1);
        code.src.Complex complex45 = complex15.add(complex44);
        double double46 = complex44.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str41, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-1.0d) + "'", double46 == (-1.0d));
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        code.src.Complex complex2 = new code.src.Complex(58911.02077697936d, 309.0545367982484d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str6 = complex5.toString();
        code.src.Complex complex9 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex10 = complex5.sub(complex9);
        complex5.real = (-213613.9212426372d);
        double double13 = complex5.abs();
        code.src.Complex complex14 = complex2.multiply(complex5);
        complex14.imaginary = 92.33986493517884d;
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(100.0,10.0)" + "'", str6, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 213613.92147670433d + "'", double13 == 213613.92147670433d);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, 52.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.imaginary = 100L;
        java.lang.String str12 = complex9.toString();
        code.src.Complex complex13 = complex5.multiply(complex9);
        code.src.Complex complex16 = code.src.Complex.polar(663.590879631022d, (double) ' ');
        code.src.Complex complex17 = complex13.sub(complex16);
        code.src.Complex complex18 = complex2.sub(complex16);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(100.0,100.0)" + "'", str12, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        code.src.Complex complex2 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double47 = complex46.abs();
        code.src.Complex complex48 = complex5.add(complex46);
        code.src.Complex complex49 = complex2.add(complex5);
        complex49.real = 1050.9408051475186d;
        complex49.imaginary = 5.403023058681398d;
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        double double5 = complex2.abs();
        double double6 = complex2.real;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        code.src.Complex complex14 = complex2.multiply(complex9);
        complex2.imaginary = (-273.44509135195034d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0d) + "'", double6 == (-0.0d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex36.imaginary = (short) 0;
        complex36.imaginary = 100.0f;
        code.src.Complex complex41 = complex15.sub(complex36);
        code.src.Complex complex44 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex47 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex48 = complex44.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        java.lang.String str72 = complex67.toString();
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        code.src.Complex complex80 = complex67.add(complex79);
        code.src.Complex complex81 = complex64.add(complex80);
        code.src.Complex complex82 = new code.src.Complex();
        code.src.Complex complex83 = complex81.add(complex82);
        complex81.real = 10;
        code.src.Complex complex86 = complex44.sub(complex81);
        code.src.Complex complex87 = complex41.add(complex81);
        double double88 = complex87.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(10.0,0.0)" + "'", str72, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 300.95719905143267d + "'", double88 == 300.95719905143267d);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex5 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex9.imaginary = (short) 0;
        complex9.imaginary = 100.0f;
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str17 = complex16.toString();
        code.src.Complex complex20 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex21 = complex16.sub(complex20);
        code.src.Complex complex22 = complex9.multiply(complex21);
        java.lang.String str23 = complex21.toString();
        double double24 = complex21.real;
        code.src.Complex complex25 = complex2.sub(complex21);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(100.0,10.0)" + "'", str17, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str23, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 589.1068753368511d + "'", double24 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex25);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 58911.83144065723d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = code.src.Complex.polar(28.09571990514327d, 100.0d);
        code.src.Complex complex44 = complex40.add(complex43);
        complex40.real = 0.0d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        double double77 = complex76.imaginary;
        double double78 = complex76.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 907.1298242002123d + "'", double77 == 907.1298242002123d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 1077.733215908709d + "'", double78 == 1077.733215908709d);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.real = 525.4704025737593d;
        double double79 = complex74.real;
        code.src.Complex complex80 = complex51.add(complex74);
        double double81 = complex51.abs();
        code.src.Complex complex84 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex85 = complex51.add(complex84);
        complex51.imaginary = 0.0d;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 525.4704025737593d + "'", double81 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (byte) 10);
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex8 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex9 = complex5.add(complex8);
        code.src.Complex complex10 = complex2.sub(complex9);
        double double11 = complex10.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 227.11773840932915d + "'", double11 == 227.11773840932915d);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        complex48.imaginary = (-317.11773840932915d);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex48.multiply(complex74);
        complex76.real = 481.32140331011675d;
        code.src.Complex complex81 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex84 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex85 = complex81.add(complex84);
        complex81.real = 0.9999999999999999d;
        code.src.Complex complex88 = complex76.sub(complex81);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        code.src.Complex complex2 = new code.src.Complex(663.590879631022d, 43.756491210010616d);
        complex2.imaginary = '#';
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        double double21 = complex7.abs();
        code.src.Complex complex22 = complex2.add(complex7);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex55 = complex38.add(complex54);
        double double56 = complex55.real;
        code.src.Complex complex59 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex60 = complex55.sub(complex59);
        code.src.Complex complex61 = complex7.add(complex59);
        java.lang.String str62 = complex7.toString();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 581.9143981028653d + "'", double56 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        code.src.Complex complex2 = code.src.Complex.polar(907.5648116969368d, (double) 100.0f);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        code.src.Complex complex50 = new code.src.Complex();
        complex50.real = 1L;
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = complex50.add(complex85);
        code.src.Complex complex87 = complex48.sub(complex85);
        double double88 = complex87.real;
        double double89 = complex87.imaginary;
        java.lang.Class<?> wildcardClass90 = complex87.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-272.8614791462894d) + "'", double88 == (-272.8614791462894d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-393.80842089009553d) + "'", double89 == (-393.80842089009553d));
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        code.src.Complex complex2 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        double double3 = complex2.imaginary;
        double double4 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        java.lang.String str35 = complex15.toString();
        complex15.real = 14827.945873355611d;
        code.src.Complex complex40 = new code.src.Complex((double) 1.0f, (-280.95719905143267d));
        code.src.Complex complex41 = complex15.add(complex40);
        code.src.Complex complex44 = new code.src.Complex(27.594203913205885d, 213623.9212426372d);
        code.src.Complex complex45 = complex41.multiply(complex44);
        complex44.real = (-317.11773840932915d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str35, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex45);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        code.src.Complex complex2 = code.src.Complex.polar(100.00499987500625d, 102.1420579389313d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        code.src.Complex complex2 = new code.src.Complex((-495.7163425468028d), 214489.27308040016d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 214489.27308040016d + "'", double3 == 214489.27308040016d);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        double double55 = complex2.real;
        code.src.Complex complex58 = new code.src.Complex(28.09571990514327d, (double) ' ');
        code.src.Complex complex59 = complex2.add(complex58);
        double double60 = complex58.real;
        complex58.imaginary = 28.09571990514327d;
        complex58.real = 0.0d;
        complex58.imaginary = 5225.935322982863d;
        double double67 = complex58.imaginary;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 28.09571990514327d + "'", double60 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 5225.935322982863d + "'", double67 == 5225.935322982863d);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.imaginary = (-317.11773840932915d);
        code.src.Complex complex9 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double10 = complex9.abs();
        code.src.Complex complex13 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str14 = complex13.toString();
        code.src.Complex complex15 = complex9.multiply(complex13);
        complex13.real = 35.0d;
        code.src.Complex complex18 = new code.src.Complex();
        complex18.real = 1L;
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex53 = complex36.add(complex52);
        code.src.Complex complex54 = complex18.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex54.sub(complex61);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex61.add(complex66);
        code.src.Complex complex68 = complex13.multiply(complex67);
        code.src.Complex complex69 = complex2.sub(complex13);
        code.src.Complex complex72 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        complex72.real = 1051.4948429356753d;
        code.src.Complex complex75 = complex13.multiply(complex72);
        complex75.real = (-36073.24762350389d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(100.0,10.0)" + "'", str14, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 582.9143981028653d + "'", double55 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        code.src.Complex complex2 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double3 = complex2.imaginary;
        double double4 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 0, (double) 100L);
        double double3 = complex2.real;
        java.lang.String str4 = complex2.toString();
        code.src.Complex complex7 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        double double45 = complex44.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex44.sub(complex51);
        code.src.Complex complex54 = complex7.add(complex51);
        java.lang.String str55 = complex54.toString();
        code.src.Complex complex56 = complex2.sub(complex54);
        double double57 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(0.0,100.0)" + "'", str4, "(0.0,100.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 582.9143981028653d + "'", double45 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(128.09571990514326,87.51298242002123)" + "'", str55, "(128.09571990514326,87.51298242002123)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.real = 525.4704025737593d;
        double double79 = complex74.real;
        code.src.Complex complex80 = complex51.add(complex74);
        double double81 = complex51.abs();
        code.src.Complex complex84 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex85 = complex51.add(complex84);
        double double86 = complex85.imaginary;
        double double87 = complex85.imaginary;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 525.4704025737593d + "'", double81 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 432.1247009912124d + "'", double86 == 432.1247009912124d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 432.1247009912124d + "'", double87 == 432.1247009912124d);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        code.src.Complex complex38 = new code.src.Complex();
        code.src.Complex complex39 = complex37.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        java.lang.String str63 = complex58.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex58.add(complex70);
        code.src.Complex complex72 = complex55.add(complex71);
        code.src.Complex complex73 = new code.src.Complex();
        code.src.Complex complex74 = complex72.add(complex73);
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        double double82 = complex80.imaginary;
        java.lang.String str83 = complex80.toString();
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double87 = complex86.abs();
        double double88 = complex86.real;
        code.src.Complex complex89 = complex80.sub(complex86);
        code.src.Complex complex90 = complex73.sub(complex80);
        code.src.Complex complex91 = complex38.add(complex73);
        complex91.imaginary = (byte) 100;
        code.src.Complex complex94 = complex2.sub(complex91);
        double double95 = complex94.imaginary;
        double double96 = complex94.abs();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(10.0,0.0)" + "'", str63, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 43.756491210010616d + "'", double82 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str83, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 52.0d + "'", double87 == 52.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 28.09571990514327d + "'", double88 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-90.0d) + "'", double95 == (-90.0d));
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.00555538409837d + "'", double96 == 90.00555538409837d);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        code.src.Complex complex2 = new code.src.Complex(530.9143981028653d, 1.4142135623730951d);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        code.src.Complex complex2 = code.src.Complex.polar(907.1298242002123d, (-317.11773840932915d));
        complex2.real = 525.4704025737593d;
        complex2.imaginary = 290.95719905143267d;
        complex2.imaginary = (-0.5440211108893698d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        code.src.Complex complex2 = new code.src.Complex((-0.5063656411097588d), 552238.2879620573d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = new code.src.Complex((double) 100, (double) 10.0f);
        complex15.real = (byte) 1;
        code.src.Complex complex18 = complex8.multiply(complex15);
        double double19 = complex15.imaginary;
        java.lang.String str20 = complex15.toString();
        complex15.imaginary = 0.2324571024365446d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(1.0,10.0)" + "'", str20, "(1.0,10.0)");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        double double42 = complex2.real;
        code.src.Complex complex43 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex44 = complex2.multiply(complex43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 28.09571990514327d + "'", double42 == 28.09571990514327d);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 52.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        double double45 = complex43.imaginary;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double50 = complex49.abs();
        double double51 = complex49.real;
        code.src.Complex complex52 = complex43.sub(complex49);
        code.src.Complex complex53 = complex36.sub(complex43);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = new code.src.Complex((double) (short) 100, (double) (-1));
        complex57.real = 10L;
        double double60 = complex57.imaginary;
        code.src.Complex complex61 = complex53.sub(complex57);
        code.src.Complex complex62 = complex2.multiply(complex57);
        double double63 = complex62.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 43.756491210010616d + "'", double45 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str46, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 28.09571990514327d + "'", double51 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(-28.09571990514327,-43.756491210010616)" + "'", str54, "(-28.09571990514327,-43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1004.987562112089d + "'", double63 == 1004.987562112089d);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        code.src.Complex complex2 = new code.src.Complex((double) '4', 317.11773840932915d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 317.11773840932915d + "'", double3 == 317.11773840932915d);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        code.src.Complex complex2 = code.src.Complex.polar(572.0d, 309.0529189565759d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        code.src.Complex complex2 = code.src.Complex.polar((-0.5440211108893698d), 9.866275920404853d);
        double double3 = complex2.imaginary;
        code.src.Complex complex4 = new code.src.Complex();
        complex4.real = 1L;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex40 = complex4.add(complex39);
        double double41 = complex40.real;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex40.sub(complex47);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex47.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex57 = complex52.add(complex56);
        complex52.real = 43.756491210010616d;
        complex52.imaginary = 100.0d;
        complex52.imaginary = (-317.11773840932915d);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex52.multiply(complex78);
        java.lang.String str81 = complex52.toString();
        code.src.Complex complex82 = complex2.add(complex52);
        double double83 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.2324571024365446d + "'", double3 == 0.2324571024365446d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 582.9143981028653d + "'", double41 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(43.756491210010616,-317.11773840932915)" + "'", str81, "(43.756491210010616,-317.11773840932915)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.2324571024365446d + "'", double83 == 0.2324571024365446d);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        double double50 = complex48.imaginary;
        complex48.real = 8243.654474996218d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 481.32140331011675d + "'", double50 == 481.32140331011675d);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = new code.src.Complex();
        code.src.Complex complex69 = complex67.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        double double77 = complex75.imaginary;
        java.lang.String str78 = complex75.toString();
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double82 = complex81.abs();
        double double83 = complex81.real;
        code.src.Complex complex84 = complex75.sub(complex81);
        code.src.Complex complex85 = complex68.sub(complex75);
        code.src.Complex complex86 = complex33.add(complex68);
        double double87 = complex86.abs();
        complex86.imaginary = (short) 10;
        double double90 = complex86.imaginary;
        double double91 = complex86.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 43.756491210010616d + "'", double77 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str78, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 28.09571990514327d + "'", double83 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 10.0d + "'", double90 == 10.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 10.0d + "'", double91 == 10.0d);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) (short) -1);
        double double3 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = code.src.Complex.polar((double) 1L, (double) (byte) 100);
        complex9.imaginary = 528.7686600293723d;
        code.src.Complex complex14 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex15 = new code.src.Complex();
        complex15.real = 1L;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex51 = complex15.add(complex50);
        code.src.Complex complex52 = complex14.add(complex50);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = new code.src.Complex();
        code.src.Complex complex87 = complex85.add(complex86);
        code.src.Complex complex88 = complex52.add(complex86);
        code.src.Complex complex91 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str92 = complex91.toString();
        java.lang.String str93 = complex91.toString();
        code.src.Complex complex94 = complex52.sub(complex91);
        java.lang.String str95 = complex91.toString();
        code.src.Complex complex96 = complex9.multiply(complex91);
        code.src.Complex complex97 = complex2.add(complex96);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(100.0,10.0)" + "'", str92, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(100.0,10.0)" + "'", str93, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(100.0,10.0)" + "'", str95, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        code.src.Complex complex2 = code.src.Complex.polar(1.4142135623730951d, 213623.9212426372d);
        code.src.Complex complex5 = new code.src.Complex(214489.24976920983d, 520.0d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex2.imaginary = 354080.08284857025d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100L, 10.04987562112089d);
        code.src.Complex complex5 = code.src.Complex.polar(141.4213562373095d, 393.80842089009553d);
        code.src.Complex complex8 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex11 = new code.src.Complex((double) 100, (double) 10.0f);
        complex11.real = (byte) 1;
        complex11.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex();
        complex16.real = 1L;
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex52 = complex16.add(complex51);
        double double53 = complex16.imaginary;
        double double54 = complex16.imaginary;
        java.lang.String str55 = complex16.toString();
        code.src.Complex complex56 = complex11.sub(complex16);
        code.src.Complex complex59 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        double double67 = complex65.imaginary;
        java.lang.String str68 = complex65.toString();
        code.src.Complex complex69 = complex59.sub(complex65);
        code.src.Complex complex72 = new code.src.Complex((double) 100, (double) 10.0f);
        complex72.real = (byte) 1;
        code.src.Complex complex75 = complex65.multiply(complex72);
        code.src.Complex complex76 = complex56.sub(complex75);
        code.src.Complex complex77 = complex8.multiply(complex75);
        double double78 = complex77.abs();
        code.src.Complex complex79 = complex5.sub(complex77);
        code.src.Complex complex82 = code.src.Complex.polar(0.0d, (double) (short) 1);
        code.src.Complex complex83 = complex77.sub(complex82);
        code.src.Complex complex86 = new code.src.Complex(552238.2879620573d, (-272.8614791462894d));
        code.src.Complex complex87 = complex77.multiply(complex86);
        complex86.imaginary = 582.9143981028653d;
        code.src.Complex complex90 = complex2.sub(complex86);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(1.0,0.0)" + "'", str55, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 43.756491210010616d + "'", double67 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str68, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 5225.935322982863d + "'", double78 == 5225.935322982863d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        code.src.Complex complex2 = code.src.Complex.polar((-180.95719905143267d), 213613.92387355183d);
        complex2.imaginary = 612077.1638882305d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        java.lang.String str16 = complex2.toString();
        complex2.imaginary = '#';
        double double19 = complex2.abs();
        double double20 = complex2.imaginary;
        java.lang.String str21 = complex2.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 36.40054944640259d + "'", double19 == 36.40054944640259d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,35.0)" + "'", str21, "(10.0,35.0)");
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        code.src.Complex complex2 = new code.src.Complex(492.8116754934422d, 99.0d);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        code.src.Complex complex2 = new code.src.Complex(100.00499987500625d, (double) '4');
        complex2.imaginary = 0.0d;
        double double5 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.00499987500625d + "'", double5 == 100.00499987500625d);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        code.src.Complex complex2 = new code.src.Complex(525.4704025737593d, (double) (byte) 100);
        code.src.Complex complex5 = code.src.Complex.polar(10.0d, (double) '4');
        double double6 = complex5.imaginary;
        code.src.Complex complex9 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        code.src.Complex complex47 = complex9.add(complex45);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        double double55 = complex53.imaginary;
        java.lang.String str56 = complex53.toString();
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double60 = complex59.abs();
        double double61 = complex59.real;
        code.src.Complex complex62 = complex53.sub(complex59);
        code.src.Complex complex63 = complex45.sub(complex53);
        double double64 = complex45.real;
        code.src.Complex complex65 = complex5.multiply(complex45);
        complex45.imaginary = (-272.8614791462894d);
        code.src.Complex complex68 = complex2.add(complex45);
        double double69 = complex45.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 9.866275920404853d + "'", double6 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 43.756491210010616d + "'", double55 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str56, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 28.09571990514327d + "'", double61 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 581.9143981028653d + "'", double64 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + (-272.8614791462894d) + "'", double69 == (-272.8614791462894d));
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        code.src.Complex complex2 = code.src.Complex.polar(483.75822480116756d, 907.1298242002123d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 0, (double) 100L);
        double double3 = complex2.real;
        java.lang.String str4 = complex2.toString();
        code.src.Complex complex7 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        double double45 = complex44.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex44.sub(complex51);
        code.src.Complex complex54 = complex7.add(complex51);
        java.lang.String str55 = complex54.toString();
        code.src.Complex complex56 = complex2.sub(complex54);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        java.lang.String str80 = complex75.toString();
        code.src.Complex complex83 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex87 = complex83.multiply(complex86);
        code.src.Complex complex88 = complex75.add(complex87);
        code.src.Complex complex89 = complex72.add(complex88);
        double double90 = complex72.real;
        double double91 = complex72.real;
        java.lang.String str92 = complex72.toString();
        complex72.real = 14827.945873355611d;
        code.src.Complex complex97 = new code.src.Complex((double) 1.0f, (-280.95719905143267d));
        code.src.Complex complex98 = complex72.add(complex97);
        code.src.Complex complex99 = complex54.add(complex97);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(0.0,100.0)" + "'", str4, "(0.0,100.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 582.9143981028653d + "'", double45 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(128.09571990514326,87.51298242002123)" + "'", str55, "(128.09571990514326,87.51298242002123)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(10.0,0.0)" + "'", str80, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 290.95719905143267d + "'", double90 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 290.95719905143267d + "'", double91 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str92, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex98);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, 100.0d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        code.src.Complex complex2 = new code.src.Complex(100.00499987500625d, 5225.935322982863d);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        complex2.imaginary = 52.009614495783374d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex16 = new code.src.Complex();
        complex16.real = 1L;
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex52 = complex16.add(complex51);
        double double53 = complex52.real;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex52.sub(complex59);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex59.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex69 = complex64.add(complex68);
        code.src.Complex complex70 = complex14.sub(complex68);
        complex14.imaginary = (-906.2883532154044d);
        double double73 = complex14.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 582.9143981028653d + "'", double53 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = code.src.Complex.polar(141.4213562373095d, 393.80842089009553d);
        code.src.Complex complex9 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex12 = new code.src.Complex((double) 100, (double) 10.0f);
        complex12.real = (byte) 1;
        complex12.imaginary = (short) 100;
        code.src.Complex complex17 = new code.src.Complex();
        complex17.real = 1L;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex52 = complex35.add(complex51);
        code.src.Complex complex53 = complex17.add(complex52);
        double double54 = complex17.imaginary;
        double double55 = complex17.imaginary;
        java.lang.String str56 = complex17.toString();
        code.src.Complex complex57 = complex12.sub(complex17);
        code.src.Complex complex60 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        double double68 = complex66.imaginary;
        java.lang.String str69 = complex66.toString();
        code.src.Complex complex70 = complex60.sub(complex66);
        code.src.Complex complex73 = new code.src.Complex((double) 100, (double) 10.0f);
        complex73.real = (byte) 1;
        code.src.Complex complex76 = complex66.multiply(complex73);
        code.src.Complex complex77 = complex57.sub(complex76);
        code.src.Complex complex78 = complex9.multiply(complex76);
        double double79 = complex78.abs();
        code.src.Complex complex80 = complex6.sub(complex78);
        code.src.Complex complex83 = code.src.Complex.polar(0.0d, (double) (short) 1);
        code.src.Complex complex84 = complex78.sub(complex83);
        code.src.Complex complex85 = complex2.sub(complex83);
        double double86 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-54.40211108893698d) + "'", double3 == (-54.40211108893698d));
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(1.0,0.0)" + "'", str56, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 43.756491210010616d + "'", double68 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str69, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 5225.935322982863d + "'", double79 == 5225.935322982863d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-83.90715290764524d) + "'", double86 == (-83.90715290764524d));
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        double double41 = complex40.imaginary;
        complex40.real = 290.95719905143267d;
        java.lang.String str44 = complex40.toString();
        double double45 = complex40.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str44, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 437.56491210010614d + "'", double45 == 437.56491210010614d);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) 1);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        java.lang.String str19 = complex5.toString();
        complex5.imaginary = '#';
        code.src.Complex complex24 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double25 = complex24.abs();
        code.src.Complex complex28 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str29 = complex28.toString();
        code.src.Complex complex30 = complex24.multiply(complex28);
        double double31 = complex28.real;
        code.src.Complex complex34 = new code.src.Complex((double) 100, (double) 10.0f);
        complex34.real = (byte) 1;
        complex34.imaginary = (short) 100;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex54.multiply(complex58);
        code.src.Complex complex60 = complex34.multiply(complex54);
        code.src.Complex complex63 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex64 = complex54.multiply(complex63);
        code.src.Complex complex65 = complex28.multiply(complex64);
        code.src.Complex complex66 = complex5.multiply(complex64);
        code.src.Complex complex67 = complex2.multiply(complex64);
        double double68 = complex64.real;
        complex64.real = 462.29664434568275d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(100.0,10.0)" + "'", str29, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 15118.903072407044d + "'", double68 == 15118.903072407044d);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 14.142135623730951d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        code.src.Complex complex2 = code.src.Complex.polar(213623.9212426372d, 103.87188973436588d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        java.lang.String str53 = complex46.toString();
        double double54 = complex46.real;
        double double55 = complex46.real;
        code.src.Complex complex58 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        complex58.imaginary = ' ';
        complex58.real = 58911.02077697936d;
        code.src.Complex complex63 = complex46.add(complex58);
        code.src.Complex complex64 = complex2.add(complex58);
        complex2.real = 530.9143981028653d;
        complex2.real = 8.230399429810259E7d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str53, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 28.09571990514327d + "'", double55 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        code.src.Complex complex2 = new code.src.Complex(572.0d, (double) 1L);
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        java.lang.String str72 = complex54.toString();
        double double73 = complex54.abs();
        code.src.Complex complex74 = complex3.multiply(complex54);
        code.src.Complex complex77 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex77.imaginary = (short) 0;
        complex77.real = 525.4704025737593d;
        double double82 = complex77.real;
        code.src.Complex complex83 = complex54.add(complex77);
        double double84 = complex54.abs();
        code.src.Complex complex87 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex88 = complex54.add(complex87);
        double double89 = complex88.imaginary;
        double double90 = complex88.real;
        code.src.Complex complex91 = complex2.multiply(complex88);
        code.src.Complex complex92 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex93 = complex91.add(complex92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 525.4704025737593d + "'", double73 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 525.4704025737593d + "'", double82 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 432.1247009912124d + "'", double89 == 432.1247009912124d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 282.5664837606681d + "'", double90 == 282.5664837606681d);
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex6 = complex2.sub(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        code.src.Complex complex10 = complex5.sub(complex9);
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex54.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex64 = complex59.add(complex63);
        complex59.real = 43.756491210010616d;
        complex59.imaginary = 100.0d;
        code.src.Complex complex71 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double72 = complex71.abs();
        code.src.Complex complex73 = complex59.add(complex71);
        java.lang.String str74 = complex71.toString();
        code.src.Complex complex77 = new code.src.Complex(625.6708893128759d, 170.71953646075502d);
        code.src.Complex complex78 = complex71.sub(complex77);
        code.src.Complex complex79 = complex10.add(complex71);
        complex71.real = 522.5935322982863d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(-0.0,0.0)" + "'", str74, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        code.src.Complex complex2 = new code.src.Complex(213623.9212426372d, 1122.8207680143216d);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.real;
        complex32.imaginary = (-54.40211108893698d);
        complex32.real = (-317.11773840932915d);
        java.lang.String str40 = complex32.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 581.9143981028653d + "'", double35 == 581.9143981028653d);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(-317.11773840932915,-54.40211108893698)" + "'", str40, "(-317.11773840932915,-54.40211108893698)");
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        code.src.Complex complex2 = new code.src.Complex((double) 10, 0.0d);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        code.src.Complex complex2 = new code.src.Complex(141.4213562373095d, 36.40054944640259d);
        complex2.real = 100.4987562112089d;
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 0, (double) 100L);
        double double3 = complex2.real;
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double7 = complex6.abs();
        code.src.Complex complex10 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str11 = complex10.toString();
        code.src.Complex complex12 = complex6.multiply(complex10);
        double double13 = complex10.real;
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        complex16.real = (byte) 1;
        complex16.imaginary = (short) 100;
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex36.multiply(complex40);
        code.src.Complex complex42 = complex16.multiply(complex36);
        code.src.Complex complex45 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex46 = complex36.multiply(complex45);
        code.src.Complex complex47 = complex10.multiply(complex46);
        code.src.Complex complex50 = new code.src.Complex(10.0d, (double) 10L);
        complex50.real = 290.95719905143267d;
        code.src.Complex complex53 = complex46.sub(complex50);
        double double54 = complex53.real;
        code.src.Complex complex55 = complex2.add(complex53);
        double double56 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(100.0,10.0)" + "'", str11, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 14827.945873355611d + "'", double54 == 14827.945873355611d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        code.src.Complex complex7 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        code.src.Complex complex45 = complex7.add(complex43);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        code.src.Complex complex79 = new code.src.Complex();
        code.src.Complex complex80 = complex78.add(complex79);
        code.src.Complex complex81 = complex45.add(complex79);
        code.src.Complex complex84 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str85 = complex84.toString();
        java.lang.String str86 = complex84.toString();
        code.src.Complex complex87 = complex45.sub(complex84);
        double double88 = complex87.abs();
        code.src.Complex complex89 = complex2.add(complex87);
        complex2.real = 335.9759148588362d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(100.0,10.0)" + "'", str85, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1018.3729221500101d + "'", double88 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex89);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex52.sub(complex61);
        code.src.Complex complex68 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex69 = complex52.sub(complex68);
        double double70 = complex52.real;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str64, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 280.95719905143267d + "'", double70 == 280.95719905143267d);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.imaginary = 100L;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex30.sub(complex50);
        code.src.Complex complex56 = complex13.add(complex55);
        code.src.Complex complex57 = complex5.multiply(complex55);
        java.lang.String str58 = complex5.toString();
        double double59 = complex5.abs();
        code.src.Complex complex60 = complex2.add(complex5);
        double double61 = complex60.real;
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(100.0,100.0)" + "'", str58, "(100.0,100.0)");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 141.4213562373095d + "'", double59 == 141.4213562373095d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 200.0d + "'", double61 == 200.0d);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double6 = complex5.imaginary;
        complex5.imaginary = (byte) 10;
        code.src.Complex complex9 = complex2.sub(complex5);
        code.src.Complex complex12 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        code.src.Complex complex50 = complex12.add(complex48);
        code.src.Complex complex53 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex12.add(complex53);
        code.src.Complex complex61 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex62 = complex12.multiply(complex61);
        code.src.Complex complex63 = complex2.sub(complex61);
        code.src.Complex complex66 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex67 = complex63.sub(complex66);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-317.11773840932915d) + "'", double6 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        complex2.real = 1051.4948429356753d;
        double double15 = complex2.real;
        complex2.real = 907.1298242002123d;
        complex2.imaginary = 240.82414161407507d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1051.4948429356753d + "'", double15 == 1051.4948429356753d);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        code.src.Complex complex2 = new code.src.Complex((-35.0d), 3624.868782803608d);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        code.src.Complex complex2 = new code.src.Complex((-409.4691921949629d), 875.1869567153606d);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        java.lang.String str72 = complex71.toString();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(0.0,0.0)" + "'", str72, "(0.0,0.0)");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) 1);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        java.lang.String str19 = complex5.toString();
        complex5.imaginary = '#';
        code.src.Complex complex24 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double25 = complex24.abs();
        code.src.Complex complex28 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str29 = complex28.toString();
        code.src.Complex complex30 = complex24.multiply(complex28);
        double double31 = complex28.real;
        code.src.Complex complex34 = new code.src.Complex((double) 100, (double) 10.0f);
        complex34.real = (byte) 1;
        complex34.imaginary = (short) 100;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex54.multiply(complex58);
        code.src.Complex complex60 = complex34.multiply(complex54);
        code.src.Complex complex63 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex64 = complex54.multiply(complex63);
        code.src.Complex complex65 = complex28.multiply(complex64);
        code.src.Complex complex66 = complex5.multiply(complex64);
        code.src.Complex complex67 = complex2.multiply(complex64);
        double double68 = complex64.real;
        complex64.imaginary = 875.1303955438267d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(100.0,10.0)" + "'", str29, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 15118.903072407044d + "'", double68 == 15118.903072407044d);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex33.sub(complex53);
        double double59 = complex33.abs();
        code.src.Complex complex60 = complex14.multiply(complex33);
        double double61 = complex60.abs();
        double double62 = complex60.imaginary;
        java.lang.String str63 = complex60.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str16, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 589.1068753368511d + "'", double17 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 525.4704025737593d + "'", double59 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 354080.08284857025d + "'", double61 == 354080.08284857025d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 352949.7590519551d + "'", double62 == 352949.7590519551d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(28269.6419364881,352949.7590519551)" + "'", str63, "(28269.6419364881,352949.7590519551)");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 100, (double) 10.0f);
        complex8.real = (byte) 1;
        complex8.imaginary = (short) 100;
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        double double50 = complex13.imaginary;
        double double51 = complex13.imaginary;
        java.lang.String str52 = complex13.toString();
        code.src.Complex complex53 = complex8.sub(complex13);
        code.src.Complex complex56 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex66 = complex56.sub(complex62);
        code.src.Complex complex69 = new code.src.Complex((double) 100, (double) 10.0f);
        complex69.real = (byte) 1;
        code.src.Complex complex72 = complex62.multiply(complex69);
        code.src.Complex complex73 = complex53.sub(complex72);
        code.src.Complex complex74 = complex5.multiply(complex72);
        code.src.Complex complex75 = complex2.sub(complex5);
        java.lang.String str76 = complex5.toString();
        double double77 = complex5.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(1.0,0.0)" + "'", str52, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(8.623188722876838,-5.063656411097588)" + "'", str76, "(8.623188722876838,-5.063656411097588)");
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-5.063656411097588d) + "'", double77 == (-5.063656411097588d));
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        code.src.Complex complex2 = code.src.Complex.polar(1077.3170643789679d, 291.95719905143267d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        double double29 = complex26.real;
        double double30 = complex26.real;
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex32 = complex2.multiply(complex26);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 280.95719905143267d + "'", double29 == 280.95719905143267d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 280.95719905143267d + "'", double30 == 280.95719905143267d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str31, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex32);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        code.src.Complex complex18 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        complex22.real = (byte) 1;
        complex22.imaginary = (short) 100;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex42.multiply(complex46);
        code.src.Complex complex48 = complex22.multiply(complex42);
        code.src.Complex complex51 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str52 = complex51.toString();
        code.src.Complex complex55 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex56 = complex51.sub(complex55);
        complex51.imaginary = (-1.0f);
        code.src.Complex complex59 = complex22.sub(complex51);
        double double60 = complex22.abs();
        java.lang.String str61 = complex22.toString();
        code.src.Complex complex62 = complex6.add(complex22);
        double double63 = complex22.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 290.95719905143267d + "'", double43 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(100.0,10.0)" + "'", str52, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.00499987500625d + "'", double60 == 100.00499987500625d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(1.0,100.0)" + "'", str61, "(1.0,100.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 1.0d + "'", double63 == 1.0d);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex50.abs();
        double double70 = complex50.abs();
        code.src.Complex complex73 = code.src.Complex.polar((double) (short) 1, 10.0d);
        code.src.Complex complex74 = complex50.multiply(complex73);
        complex73.imaginary = (byte) 1;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 525.4704025737593d + "'", double69 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (byte) 10);
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex8 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex9 = complex5.add(complex8);
        code.src.Complex complex10 = complex2.sub(complex9);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        java.lang.String str27 = complex13.toString();
        complex13.imaginary = '#';
        code.src.Complex complex32 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double33 = complex32.abs();
        code.src.Complex complex36 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str37 = complex36.toString();
        code.src.Complex complex38 = complex32.multiply(complex36);
        double double39 = complex36.real;
        code.src.Complex complex42 = new code.src.Complex((double) 100, (double) 10.0f);
        complex42.real = (byte) 1;
        complex42.imaginary = (short) 100;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        double double63 = complex62.real;
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex62.multiply(complex66);
        code.src.Complex complex68 = complex42.multiply(complex62);
        code.src.Complex complex71 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex72 = complex62.multiply(complex71);
        code.src.Complex complex73 = complex36.multiply(complex72);
        code.src.Complex complex74 = complex13.multiply(complex72);
        code.src.Complex complex75 = complex10.multiply(complex72);
        double double76 = complex75.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(100.0,10.0)" + "'", str37, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 290.95719905143267d + "'", double63 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 5723247.3589574285d + "'", double76 == 5723247.3589574285d);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), 87.48639198643185d);
        code.src.Complex complex5 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double6 = complex5.abs();
        code.src.Complex complex7 = complex2.sub(complex5);
        java.lang.String str8 = complex7.toString();
        complex7.imaginary = 994.0878718290595d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1018.3729221500101d + "'", double6 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(-1924.6612753654144,87.48639198643185)" + "'", str8, "(-1924.6612753654144,87.48639198643185)");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex2.add(complex43);
        code.src.Complex complex51 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex52 = complex2.multiply(complex51);
        java.lang.String str53 = complex52.toString();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(518.518416496393,883.0145252225883)" + "'", str53, "(518.518416496393,883.0145252225883)");
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.real = 525.4704025737593d;
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex18 = complex2.add(complex14);
        double double19 = complex2.imaginary;
        java.lang.String str20 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 525.4704025737593d + "'", double7 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str16, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 280.95719905143267d + "'", double17 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(525.4704025737593,0.0)" + "'", str20, "(525.4704025737593,0.0)");
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        java.lang.Class<?> wildcardClass33 = complex32.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        code.src.Complex complex2 = new code.src.Complex((-272.8614791462894d), 36.41428291206625d);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        code.src.Complex complex2 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        complex2.real = 0.0d;
        double double5 = complex2.real;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        double double13 = complex11.imaginary;
        java.lang.String str14 = complex11.toString();
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double18 = complex17.abs();
        double double19 = complex17.real;
        code.src.Complex complex20 = complex11.sub(complex17);
        code.src.Complex complex23 = code.src.Complex.polar(141.4213562373095d, (-272.8614791462894d));
        code.src.Complex complex24 = complex17.multiply(complex23);
        code.src.Complex complex25 = complex2.sub(complex24);
        complex25.real = 282.35849053254026d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 43.756491210010616d + "'", double13 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 28.09571990514327d + "'", double19 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        code.src.Complex complex2 = new code.src.Complex(354080.08284857025d, (double) (short) 1);
        complex2.real = 102.1420579389313d;
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), (double) 10);
        complex2.real = 101.9803902718557d;
        double double5 = complex2.imaginary;
        java.lang.Class<?> wildcardClass6 = complex2.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        code.src.Complex complex15 = new code.src.Complex();
        complex15.real = 1L;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex51 = complex15.add(complex50);
        double double52 = complex51.real;
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex51.sub(complex58);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex58.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex68 = complex63.add(complex67);
        code.src.Complex complex71 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex71.imaginary = (short) 0;
        complex71.imaginary = 100.0f;
        code.src.Complex complex76 = complex63.multiply(complex71);
        complex76.real = 213613.92147670433d;
        code.src.Complex complex79 = complex14.sub(complex76);
        java.lang.Class<?> wildcardClass80 = complex79.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 582.9143981028653d + "'", double52 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        double double46 = complex45.real;
        double double47 = complex45.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 554.8186781977221d + "'", double46 == 554.8186781977221d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 554.8186781977221d + "'", double47 == 554.8186781977221d);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        double double3 = complex2.abs();
        double double4 = complex2.imaginary;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        java.lang.String str13 = complex7.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        java.lang.String str37 = complex23.toString();
        code.src.Complex complex38 = complex20.add(complex23);
        code.src.Complex complex39 = complex7.sub(complex23);
        double double40 = complex39.real;
        code.src.Complex complex41 = new code.src.Complex();
        complex41.real = 1L;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = complex41.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex77.sub(complex84);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex84.add(complex89);
        complex89.imaginary = (short) 100;
        code.src.Complex complex93 = complex39.sub(complex89);
        code.src.Complex complex94 = complex2.multiply(complex89);
        java.lang.Class<?> wildcardClass95 = complex89.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 141.4213562373095d + "'", double3 == 141.4213562373095d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 582.9143981028653d + "'", double78 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        double double8 = complex2.real;
        code.src.Complex complex11 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex12 = complex2.multiply(complex11);
        double double13 = complex12.real;
        java.lang.Class<?> wildcardClass14 = complex12.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 280.95719905143267d + "'", double13 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        code.src.Complex complex2 = new code.src.Complex(63419.15994135504d, (-489.10687533685115d));
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        double double42 = complex41.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + (-262.8614791462894d) + "'", double42 == (-262.8614791462894d));
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        code.src.Complex complex2 = code.src.Complex.polar(520.0d, 426446.1210112362d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        code.src.Complex complex2 = code.src.Complex.polar((-280.95719905143267d), 36.40054944640259d);
        complex2.real = 354080.08284857025d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        complex31.imaginary = 100L;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex56.sub(complex76);
        code.src.Complex complex82 = complex39.add(complex81);
        code.src.Complex complex83 = complex31.multiply(complex81);
        code.src.Complex complex84 = complex2.sub(complex31);
        complex84.real = 14.841058233505056d;
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex2.abs();
        code.src.Complex complex19 = new code.src.Complex((double) 10, (double) 10);
        complex19.imaginary = 100;
        code.src.Complex complex22 = complex2.add(complex19);
        double double23 = complex22.abs();
        code.src.Complex complex26 = code.src.Complex.polar(213623.9212426372d, 103.87188973436588d);
        code.src.Complex complex29 = new code.src.Complex(0.2324571024365446d, 58.01650108462993d);
        code.src.Complex complex30 = complex26.add(complex29);
        code.src.Complex complex31 = complex22.multiply(complex29);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 101.9803902718557d + "'", double23 == 101.9803902718557d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex5 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex6.imaginary = 252.8614791462894d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 10, 612077.1638882305d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        code.src.Complex complex2 = code.src.Complex.polar(213613.92387355183d, 14827.945873355611d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        java.lang.String str41 = complex2.toString();
        code.src.Complex complex44 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        java.lang.String str78 = complex60.toString();
        double double79 = complex60.abs();
        double double80 = complex60.real;
        complex60.imaginary = 582.9143981028653d;
        complex60.real = 0.0f;
        code.src.Complex complex85 = complex44.sub(complex60);
        code.src.Complex complex86 = complex2.multiply(complex85);
        double double87 = complex86.real;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(0.0,32.0)" + "'", str41, "(0.0,32.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str78, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 290.95719905143267d + "'", double80 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 17754.197702327107d + "'", double87 == 17754.197702327107d);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 907.1298242002123d;
        complex3.imaginary = 52.0d;
        code.src.Complex complex8 = complex2.add(complex3);
        complex8.real = 0.0d;
        java.lang.String str11 = complex8.toString();
        complex8.real = ' ';
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(0.0,52.0)" + "'", str11, "(0.0,52.0)");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        code.src.Complex complex2 = new code.src.Complex((-3171.1773840932915d), 100.0d);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        code.src.Complex complex2 = code.src.Complex.polar((-468.7234411152983d), 8.230399429810259E7d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 84.21177072733951d + "'", double3 == 84.21177072733951d);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.imaginary = 'a';
        java.lang.String str9 = complex6.toString();
        double double10 = complex6.real;
        code.src.Complex complex13 = new code.src.Complex((double) 1L, 437.56491210010614d);
        code.src.Complex complex14 = complex6.multiply(complex13);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(-198.14967628541848,97.0)" + "'", str9, "(-198.14967628541848,97.0)");
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-198.14967628541848d) + "'", double10 == (-198.14967628541848d));
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        code.src.Complex complex2 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double10 = complex9.imaginary;
        code.src.Complex complex11 = complex5.add(complex9);
        code.src.Complex complex12 = new code.src.Complex();
        complex12.real = 1L;
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex48 = complex12.add(complex47);
        code.src.Complex complex49 = complex9.sub(complex12);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        java.lang.String str73 = complex59.toString();
        code.src.Complex complex74 = complex56.add(complex59);
        code.src.Complex complex75 = complex49.add(complex74);
        double double76 = complex75.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 741.8060216641154d + "'", double76 == 741.8060216641154d);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex14.imaginary;
        double double52 = complex14.imaginary;
        java.lang.String str53 = complex14.toString();
        code.src.Complex complex54 = complex9.sub(complex14);
        code.src.Complex complex57 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        double double65 = complex63.imaginary;
        java.lang.String str66 = complex63.toString();
        code.src.Complex complex67 = complex57.sub(complex63);
        code.src.Complex complex70 = new code.src.Complex((double) 100, (double) 10.0f);
        complex70.real = (byte) 1;
        code.src.Complex complex73 = complex63.multiply(complex70);
        code.src.Complex complex74 = complex54.sub(complex73);
        code.src.Complex complex75 = complex6.sub(complex74);
        code.src.Complex complex78 = code.src.Complex.polar((-317.11773840932915d), (double) 0.0f);
        double double79 = complex78.real;
        code.src.Complex complex80 = complex6.add(complex78);
        complex6.imaginary = 1L;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(1.0,0.0)" + "'", str53, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 43.756491210010616d + "'", double65 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str66, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + (-317.11773840932915d) + "'", double79 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        code.src.Complex complex2 = new code.src.Complex((-5.063656411097588d), (double) (byte) 10);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.abs();
        double double17 = complex15.real;
        java.lang.String str18 = complex15.toString();
        complex15.imaginary = 1078.895181758881d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 525.4704025737593d + "'", double16 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 290.95719905143267d + "'", double17 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str18, "(290.95719905143267,437.56491210010614)");
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex37 = complex15.sub(complex36);
        double double38 = complex36.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + (-0.0d) + "'", double38 == (-0.0d));
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        code.src.Complex complex2 = new code.src.Complex(27.295120203343835d, 148.66068747318505d);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), (double) 10);
        code.src.Complex complex3 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex4 = complex2.multiply(complex3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex2.imaginary = 0.0f;
        complex2.real = 288.43610241435874d;
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        code.src.Complex complex2 = code.src.Complex.polar(213623.9212426372d, 103.87188973436588d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        java.lang.String str53 = complex46.toString();
        double double54 = complex46.real;
        double double55 = complex46.real;
        code.src.Complex complex58 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        complex58.imaginary = ' ';
        complex58.real = 58911.02077697936d;
        code.src.Complex complex63 = complex46.add(complex58);
        code.src.Complex complex64 = complex2.add(complex58);
        double double65 = complex64.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str53, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 28.09571990514327d + "'", double55 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-42268.69049101621d) + "'", double65 == (-42268.69049101621d));
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        code.src.Complex complex2 = code.src.Complex.polar(352.8614791462894d, (-495.7163425468028d));
        double double3 = complex2.real;
        double double4 = complex2.imaginary;
        complex2.imaginary = 284.34411937270323d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 279.7722729260128d + "'", double3 == 279.7722729260128d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 215.031855238055d + "'", double4 == 215.031855238055d);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        complex40.imaginary = (-1);
        code.src.Complex complex81 = new code.src.Complex(10.0d, 875.1298242002123d);
        code.src.Complex complex82 = complex40.sub(complex81);
        complex40.real = 1118.3729221500103d;
        double double85 = complex40.imaginary;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1.0d) + "'", double85 == (-1.0d));
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        code.src.Complex complex2 = new code.src.Complex(430.3716436914759d, 2.036599186399486d);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        code.src.Complex complex2 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex41 = complex2.add(complex39);
        double double42 = complex39.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 875.1298242002123d + "'", double42 == 875.1298242002123d);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex52.sub(complex61);
        double double66 = complex52.imaginary;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str64, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 437.56491210010614d + "'", double66 == 437.56491210010614d);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        code.src.Complex complex2 = new code.src.Complex(293.2270309501752d, 14834.400624071903d);
        double double3 = complex2.abs();
        java.lang.String str4 = complex2.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 14837.298405273943d + "'", double3 == 14837.298405273943d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(293.2270309501752,14834.400624071903)" + "'", str4, "(293.2270309501752,14834.400624071903)");
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        code.src.Complex complex20 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex21 = new code.src.Complex();
        complex21.real = 1L;
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex56 = complex39.add(complex55);
        code.src.Complex complex57 = complex21.add(complex56);
        code.src.Complex complex58 = complex20.add(complex56);
        double double59 = complex58.real;
        code.src.Complex complex60 = complex2.add(complex58);
        complex2.real = 1.6424065671921217E8d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 581.9143981028653d + "'", double59 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex60);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        double double5 = complex2.abs();
        double double6 = complex2.real;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        code.src.Complex complex14 = complex2.multiply(complex9);
        complex9.imaginary = 12809.571990514327d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0d) + "'", double6 == (-0.0d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        code.src.Complex complex2 = new code.src.Complex(291.13071236105446d, 613.7449014003101d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        code.src.Complex complex2 = code.src.Complex.polar(907.1298242002123d, 2022.0451520447884d);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 907.1298242002123d + "'", double3 == 907.1298242002123d);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, 139.31618714277246d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        code.src.Complex complex53 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        double double57 = complex56.imaginary;
        code.src.Complex complex58 = complex53.multiply(complex56);
        code.src.Complex complex59 = complex50.multiply(complex56);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        complex62.imaginary = (-1.0f);
        double double78 = complex62.real;
        double double79 = complex62.real;
        complex62.imaginary = 141.4213562373095d;
        code.src.Complex complex84 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex84.imaginary = (byte) 1;
        code.src.Complex complex87 = complex62.multiply(complex84);
        code.src.Complex complex88 = complex59.sub(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, 0.0d);
        java.lang.String str92 = complex91.toString();
        code.src.Complex complex93 = complex88.multiply(complex91);
        java.lang.String str94 = complex93.toString();
        double double95 = complex93.abs();
        double double96 = complex93.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 35.0d + "'", double57 == 35.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(10.0,0.0)" + "'", str92, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(138788.38621896296,-326331.5036074496)" + "'", str94, "(138788.38621896296,-326331.5036074496)");
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 354618.7620473047d + "'", double95 == 354618.7620473047d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 354618.7620473047d + "'", double96 == 354618.7620473047d);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double3 = complex2.abs();
        complex2.real = 21990.294301380844d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        code.src.Complex complex2 = code.src.Complex.polar(1246.4447622874072d, 9.866275920404853d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double6 = complex5.abs();
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex11 = complex5.multiply(complex9);
        java.lang.String str12 = complex5.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 100, (double) 10.0f);
        complex15.real = (byte) 1;
        complex15.imaginary = (short) 100;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        double double36 = complex35.real;
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex35.multiply(complex39);
        code.src.Complex complex41 = complex15.multiply(complex35);
        code.src.Complex complex44 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str45 = complex44.toString();
        code.src.Complex complex48 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex49 = complex44.sub(complex48);
        complex44.imaginary = (-1.0f);
        code.src.Complex complex52 = complex15.sub(complex44);
        code.src.Complex complex53 = complex5.sub(complex52);
        double double54 = complex53.real;
        code.src.Complex complex55 = complex2.add(complex53);
        double double56 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(-0.0,0.0)" + "'", str12, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(100.0,10.0)" + "'", str45, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 99.0d + "'", double54 == 99.0d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-1126.926425076796d) + "'", double56 == (-1126.926425076796d));
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        code.src.Complex complex2 = new code.src.Complex((-0.0d), 0.0d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, 8.373954245956892d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        code.src.Complex complex53 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        double double57 = complex56.imaginary;
        code.src.Complex complex58 = complex53.multiply(complex56);
        code.src.Complex complex59 = complex50.multiply(complex56);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        complex62.imaginary = (-1.0f);
        double double78 = complex62.real;
        double double79 = complex62.real;
        complex62.imaginary = 141.4213562373095d;
        code.src.Complex complex84 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex84.imaginary = (byte) 1;
        code.src.Complex complex87 = complex62.multiply(complex84);
        code.src.Complex complex88 = complex59.sub(complex87);
        complex59.imaginary = 994.0878718290595d;
        java.lang.Class<?> wildcardClass91 = complex59.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 35.0d + "'", double57 == 35.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        code.src.Complex complex2 = new code.src.Complex(220.6179825218609d, 613.7449014003101d);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double61 = complex60.abs();
        code.src.Complex complex62 = complex48.add(complex60);
        java.lang.String str63 = complex60.toString();
        code.src.Complex complex66 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex69 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex70 = complex66.add(complex69);
        double double71 = complex70.imaginary;
        double double72 = complex70.abs();
        double double73 = complex70.abs();
        code.src.Complex complex74 = complex60.add(complex70);
        java.lang.Class<?> wildcardClass75 = complex70.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(-0.0,0.0)" + "'", str63, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 235.63140523513093d + "'", double71 == 235.63140523513093d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 1078.895181758881d + "'", double72 == 1078.895181758881d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 1078.895181758881d + "'", double73 == 1078.895181758881d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        code.src.Complex complex44 = code.src.Complex.polar(875.1298242002123d, (double) (-1L));
        code.src.Complex complex45 = complex41.sub(complex44);
        java.lang.String str46 = complex44.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(472.8346619493545,-736.396355004514)" + "'", str46, "(472.8346619493545,-736.396355004514)");
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        code.src.Complex complex2 = new code.src.Complex((-83.90715290764524d), 517.6532504767864d);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex29.multiply(complex33);
        code.src.Complex complex35 = complex9.multiply(complex29);
        code.src.Complex complex36 = complex2.sub(complex29);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex69 = complex52.add(complex68);
        double double70 = complex52.real;
        double double71 = complex52.real;
        java.lang.String str72 = complex52.toString();
        complex52.real = 14827.945873355611d;
        code.src.Complex complex75 = complex2.sub(complex52);
        complex2.real = 0.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 290.95719905143267d + "'", double70 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 290.95719905143267d + "'", double71 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        code.src.Complex complex2 = new code.src.Complex(1.0d, (double) ' ');
        complex2.imaginary = 907.1298242002123d;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, (double) '#');
        double double8 = complex7.imaginary;
        code.src.Complex complex11 = new code.src.Complex((double) 100, (double) 10.0f);
        complex11.imaginary = 100L;
        java.lang.String str14 = complex11.toString();
        code.src.Complex complex15 = complex7.multiply(complex11);
        code.src.Complex complex18 = code.src.Complex.polar(663.590879631022d, (double) ' ');
        code.src.Complex complex19 = complex15.sub(complex18);
        code.src.Complex complex20 = complex2.multiply(complex18);
        code.src.Complex complex23 = new code.src.Complex(213613.9236394847d, 100.0d);
        code.src.Complex complex26 = new code.src.Complex(0.0d, (double) 'a');
        code.src.Complex complex27 = complex23.sub(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex38.real = 10;
        code.src.Complex complex41 = complex30.multiply(complex38);
        code.src.Complex complex44 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex45 = new code.src.Complex();
        complex45.real = 1L;
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        code.src.Complex complex81 = complex45.add(complex80);
        double double82 = complex81.real;
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex81.sub(complex88);
        double double91 = complex81.imaginary;
        code.src.Complex complex92 = complex44.sub(complex81);
        code.src.Complex complex93 = complex38.add(complex44);
        code.src.Complex complex96 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex97 = complex44.add(complex96);
        code.src.Complex complex98 = complex23.sub(complex44);
        code.src.Complex complex99 = complex18.sub(complex23);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 35.0d + "'", double8 == 35.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(100.0,100.0)" + "'", str14, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 582.9143981028653d + "'", double82 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 875.1298242002123d + "'", double91 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertNotNull(complex98);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        complex43.real = (-1120.0d);
        code.src.Complex complex50 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str51 = complex50.toString();
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double55 = complex54.abs();
        double double56 = complex54.real;
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        java.lang.String str80 = complex75.toString();
        code.src.Complex complex83 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex87 = complex83.multiply(complex86);
        code.src.Complex complex88 = complex75.add(complex87);
        code.src.Complex complex89 = complex72.add(complex88);
        java.lang.String str90 = complex72.toString();
        double double91 = complex72.abs();
        double double92 = complex72.real;
        code.src.Complex complex93 = complex54.sub(complex72);
        code.src.Complex complex94 = complex50.add(complex54);
        code.src.Complex complex95 = complex43.add(complex94);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(1.0,290.95719905143267)" + "'", str51, "(1.0,290.95719905143267)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 52.0d + "'", double55 == 52.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 28.09571990514327d + "'", double56 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(10.0,0.0)" + "'", str80, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str90, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 525.4704025737593d + "'", double91 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 290.95719905143267d + "'", double92 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        code.src.Complex complex2 = code.src.Complex.polar(1.4142135623730951d, 320.1223055909404d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        double double8 = complex2.real;
        code.src.Complex complex11 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex12 = complex2.multiply(complex11);
        double double13 = complex12.imaginary;
        complex12.imaginary = (-438.56491210010614d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 9071.298242002124d + "'", double13 == 9071.298242002124d);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double57 = complex56.abs();
        code.src.Complex complex60 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str61 = complex60.toString();
        code.src.Complex complex62 = complex56.multiply(complex60);
        code.src.Complex complex63 = complex52.add(complex56);
        java.lang.String str64 = complex63.toString();
        double double65 = complex63.abs();
        java.lang.String str66 = complex63.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(100.0,10.0)" + "'", str61, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,35.0)" + "'", str64, "(10.0,35.0)");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 36.40054944640259d + "'", double65 == 36.40054944640259d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(10.0,35.0)" + "'", str66, "(10.0,35.0)");
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        code.src.Complex complex50 = new code.src.Complex();
        complex50.real = 1L;
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = complex50.add(complex85);
        code.src.Complex complex87 = complex48.sub(complex85);
        double double88 = complex87.real;
        double double89 = complex87.imaginary;
        complex87.imaginary = 100.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-272.8614791462894d) + "'", double88 == (-272.8614791462894d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-393.80842089009553d) + "'", double89 == (-393.80842089009553d));
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        java.lang.String str9 = complex6.toString();
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        java.lang.String str43 = complex25.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex50 = complex25.sub(complex46);
        code.src.Complex complex51 = complex6.sub(complex46);
        code.src.Complex complex54 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        complex54.real = 1;
        code.src.Complex complex57 = complex51.multiply(complex54);
        double double58 = complex57.imaginary;
        double double59 = complex57.imaginary;
        java.lang.Class<?> wildcardClass60 = complex57.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str9, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str43, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(-0.0,0.0)" + "'", str49, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 8101.177047836208d + "'", double58 == 8101.177047836208d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 8101.177047836208d + "'", double59 == 8101.177047836208d);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 663.590879631022d);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex44);
        double double90 = complex89.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + (-580728.1698323605d) + "'", double90 == (-580728.1698323605d));
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, (double) 10.0f);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex9.imaginary;
        complex9.imaginary = 572.0d;
        complex9.real = (byte) 0;
        code.src.Complex complex15 = complex2.sub(complex9);
        double double16 = complex9.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 437.56491210010614d + "'", double10 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 572.0d + "'", double16 == 572.0d);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        complex45.real = 0.0d;
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double51 = complex50.abs();
        double double52 = complex50.real;
        code.src.Complex complex55 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex56 = complex50.multiply(complex55);
        code.src.Complex complex57 = complex45.add(complex50);
        java.lang.String str58 = complex50.toString();
        double double59 = complex50.abs();
        double double60 = complex50.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 28.09571990514327d + "'", double52 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str58, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 28.09571990514327d + "'", double60 == 28.09571990514327d);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) -1, 100.4987562112089d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        java.lang.String str11 = complex5.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        java.lang.String str35 = complex21.toString();
        code.src.Complex complex36 = complex18.add(complex21);
        code.src.Complex complex37 = complex5.sub(complex21);
        code.src.Complex complex38 = complex2.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex75 = complex41.add(complex57);
        code.src.Complex complex78 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex78.imaginary = (short) 0;
        complex78.imaginary = 100.0f;
        code.src.Complex complex85 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str86 = complex85.toString();
        code.src.Complex complex89 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex90 = complex85.sub(complex89);
        code.src.Complex complex91 = complex78.multiply(complex90);
        java.lang.String str92 = complex90.toString();
        code.src.Complex complex93 = complex41.sub(complex90);
        complex41.imaginary = (byte) -1;
        double double96 = complex41.imaginary;
        code.src.Complex complex97 = complex2.sub(complex41);
        double double98 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str92, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-1.0d) + "'", double96 == (-1.0d));
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 1.0d + "'", double98 == 1.0d);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        complex31.imaginary = 100L;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex56.sub(complex76);
        code.src.Complex complex82 = complex39.add(complex81);
        code.src.Complex complex83 = complex31.multiply(complex81);
        code.src.Complex complex84 = complex2.sub(complex31);
        java.lang.Class<?> wildcardClass85 = complex31.getClass();
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 1.4142135623730951d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        code.src.Complex complex16 = complex7.multiply(complex14);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        double double41 = complex40.imaginary;
        code.src.Complex complex42 = complex32.sub(complex40);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex65.sub(complex85);
        code.src.Complex complex91 = complex48.add(complex90);
        code.src.Complex complex92 = complex42.add(complex48);
        code.src.Complex complex93 = complex14.sub(complex48);
        java.lang.String str94 = complex93.toString();
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(252.8614791462894,393.80842089009553)" + "'", str94, "(252.8614791462894,393.80842089009553)");
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) (short) -1, (double) (-1L));
        complex48.real = 290.95719905143267d;
        code.src.Complex complex51 = complex43.sub(complex48);
        double double52 = complex51.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-262.8614791462894d) + "'", double52 == (-262.8614791462894d));
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex18.real;
        double double37 = complex18.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = complex18.sub(complex53);
        double double72 = complex53.imaginary;
        code.src.Complex complex73 = complex2.add(complex53);
        double double74 = complex73.real;
        double double75 = complex73.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 437.56491210010614d + "'", double72 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 289.95719905143267d + "'", double74 == 289.95719905143267d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 437.56491210010614d + "'", double75 == 437.56491210010614d);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex57 = complex53.add(complex56);
        double double58 = complex57.imaginary;
        code.src.Complex complex61 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex61.imaginary = 10L;
        double double64 = complex61.real;
        code.src.Complex complex65 = complex57.add(complex61);
        double double66 = complex65.abs();
        complex65.imaginary = 528.7686600293723d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 88.75649121001061d + "'", double58 == 88.75649121001061d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 114.57729804551057d + "'", double66 == 114.57729804551057d);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        java.lang.String str49 = complex48.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex66 = complex48.sub(complex65);
        double double67 = complex66.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(309.0529189565759,481.32140331011675)" + "'", str49, "(309.0529189565759,481.32140331011675)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 47.35066633002258d + "'", double67 == 47.35066633002258d);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        code.src.Complex complex2 = new code.src.Complex(52.009614495783374d, 522.5935322982863d);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex35.abs();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        code.src.Complex complex85 = complex60.sub(complex80);
        code.src.Complex complex86 = complex43.add(complex85);
        double double87 = complex86.abs();
        double double88 = complex86.imaginary;
        code.src.Complex complex89 = complex35.sub(complex86);
        double double90 = complex35.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1050.9408051475186d + "'", double37 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 572.0d + "'", double87 == 572.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 481.32140331011675d + "'", double88 == 481.32140331011675d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 581.9143981028653d + "'", double90 == 581.9143981028653d);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = '4';
        double double5 = complex2.imaginary;
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex45 = new code.src.Complex(32.0d, 214489.24976920983d);
        code.src.Complex complex46 = complex6.add(complex45);
        complex6.real = 1051.4948429356753d;
        code.src.Complex complex49 = complex2.add(complex6);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex49);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        code.src.Complex complex2 = code.src.Complex.polar(58911.02077697936d, 437.56605478621583d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        code.src.Complex complex8 = complex2.multiply(complex7);
        java.lang.Class<?> wildcardClass9 = complex7.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str32 = complex31.toString();
        code.src.Complex complex35 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex36 = complex31.sub(complex35);
        complex31.imaginary = (-1.0f);
        code.src.Complex complex39 = complex2.sub(complex31);
        code.src.Complex complex42 = code.src.Complex.polar(28.09571990514327d, (double) 10L);
        code.src.Complex complex43 = complex39.add(complex42);
        complex43.imaginary = 10.04987562112089d;
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(100.0,10.0)" + "'", str32, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        double double16 = complex15.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 67383.44940348352d + "'", double16 == 67383.44940348352d);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        double double51 = complex39.abs();
        java.lang.Class<?> wildcardClass52 = complex39.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1051.4948429356753d + "'", double51 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex47.imaginary;
        code.src.Complex complex49 = complex40.sub(complex47);
        complex47.imaginary = 28.09571990514327d;
        double double52 = complex47.real;
        code.src.Complex complex55 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double56 = complex55.abs();
        code.src.Complex complex57 = complex47.sub(complex55);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 437.56491210010614d + "'", double48 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 280.95719905143267d + "'", double52 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1018.3729221500101d + "'", double56 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex57);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        code.src.Complex complex2 = new code.src.Complex(906.2883532154044d, (-437.56491210010614d));
        complex2.real = 291.12899491437645d;
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 320.1223055909404d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 1, 10.0d);
        complex2.imaginary = (-0.0d);
        double double5 = complex2.imaginary;
        code.src.Complex complex8 = code.src.Complex.polar((double) (short) -1, 52.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        double double28 = complex27.real;
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        double double36 = complex35.imaginary;
        code.src.Complex complex37 = complex27.sub(complex35);
        double double38 = complex27.imaginary;
        code.src.Complex complex39 = complex11.multiply(complex27);
        code.src.Complex complex40 = complex8.sub(complex11);
        double double41 = complex11.imaginary;
        code.src.Complex complex42 = complex2.multiply(complex11);
        double double43 = complex42.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-0.0d) + "'", double5 == (-0.0d));
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 290.95719905143267d + "'", double28 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 437.56491210010614d + "'", double36 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 437.56491210010614d + "'", double38 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-0.0d) + "'", double41 == (-0.0d));
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.8390715290764524d + "'", double43 == 0.8390715290764524d);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex0.imaginary;
        double double38 = complex0.imaginary;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        code.src.Complex complex72 = new code.src.Complex();
        code.src.Complex complex73 = complex71.add(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        double double81 = complex79.imaginary;
        java.lang.String str82 = complex79.toString();
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double86 = complex85.abs();
        double double87 = complex85.real;
        code.src.Complex complex88 = complex79.sub(complex85);
        code.src.Complex complex89 = complex72.sub(complex79);
        code.src.Complex complex90 = complex0.add(complex79);
        double double91 = complex79.real;
        complex79.real = 'a';
        double double94 = complex79.imaginary;
        double double95 = complex79.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 43.756491210010616d + "'", double81 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str82, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 52.0d + "'", double86 == 52.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 28.09571990514327d + "'", double87 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 28.09571990514327d + "'", double91 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 43.756491210010616d + "'", double94 == 43.756491210010616d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 97.0d + "'", double95 == 97.0d);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (double) '4');
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(0.0,52.0)" + "'", str3, "(0.0,52.0)");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        code.src.Complex complex2 = code.src.Complex.polar(291.13071236105446d, (-393.80842089009553d));
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex5.real = 875.1298242002123d;
        complex5.real = 36.40054944640259d;
        code.src.Complex complex12 = code.src.Complex.polar(0.0d, 280.95719905143267d);
        complex12.real = (-288.4361024143587d);
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        double double31 = complex30.real;
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        double double39 = complex38.imaginary;
        code.src.Complex complex40 = complex30.sub(complex38);
        complex38.imaginary = 0.0d;
        code.src.Complex complex45 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex45.imaginary = 10L;
        double double48 = complex45.real;
        code.src.Complex complex49 = complex38.add(complex45);
        code.src.Complex complex50 = complex12.sub(complex49);
        code.src.Complex complex51 = complex5.multiply(complex50);
        code.src.Complex complex52 = complex2.multiply(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 290.95719905143267d + "'", double31 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 437.56491210010614d + "'", double39 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        code.src.Complex complex2 = code.src.Complex.polar((-906.2883532154044d), 0.1820978992688351d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        code.src.Complex complex2 = code.src.Complex.polar(1051.4948429356753d, 581.9143981028653d);
        complex2.imaginary = (-1);
        code.src.Complex complex7 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex10 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex11 = complex7.multiply(complex10);
        complex11.real = 324.9608082617091d;
        code.src.Complex complex14 = complex2.add(complex11);
        complex2.imaginary = 483.75822480116756d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex56.imaginary = (short) 0;
        complex56.imaginary = 100.0f;
        code.src.Complex complex61 = complex48.multiply(complex56);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        double double86 = complex85.imaginary;
        code.src.Complex complex87 = complex77.sub(complex85);
        code.src.Complex complex90 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex91 = complex77.multiply(complex90);
        code.src.Complex complex92 = complex48.multiply(complex90);
        complex92.imaginary = '4';
        complex92.imaginary = 1004.987562112089d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 290.95719905143267d + "'", double78 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 437.56491210010614d + "'", double86 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        code.src.Complex complex2 = new code.src.Complex(100.00499987500625d, 52.0d);
        double double3 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 112.71645842555559d + "'", double3 == 112.71645842555559d);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        code.src.Complex complex2 = new code.src.Complex(338637.20487324166d, 1046.2741264173828d);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(338637.20487324166,1046.2741264173828)" + "'", str3, "(338637.20487324166,1046.2741264173828)");
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, 462.29664434568275d);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, (-393.80842089009553d));
        complex2.real = (-0.0d);
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        code.src.Complex complex38 = new code.src.Complex();
        code.src.Complex complex39 = complex37.add(complex38);
        java.lang.String str40 = complex37.toString();
        code.src.Complex complex41 = complex2.multiply(complex37);
        code.src.Complex complex44 = new code.src.Complex(213613.9236394847d, 100.0d);
        code.src.Complex complex47 = new code.src.Complex(0.0d, (double) 'a');
        code.src.Complex complex48 = complex44.sub(complex47);
        code.src.Complex complex49 = complex37.add(complex44);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str40, "(581.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        code.src.Complex complex24 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex24.imaginary = (byte) 1;
        code.src.Complex complex27 = complex2.multiply(complex24);
        code.src.Complex complex30 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        double double38 = complex36.imaginary;
        java.lang.String str39 = complex36.toString();
        code.src.Complex complex40 = complex30.sub(complex36);
        complex30.real = 1051.4948429356753d;
        double double43 = complex30.real;
        complex30.real = 907.1298242002123d;
        code.src.Complex complex46 = complex27.sub(complex30);
        double double47 = complex27.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 43.756491210010616d + "'", double38 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str39, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 1051.4948429356753d + "'", double43 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 200.4993765576342d + "'", double47 == 200.4993765576342d);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        code.src.Complex complex2 = code.src.Complex.polar(9.013372407959515d, 36.40054944640259d);
        code.src.Complex complex5 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex8 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex9 = new code.src.Complex();
        complex9.real = 1L;
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex45 = complex9.add(complex44);
        double double46 = complex45.real;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex45.sub(complex52);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex52.add(complex57);
        code.src.Complex complex59 = complex8.add(complex57);
        code.src.Complex complex60 = complex5.multiply(complex57);
        double double61 = complex57.abs();
        double double62 = complex57.abs();
        code.src.Complex complex65 = code.src.Complex.polar(589.1068753368511d, (double) (byte) -1);
        code.src.Complex complex66 = complex57.multiply(complex65);
        code.src.Complex complex67 = complex2.multiply(complex65);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 582.9143981028653d + "'", double46 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 52.0d + "'", double61 == 52.0d);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        code.src.Complex complex2 = new code.src.Complex(525.4704025737593d, (double) 10L);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(525.4704025737593,10.0)" + "'", str3, "(525.4704025737593,10.0)");
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex5 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex8 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex9 = complex5.add(complex8);
        complex9.real = 0.0d;
        code.src.Complex complex14 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex14.imaginary = (short) 0;
        complex14.imaginary = 100.0f;
        code.src.Complex complex21 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str22 = complex21.toString();
        code.src.Complex complex25 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex26 = complex21.sub(complex25);
        code.src.Complex complex27 = complex14.multiply(complex26);
        java.lang.String str28 = complex26.toString();
        double double29 = complex26.real;
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex62 = complex45.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex45.sub(complex65);
        double double71 = complex45.abs();
        code.src.Complex complex72 = complex26.multiply(complex45);
        code.src.Complex complex73 = complex9.add(complex45);
        java.lang.String str74 = complex73.toString();
        code.src.Complex complex75 = complex2.multiply(complex73);
        double double76 = complex73.imaginary;
        java.lang.String str77 = complex73.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(100.0,10.0)" + "'", str22, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str28, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 589.1068753368511d + "'", double29 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 525.4704025737593d + "'", double71 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str74, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-468.7234411152983d) + "'", double76 == (-468.7234411152983d));
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str77, "(290.95719905143267,-468.7234411152983)");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex7 = complex2.sub(complex6);
        complex2.imaginary = (-1.0f);
        double double10 = complex2.real;
        complex2.real = 63418.367087202416d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex2.imaginary = 10L;
        code.src.Complex complex7 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex10 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        code.src.Complex complex48 = complex10.add(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double52 = complex51.abs();
        code.src.Complex complex53 = complex10.add(complex51);
        code.src.Complex complex54 = complex7.add(complex10);
        code.src.Complex complex55 = complex2.sub(complex54);
        code.src.Complex complex58 = new code.src.Complex(525.4704025737593d, (double) 10L);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex62 = new code.src.Complex(214489.24976920983d, (double) (-1));
        code.src.Complex complex63 = complex55.add(complex62);
        complex55.real = (-1L);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        java.lang.String str82 = complex68.toString();
        complex68.real = (-393.80842089009553d);
        code.src.Complex complex85 = complex55.multiply(complex68);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(10.0,0.0)" + "'", str82, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex85);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) '#');
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        complex6.imaginary = 100L;
        java.lang.String str9 = complex6.toString();
        code.src.Complex complex10 = complex2.multiply(complex6);
        code.src.Complex complex13 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        code.src.Complex complex51 = complex13.add(complex49);
        double double52 = complex51.abs();
        code.src.Complex complex53 = complex10.add(complex51);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex64.real = 10;
        code.src.Complex complex67 = complex56.multiply(complex64);
        java.lang.String str68 = complex56.toString();
        code.src.Complex complex71 = code.src.Complex.polar(317.11773840932915d, 663.590879631022d);
        code.src.Complex complex72 = complex56.multiply(complex71);
        double double73 = complex72.abs();
        code.src.Complex complex74 = complex53.add(complex72);
        double double75 = complex74.abs();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(100.0,100.0)" + "'", str9, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1077.733215908709d + "'", double52 == 1077.733215908709d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 3171.1773840932915d + "'", double73 == 3171.1773840932915d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5447.9704608604425d + "'", double75 == 5447.9704608604425d);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        code.src.Complex complex2 = new code.src.Complex(0.2324571024365446d, 58.01650108462993d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex5.imaginary = (short) 0;
        complex5.imaginary = 100.0f;
        code.src.Complex complex12 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str13 = complex12.toString();
        code.src.Complex complex16 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex17 = complex12.sub(complex16);
        code.src.Complex complex18 = complex5.multiply(complex17);
        java.lang.String str19 = complex17.toString();
        code.src.Complex complex20 = complex2.add(complex17);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(100.0,10.0)" + "'", str13, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str19, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex20);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 52.0d);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), 87.48639198643185d);
        code.src.Complex complex5 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double6 = complex5.abs();
        code.src.Complex complex7 = complex2.sub(complex5);
        complex5.imaginary = (-906.2883532154044d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1018.3729221500101d + "'", double6 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex7);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        code.src.Complex complex2 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex5.real = (-906.2883532154044d);
        java.lang.String str9 = complex5.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(-906.2883532154044,0.0)" + "'", str9, "(-906.2883532154044,0.0)");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        code.src.Complex complex2 = code.src.Complex.polar((-10.0d), 109.15874002118079d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex43 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex44 = complex40.sub(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex50 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex51 = new code.src.Complex();
        complex51.real = 1L;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        java.lang.String str77 = complex72.toString();
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        code.src.Complex complex85 = complex72.add(complex84);
        code.src.Complex complex86 = complex69.add(complex85);
        code.src.Complex complex87 = complex51.add(complex86);
        code.src.Complex complex88 = complex50.add(complex86);
        code.src.Complex complex91 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double92 = complex91.abs();
        code.src.Complex complex93 = complex50.add(complex91);
        code.src.Complex complex94 = complex47.add(complex50);
        code.src.Complex complex95 = complex40.multiply(complex50);
        complex50.imaginary = 352.8614791462894d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(10.0,0.0)" + "'", str77, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 52.0d + "'", double92 == 52.0d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex2.add(complex43);
        code.src.Complex complex51 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex52 = complex2.multiply(complex51);
        double double53 = complex52.imaginary;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 883.0145252225883d + "'", double53 == 883.0145252225883d);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        code.src.Complex complex2 = new code.src.Complex((-363960.5478434686d), 426446.1210112362d);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), (double) 10);
        complex2.real = 101.9803902718557d;
        double double5 = complex2.real;
        double double6 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 101.9803902718557d + "'", double5 == 101.9803902718557d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 102.46950765959599d + "'", double6 == 102.46950765959599d);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        code.src.Complex complex2 = code.src.Complex.polar(1336.6737350030942d, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        code.src.Complex complex2 = code.src.Complex.polar(324.9608082617091d, 214489.27308040016d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        complex13.real = 875.8294407044641d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, 1055.9594711542297d);
        double double3 = complex2.abs();
        double double4 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 3.7494694905957755d + "'", double4 == 3.7494694905957755d);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex57 = complex53.add(complex56);
        double double58 = complex57.imaginary;
        code.src.Complex complex61 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex61.imaginary = 10L;
        double double64 = complex61.real;
        code.src.Complex complex65 = complex57.add(complex61);
        java.lang.Class<?> wildcardClass66 = complex61.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 88.75649121001061d + "'", double58 == 88.75649121001061d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 10.0d + "'", double64 == 10.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        double double42 = complex40.imaginary;
        java.lang.String str43 = complex40.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double47 = complex46.abs();
        double double48 = complex46.real;
        code.src.Complex complex49 = complex40.sub(complex46);
        code.src.Complex complex50 = complex33.sub(complex40);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        double double68 = complex67.real;
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        double double76 = complex75.imaginary;
        code.src.Complex complex77 = complex67.sub(complex75);
        double double78 = complex67.imaginary;
        code.src.Complex complex81 = new code.src.Complex(0.0d, 9071.298242002124d);
        code.src.Complex complex82 = complex67.multiply(complex81);
        code.src.Complex complex83 = complex50.add(complex67);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 43.756491210010616d + "'", double42 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str43, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 28.09571990514327d + "'", double48 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-28.09571990514327d) + "'", double51 == (-28.09571990514327d));
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 290.95719905143267d + "'", double68 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 437.56491210010614d + "'", double76 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 437.56491210010614d + "'", double78 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        code.src.Complex complex2 = new code.src.Complex((-906.2883532154044d), (-213613.9212426372d));
        code.src.Complex complex3 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex4 = complex2.multiply(complex3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.real = 525.4704025737593d;
        double double79 = complex74.real;
        code.src.Complex complex80 = complex51.add(complex74);
        code.src.Complex complex83 = code.src.Complex.polar((double) (short) 1, 10.0d);
        code.src.Complex complex84 = complex74.multiply(complex83);
        code.src.Complex complex87 = new code.src.Complex(290.95719905143267d, 97.0d);
        code.src.Complex complex88 = complex84.add(complex87);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 525.4704025737593d);
        complex2.real = 589.1068753368511d;
        complex2.imaginary = 8.230399429810259E7d;
        code.src.Complex complex7 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex8 = complex2.multiply(complex7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        code.src.Complex complex2 = code.src.Complex.polar((-1120.0d), 554.8186781977221d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        java.lang.String str40 = complex22.toString();
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex47 = complex22.sub(complex43);
        code.src.Complex complex48 = complex2.add(complex47);
        complex48.imaginary = 0;
        complex48.real = 10.0f;
        complex48.imaginary = 481.32140331011675d;
        code.src.Complex complex57 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex58 = complex48.add(complex57);
        complex57.imaginary = 100L;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str40, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex58);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) 1);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        java.lang.String str19 = complex5.toString();
        complex5.imaginary = '#';
        code.src.Complex complex24 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double25 = complex24.abs();
        code.src.Complex complex28 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str29 = complex28.toString();
        code.src.Complex complex30 = complex24.multiply(complex28);
        double double31 = complex28.real;
        code.src.Complex complex34 = new code.src.Complex((double) 100, (double) 10.0f);
        complex34.real = (byte) 1;
        complex34.imaginary = (short) 100;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex54.multiply(complex58);
        code.src.Complex complex60 = complex34.multiply(complex54);
        code.src.Complex complex63 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex64 = complex54.multiply(complex63);
        code.src.Complex complex65 = complex28.multiply(complex64);
        code.src.Complex complex66 = complex5.multiply(complex64);
        code.src.Complex complex67 = complex2.multiply(complex64);
        double double68 = complex64.abs();
        java.lang.Class<?> wildcardClass69 = complex64.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(100.0,10.0)" + "'", str29, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 16815.052882360298d + "'", double68 == 16815.052882360298d);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        code.src.Complex complex2 = new code.src.Complex(865.1298242002123d, 467.07736184459986d);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, 52.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        double double22 = complex21.real;
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        double double30 = complex29.imaginary;
        code.src.Complex complex31 = complex21.sub(complex29);
        double double32 = complex21.imaginary;
        code.src.Complex complex33 = complex5.multiply(complex21);
        code.src.Complex complex34 = complex2.sub(complex5);
        code.src.Complex complex37 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex40 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex41 = new code.src.Complex();
        complex41.real = 1L;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = complex41.add(complex76);
        code.src.Complex complex78 = complex40.add(complex76);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double82 = complex81.abs();
        code.src.Complex complex83 = complex40.add(complex81);
        code.src.Complex complex84 = complex37.add(complex40);
        complex84.real = 1050.9408051475186d;
        code.src.Complex complex87 = complex2.add(complex84);
        complex87.imaginary = 552267.7562221194d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 290.95719905143267d + "'", double22 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 437.56491210010614d + "'", double30 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 437.56491210010614d + "'", double32 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 52.0d + "'", double82 == 52.0d);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        java.lang.String str3 = complex2.toString();
        complex2.real = (-213613.9212426372d);
        double double6 = complex2.abs();
        double double7 = complex2.imaginary;
        java.lang.Class<?> wildcardClass8 = complex2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(10.0,0.0)" + "'", str3, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 213613.9212426372d + "'", double6 == 213613.9212426372d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex6 = complex2.add(complex5);
        double double7 = complex2.real;
        complex2.real = 691.255183740681d;
        double double10 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-489.10687533685115d) + "'", double7 == (-489.10687533685115d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 760.5244171374186d + "'", double10 == 760.5244171374186d);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.real = 525.4704025737593d;
        double double7 = complex2.real;
        complex2.imaginary = 100;
        double double10 = complex2.imaginary;
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex54.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex64 = complex59.add(complex63);
        complex59.real = 43.756491210010616d;
        complex59.imaginary = 100.0d;
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        complex71.real = 572.0d;
        code.src.Complex complex87 = complex59.add(complex71);
        code.src.Complex complex88 = complex2.multiply(complex87);
        double double89 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 525.4704025737593d + "'", double7 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 100.0d + "'", double89 == 100.0d);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        code.src.Complex complex18 = new code.src.Complex((double) 100L, (double) 10);
        complex18.imaginary = '#';
        code.src.Complex complex23 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex26 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex29 = new code.src.Complex((double) 10L, (double) '#');
        double double30 = complex29.imaginary;
        code.src.Complex complex31 = complex26.multiply(complex29);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        double double39 = complex38.imaginary;
        code.src.Complex complex40 = complex31.multiply(complex38);
        code.src.Complex complex41 = complex23.sub(complex38);
        code.src.Complex complex42 = complex18.multiply(complex23);
        code.src.Complex complex43 = complex12.add(complex23);
        complex12.real = 100.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 35.0d + "'", double30 == 35.0d);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 437.56491210010614d + "'", double39 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 525.4704025737593d);
        complex2.real = 589.1068753368511d;
        double double5 = complex2.real;
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex49.add(complex54);
        java.lang.String str56 = complex49.toString();
        double double57 = complex49.real;
        double double58 = complex49.real;
        code.src.Complex complex61 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        complex61.imaginary = ' ';
        complex61.real = 58911.02077697936d;
        code.src.Complex complex66 = complex49.add(complex61);
        code.src.Complex complex67 = complex2.add(complex61);
        complex2.imaginary = 834.4460041012325d;
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 589.1068753368511d + "'", double5 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str56, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 28.09571990514327d + "'", double57 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 28.09571990514327d + "'", double58 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        code.src.Complex complex2 = new code.src.Complex(491.60074581353115d, 811.5517880109727d);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex37 = complex32.sub(complex36);
        complex36.imaginary = 582.9143981028653d;
        code.src.Complex complex42 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex45 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex46 = complex42.add(complex45);
        code.src.Complex complex47 = complex36.add(complex46);
        code.src.Complex complex50 = new code.src.Complex(214489.24976920983d, (double) (byte) 100);
        code.src.Complex complex51 = complex46.multiply(complex50);
        java.lang.String str52 = complex46.toString();
        java.lang.String str53 = complex46.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 581.9143981028653d + "'", double33 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(53.756491210010616,-906.2883532154044)" + "'", str52, "(53.756491210010616,-906.2883532154044)");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(53.756491210010616,-906.2883532154044)" + "'", str53, "(53.756491210010616,-906.2883532154044)");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double7 = complex6.abs();
        code.src.Complex complex8 = complex2.sub(complex6);
        java.lang.String str9 = complex6.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,0.0)" + "'", str3, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(5.403023058681398,8.414709848078965)" + "'", str9, "(5.403023058681398,8.414709848078965)");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        code.src.Complex complex2 = code.src.Complex.polar((double) 0, (-198.14967628541848d));
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = 10L;
        double double10 = complex5.abs();
        double double11 = complex5.imaginary;
        code.src.Complex complex14 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex17 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex18 = complex14.add(complex17);
        code.src.Complex complex19 = complex5.multiply(complex18);
        double double20 = complex18.imaginary;
        code.src.Complex complex21 = complex2.sub(complex18);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.04987562112089d + "'", double10 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 235.63140523513093d + "'", double20 == 235.63140523513093d);
        org.junit.Assert.assertNotNull(complex21);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        code.src.Complex complex2 = new code.src.Complex(393.80842089009553d, 904.2902405342309d);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        complex6.real = 227.11773840932915d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        java.lang.String str16 = complex2.toString();
        complex2.imaginary = '#';
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double22 = complex21.abs();
        code.src.Complex complex25 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str26 = complex25.toString();
        code.src.Complex complex27 = complex21.multiply(complex25);
        double double28 = complex25.real;
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        complex31.real = (byte) 1;
        complex31.imaginary = (short) 100;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        double double52 = complex51.real;
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex51.multiply(complex55);
        code.src.Complex complex57 = complex31.multiply(complex51);
        code.src.Complex complex60 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex61 = complex51.multiply(complex60);
        code.src.Complex complex62 = complex25.multiply(complex61);
        code.src.Complex complex63 = complex2.multiply(complex61);
        complex61.real = (-0.9994813445442423d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(100.0,10.0)" + "'", str26, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 290.95719905143267d + "'", double52 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        code.src.Complex complex2 = new code.src.Complex(213613.9236394847d, 100.0d);
        code.src.Complex complex5 = new code.src.Complex(0.0d, (double) 'a');
        code.src.Complex complex6 = complex2.sub(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex17.real = 10;
        code.src.Complex complex20 = complex9.multiply(complex17);
        code.src.Complex complex23 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex24 = new code.src.Complex();
        complex24.real = 1L;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex59 = complex42.add(complex58);
        code.src.Complex complex60 = complex24.add(complex59);
        double double61 = complex60.real;
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex60.sub(complex67);
        double double70 = complex60.imaginary;
        code.src.Complex complex71 = complex23.sub(complex60);
        code.src.Complex complex72 = complex17.add(complex23);
        code.src.Complex complex75 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex76 = complex23.add(complex75);
        code.src.Complex complex77 = complex2.sub(complex23);
        double double78 = complex77.real;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 582.9143981028653d + "'", double61 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 875.1298242002123d + "'", double70 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 214103.03051482156d + "'", double78 == 214103.03051482156d);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str7 = complex6.toString();
        code.src.Complex complex8 = complex2.multiply(complex6);
        complex6.imaginary = (-0.0d);
        java.lang.String str11 = complex6.toString();
        java.lang.String str12 = complex6.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(100.0,10.0)" + "'", str7, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(100.0,-0.0)" + "'", str11, "(100.0,-0.0)");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(100.0,-0.0)" + "'", str12, "(100.0,-0.0)");
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex46.imaginary;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double53 = complex52.abs();
        double double54 = complex52.real;
        code.src.Complex complex55 = complex46.sub(complex52);
        code.src.Complex complex56 = complex38.sub(complex46);
        code.src.Complex complex57 = new code.src.Complex();
        complex57.real = 1L;
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        java.lang.String str83 = complex78.toString();
        code.src.Complex complex86 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex86.multiply(complex89);
        code.src.Complex complex91 = complex78.add(complex90);
        code.src.Complex complex92 = complex75.add(complex91);
        code.src.Complex complex93 = complex57.add(complex92);
        double double94 = complex57.imaginary;
        code.src.Complex complex95 = complex56.add(complex57);
        double double96 = complex56.abs();
        double double97 = complex56.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 43.756491210010616d + "'", double48 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str49, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(10.0,0.0)" + "'", str83, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 998.947820022602d + "'", double96 == 998.947820022602d);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 998.947820022602d + "'", double97 == 998.947820022602d);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        code.src.Complex complex2 = new code.src.Complex(10.04987562112089d, (-438.0712777412159d));
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex5 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex44 = complex39.sub(complex43);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        code.src.Complex complex49 = complex43.add(complex47);
        complex47.real = 1050.9408051475186d;
        double double52 = complex47.real;
        code.src.Complex complex53 = complex6.sub(complex47);
        complex47.imaginary = 998.947820022602d;
        java.lang.String str56 = complex47.toString();
        double double57 = complex47.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 581.9143981028653d + "'", double40 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 1050.9408051475186d + "'", double52 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(1050.9408051475186,998.947820022602)" + "'", str56, "(1050.9408051475186,998.947820022602)");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 1449.9563176358188d + "'", double57 == 1449.9563176358188d);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 28.09571990514327d;
        complex35.real = 572.0d;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        java.lang.String str80 = complex62.toString();
        code.src.Complex complex83 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex83.imaginary = (short) 0;
        java.lang.String str86 = complex83.toString();
        code.src.Complex complex87 = complex62.sub(complex83);
        double double88 = complex87.abs();
        code.src.Complex complex89 = complex35.multiply(complex87);
        double double90 = complex35.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str80, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(-0.0,0.0)" + "'", str86, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 525.4704025737593d + "'", double88 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 572.6895926040461d + "'", double90 == 572.6895926040461d);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        code.src.Complex complex2 = code.src.Complex.polar(52.0d, 27.594203913205885d);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-40.4295314029857,32.702492115051314)" + "'", str3, "(-40.4295314029857,32.702492115051314)");
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        code.src.Complex complex2 = code.src.Complex.polar(324.9608082617091d, 1.4142135623730951d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        double double64 = complex61.real;
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double68 = complex67.abs();
        java.lang.String str69 = complex67.toString();
        code.src.Complex complex70 = complex61.sub(complex67);
        code.src.Complex complex73 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex74 = complex70.add(complex73);
        code.src.Complex complex75 = complex54.multiply(complex73);
        code.src.Complex complex78 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex81 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex82 = complex78.sub(complex81);
        code.src.Complex complex83 = complex54.add(complex82);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 280.95719905143267d + "'", double64 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str69, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double44 = complex43.abs();
        code.src.Complex complex45 = complex2.add(complex43);
        complex43.real = 430.3716436914759d;
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        code.src.Complex complex83 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex87 = complex83.multiply(complex86);
        code.src.Complex complex88 = complex63.sub(complex83);
        double double89 = complex88.imaginary;
        complex88.real = 290.95719905143267d;
        double double92 = complex88.abs();
        code.src.Complex complex93 = complex43.sub(complex88);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 437.56491210010614d + "'", double89 == 437.56491210010614d);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 525.4704025737593d + "'", double92 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex93);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        double double46 = complex2.imaginary;
        code.src.Complex complex49 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex50 = complex2.add(complex49);
        complex49.imaginary = (-438.56491210010614d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-317.11773840932915d) + "'", double46 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        double double8 = complex7.imaginary;
        code.src.Complex complex11 = code.src.Complex.polar(291.13071236105446d, (-393.80842089009553d));
        code.src.Complex complex12 = complex7.add(complex11);
        complex12.real = '4';
        double double15 = complex12.real;
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 320.0d + "'", double8 == 320.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        code.src.Complex complex2 = code.src.Complex.polar(9.866275920404853d, 119.9377093343606d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex53 = complex2.multiply(complex52);
        double double54 = complex2.real;
        complex2.imaginary = 0.0d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 8.373954245956892d + "'", double54 == 8.373954245956892d);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        code.src.Complex complex2 = new code.src.Complex((double) 1L, (-249.54290000761125d));
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 663.590879631022d);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex44);
        complex2.real = 612077.1638882305d;
        double double92 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 663.590879631022d + "'", double92 == 663.590879631022d);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex50.abs();
        complex50.imaginary = 1.0d;
        double double72 = complex50.real;
        java.lang.String str73 = complex50.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 525.4704025737593d + "'", double69 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 290.95719905143267d + "'", double72 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(290.95719905143267,1.0)" + "'", str73, "(290.95719905143267,1.0)");
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        double double42 = complex40.imaginary;
        java.lang.String str43 = complex40.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double47 = complex46.abs();
        double double48 = complex46.real;
        code.src.Complex complex49 = complex40.sub(complex46);
        code.src.Complex complex50 = complex33.sub(complex40);
        java.lang.String str51 = complex50.toString();
        code.src.Complex complex54 = new code.src.Complex((double) (short) 100, (double) (-1));
        complex54.real = 10L;
        double double57 = complex54.imaginary;
        code.src.Complex complex58 = complex50.sub(complex54);
        double double59 = complex50.imaginary;
        java.lang.Class<?> wildcardClass60 = complex50.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 43.756491210010616d + "'", double42 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str43, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 28.09571990514327d + "'", double48 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(-28.09571990514327,-43.756491210010616)" + "'", str51, "(-28.09571990514327,-43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-43.756491210010616d) + "'", double59 == (-43.756491210010616d));
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        code.src.Complex complex2 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        complex2.real = 0.0d;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        double double38 = complex20.real;
        code.src.Complex complex41 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex42 = complex20.sub(complex41);
        double double43 = complex41.abs();
        code.src.Complex complex44 = complex2.sub(complex41);
        code.src.Complex complex47 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        complex47.real = 10;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        double double83 = complex65.real;
        double double84 = complex65.real;
        code.src.Complex complex87 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex90 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex91 = complex87.add(complex90);
        code.src.Complex complex92 = complex65.sub(complex87);
        code.src.Complex complex93 = complex47.multiply(complex87);
        code.src.Complex complex94 = complex44.add(complex47);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 290.95719905143267d + "'", double38 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 290.95719905143267d + "'", double83 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 290.95719905143267d + "'", double84 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        code.src.Complex complex2 = new code.src.Complex(51323.06127921141d, 1046.2741264173828d);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.real = 589.1068753368511d;
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex57 = complex10.add(complex54);
        code.src.Complex complex58 = complex2.sub(complex54);
        double double59 = complex2.imaginary;
        java.lang.String str60 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(589.1068753368511,10.0)" + "'", str7, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 10.0d + "'", double59 == 10.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(589.1068753368511,10.0)" + "'", str60, "(589.1068753368511,10.0)");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        java.lang.String str34 = complex28.toString();
        code.src.Complex complex35 = complex25.multiply(complex28);
        complex25.imaginary = 21990.294301380844d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double7 = complex6.abs();
        code.src.Complex complex8 = complex2.sub(complex6);
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex24.sub(complex44);
        code.src.Complex complex52 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex53 = complex49.sub(complex52);
        code.src.Complex complex54 = complex6.multiply(complex53);
        java.lang.Class<?> wildcardClass55 = complex6.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,0.0)" + "'", str3, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.real;
        double double4 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 28.09571990514327d + "'", double3 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex65 = complex48.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex48.sub(complex68);
        code.src.Complex complex74 = complex31.add(complex73);
        code.src.Complex complex75 = complex25.add(complex31);
        double double76 = complex25.abs();
        double double77 = complex25.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 10.0d + "'", double76 == 10.0d);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 10.0d + "'", double77 == 10.0d);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        double double55 = complex2.real;
        code.src.Complex complex58 = new code.src.Complex(28.09571990514327d, (double) ' ');
        code.src.Complex complex59 = complex2.add(complex58);
        double double60 = complex58.real;
        complex58.imaginary = 28.09571990514327d;
        complex58.real = 0.0d;
        complex58.imaginary = 5225.935322982863d;
        double double67 = complex58.abs();
        java.lang.Class<?> wildcardClass68 = complex58.getClass();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 28.09571990514327d + "'", double60 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 5225.935322982863d + "'", double67 == 5225.935322982863d);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        complex6.imaginary = 572.0d;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex46.real;
        java.lang.String str48 = complex46.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        double double65 = complex64.real;
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        double double73 = complex72.imaginary;
        code.src.Complex complex74 = complex64.sub(complex72);
        double double75 = complex64.imaginary;
        code.src.Complex complex76 = complex46.multiply(complex64);
        code.src.Complex complex77 = complex6.multiply(complex46);
        double double78 = complex77.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 582.9143981028653d + "'", double47 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str48, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 290.95719905143267d + "'", double65 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 437.56491210010614d + "'", double73 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 437.56491210010614d + "'", double75 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 670092.6317309256d + "'", double78 == 670092.6317309256d);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        code.src.Complex complex2 = new code.src.Complex((double) (short) -1, 1050.9408051475186d);
        complex2.real = 0.0d;
        complex2.imaginary = 0.1820978992688351d;
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        double double55 = complex2.real;
        code.src.Complex complex58 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double59 = complex58.imaginary;
        code.src.Complex complex60 = complex2.add(complex58);
        double double61 = complex58.real;
        java.lang.Class<?> wildcardClass62 = complex58.getClass();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + (-317.11773840932915d) + "'", double59 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-489.10687533685115d) + "'", double61 == (-489.10687533685115d));
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        code.src.Complex complex2 = code.src.Complex.polar(875.1298242002123d, (-509251.64491133287d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        code.src.Complex complex2 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        java.lang.String str36 = complex18.toString();
        double double37 = complex18.abs();
        double double38 = complex18.real;
        complex18.imaginary = 582.9143981028653d;
        complex18.real = 0.0f;
        code.src.Complex complex43 = complex2.sub(complex18);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        double double77 = complex76.real;
        code.src.Complex complex80 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex81 = complex76.sub(complex80);
        complex81.real = (-317.11773840932915d);
        code.src.Complex complex84 = complex18.add(complex81);
        double double85 = complex18.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str36, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 525.4704025737593d + "'", double37 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 290.95719905143267d + "'", double38 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 581.9143981028653d + "'", double77 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        code.src.Complex complex50 = new code.src.Complex();
        complex50.real = 1L;
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = complex50.add(complex85);
        code.src.Complex complex87 = complex48.sub(complex85);
        complex85.imaginary = 43.756491210010616d;
        complex85.real = (short) -1;
        double double92 = complex85.imaginary;
        java.lang.String str93 = complex85.toString();
        complex85.real = 0.0f;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 43.756491210010616d + "'", double92 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(-1.0,43.756491210010616)" + "'", str93, "(-1.0,43.756491210010616)");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.imaginary = (-317.11773840932915d);
        code.src.Complex complex9 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex9.real = 10;
        code.src.Complex complex12 = complex2.sub(complex9);
        double double13 = complex12.imaginary;
        complex12.real = (-272.8614791462894d);
        complex12.real = 63418.367087202416d;
        double double18 = complex12.abs();
        java.lang.Class<?> wildcardClass19 = complex12.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-317.11773840932915d) + "'", double13 == (-317.11773840932915d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 63419.15994135504d + "'", double18 == 63419.15994135504d);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        code.src.Complex complex2 = new code.src.Complex(1072.0212734397164d, 12809.571990514327d);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        code.src.Complex complex2 = new code.src.Complex((double) 0, 481.42527279362895d);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        code.src.Complex complex2 = new code.src.Complex(27.594203913205885d, 430.3716436914759d);
        double double3 = complex2.real;
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex6.imaginary = (short) 0;
        complex6.imaginary = 100.0f;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        java.lang.String str44 = complex26.toString();
        code.src.Complex complex47 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex47.imaginary = (short) 0;
        java.lang.String str50 = complex47.toString();
        code.src.Complex complex51 = complex26.sub(complex47);
        code.src.Complex complex52 = complex6.add(complex51);
        complex52.imaginary = 0;
        complex52.real = 10.0f;
        code.src.Complex complex57 = complex2.add(complex52);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 27.594203913205885d + "'", double3 == 27.594203913205885d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str44, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(-0.0,0.0)" + "'", str50, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex57);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        code.src.Complex complex50 = new code.src.Complex();
        complex50.real = 1L;
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = complex50.add(complex85);
        code.src.Complex complex87 = complex48.sub(complex85);
        complex85.imaginary = 43.756491210010616d;
        code.src.Complex complex92 = code.src.Complex.polar((double) 'a', (double) (short) 1);
        code.src.Complex complex93 = complex85.add(complex92);
        java.lang.String str94 = complex85.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(581.9143981028653,43.756491210010616)" + "'", str94, "(581.9143981028653,43.756491210010616)");
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        double double5 = complex2.abs();
        java.lang.String str6 = complex2.toString();
        double double7 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(-0.0,0.0)" + "'", str6, "(-0.0,0.0)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double7 = complex6.abs();
        double double8 = complex6.real;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        java.lang.String str42 = complex24.toString();
        double double43 = complex24.abs();
        double double44 = complex24.real;
        code.src.Complex complex45 = complex6.sub(complex24);
        code.src.Complex complex46 = complex2.add(complex6);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        code.src.Complex complex82 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex86 = complex82.multiply(complex85);
        code.src.Complex complex87 = complex62.sub(complex82);
        double double88 = complex87.imaginary;
        complex87.real = 290.95719905143267d;
        code.src.Complex complex91 = complex6.multiply(complex87);
        double double92 = complex91.real;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,290.95719905143267)" + "'", str3, "(1.0,290.95719905143267)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 28.09571990514327d + "'", double8 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str42, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 525.4704025737593d + "'", double43 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 290.95719905143267d + "'", double44 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 437.56491210010614d + "'", double88 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-10971.653261183294d) + "'", double92 == (-10971.653261183294d));
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        code.src.Complex complex2 = new code.src.Complex(1050.9408051475186d, 97.0d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100, 572.0d);
        code.src.Complex complex5 = new code.src.Complex(907.1298242002123d, 1.0d);
        code.src.Complex complex6 = complex2.add(complex5);
        double double7 = complex6.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1004.7755148489907d + "'", double7 == 1004.7755148489907d);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        code.src.Complex complex2 = code.src.Complex.polar((double) ' ', 100.00499987500625d);
        complex2.real = 170.71953646075502d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        complex2.real = 1051.4948429356753d;
        double double15 = complex2.real;
        java.lang.String str16 = complex2.toString();
        double double17 = complex2.abs();
        java.lang.String str18 = complex2.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1051.4948429356753d + "'", double15 == 1051.4948429356753d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(1051.4948429356753,97.0)" + "'", str16, "(1051.4948429356753,97.0)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1055.9594711542297d + "'", double17 == 1055.9594711542297d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(1051.4948429356753,97.0)" + "'", str18, "(1051.4948429356753,97.0)");
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        code.src.Complex complex2 = new code.src.Complex(97.0d, 88.75649121001061d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        code.src.Complex complex2 = new code.src.Complex(907.1298242002123d, (-35.0d));
        code.src.Complex complex5 = code.src.Complex.polar(10.0d, (double) '4');
        double double6 = complex5.imaginary;
        code.src.Complex complex9 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        code.src.Complex complex47 = complex9.add(complex45);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        double double55 = complex53.imaginary;
        java.lang.String str56 = complex53.toString();
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double60 = complex59.abs();
        double double61 = complex59.real;
        code.src.Complex complex62 = complex53.sub(complex59);
        code.src.Complex complex63 = complex45.sub(complex53);
        double double64 = complex45.real;
        code.src.Complex complex65 = complex5.multiply(complex45);
        code.src.Complex complex66 = complex2.add(complex45);
        complex66.imaginary = 35.014282800023196d;
        double double69 = complex66.real;
        java.lang.String str70 = complex66.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 9.866275920404853d + "'", double6 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 43.756491210010616d + "'", double55 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str56, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 28.09571990514327d + "'", double61 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 581.9143981028653d + "'", double64 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1489.0442223030777d + "'", double69 == 1489.0442223030777d);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(1489.0442223030777,35.014282800023196)" + "'", str70, "(1489.0442223030777,35.014282800023196)");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        code.src.Complex complex2 = code.src.Complex.polar(282.35849053254026d, 288.43610241435874d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        code.src.Complex complex2 = code.src.Complex.polar(35.0d, (-509251.64491133287d));
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex6.imaginary = (short) 0;
        complex6.imaginary = 100.0f;
        code.src.Complex complex13 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str14 = complex13.toString();
        code.src.Complex complex17 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex18 = complex13.sub(complex17);
        code.src.Complex complex19 = complex6.multiply(complex18);
        java.lang.String str20 = complex18.toString();
        complex18.real = 582.9143981028653d;
        code.src.Complex complex25 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex26 = complex18.sub(complex25);
        code.src.Complex complex27 = complex2.multiply(complex26);
        double double28 = complex27.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(100.0,10.0)" + "'", str14, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str20, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 22801.876198575297d + "'", double28 == 22801.876198575297d);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex32 = complex22.multiply(complex31);
        complex32.imaginary = 0.0d;
        java.lang.String str35 = complex32.toString();
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(15118.903072407044,0.0)" + "'", str35, "(15118.903072407044,0.0)");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 100, (double) 10.0f);
        complex37.real = (byte) 1;
        complex37.imaginary = (short) 100;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        double double58 = complex57.real;
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex57.multiply(complex61);
        code.src.Complex complex63 = complex37.multiply(complex57);
        double double64 = complex37.imaginary;
        code.src.Complex complex65 = complex34.add(complex37);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        double double73 = complex71.imaginary;
        java.lang.String str74 = complex71.toString();
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double78 = complex77.abs();
        double double79 = complex77.real;
        code.src.Complex complex80 = complex71.sub(complex77);
        double double81 = complex71.imaginary;
        code.src.Complex complex82 = complex65.add(complex71);
        double double83 = complex82.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 290.95719905143267d + "'", double58 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 100.0d + "'", double64 == 100.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 43.756491210010616d + "'", double73 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str74, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 52.0d + "'", double78 == 52.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 28.09571990514327d + "'", double79 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 43.756491210010616d + "'", double81 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 1188.0499518279444d + "'", double83 == 1188.0499518279444d);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double7 = complex6.abs();
        double double8 = complex6.real;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        java.lang.String str42 = complex24.toString();
        double double43 = complex24.abs();
        double double44 = complex24.real;
        code.src.Complex complex45 = complex6.sub(complex24);
        code.src.Complex complex46 = complex2.add(complex6);
        java.lang.String str47 = complex46.toString();
        double double48 = complex46.abs();
        code.src.Complex complex51 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex54 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex55 = complex51.multiply(complex54);
        double double56 = complex51.imaginary;
        double double57 = complex51.real;
        complex51.real = 552238.2879620573d;
        code.src.Complex complex62 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex65 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex66 = complex62.add(complex65);
        code.src.Complex complex69 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        java.lang.String str77 = complex72.toString();
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        code.src.Complex complex85 = complex72.add(complex84);
        double double86 = complex85.real;
        code.src.Complex complex89 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex92 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex93 = complex89.multiply(complex92);
        double double94 = complex93.imaginary;
        code.src.Complex complex95 = complex85.sub(complex93);
        code.src.Complex complex96 = complex69.add(complex95);
        code.src.Complex complex97 = complex66.add(complex69);
        code.src.Complex complex98 = complex51.add(complex97);
        code.src.Complex complex99 = complex46.multiply(complex98);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,290.95719905143267)" + "'", str3, "(1.0,290.95719905143267)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 28.09571990514327d + "'", double8 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str42, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 525.4704025737593d + "'", double43 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 290.95719905143267d + "'", double44 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(29.09571990514327,334.7136902614433)" + "'", str47, "(29.09571990514327,334.7136902614433)");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 335.9759148588362d + "'", double48 == 335.9759148588362d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 907.1298242002123d + "'", double56 == 907.1298242002123d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 28.09571990514327d + "'", double57 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(10.0,0.0)" + "'", str77, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 290.95719905143267d + "'", double86 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 437.56491210010614d + "'", double94 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertNotNull(complex98);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        code.src.Complex complex2 = new code.src.Complex(213613.9212426372d, (-44.52533050340393d));
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        double double54 = complex48.abs();
        double double55 = complex48.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.0d + "'", double54 == 52.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 28.09571990514327d + "'", double55 == 28.09571990514327d);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        double double46 = complex36.imaginary;
        complex36.real = 922.8939813892761d;
        java.lang.Class<?> wildcardClass49 = complex36.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 875.1298242002123d + "'", double46 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        code.src.Complex complex2 = new code.src.Complex((double) '4', 320.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.real = 589.1068753368511d;
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex60 = complex13.add(complex57);
        code.src.Complex complex61 = complex5.sub(complex57);
        code.src.Complex complex62 = complex2.multiply(complex5);
        double double63 = complex2.imaginary;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(589.1068753368511,10.0)" + "'", str10, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 320.0d + "'", double63 == 320.0d);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100, 572.0d);
        code.src.Complex complex5 = new code.src.Complex(907.1298242002123d, 1.0d);
        code.src.Complex complex6 = complex2.add(complex5);
        double double7 = complex6.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 23.811095911894085d + "'", double7 == 23.811095911894085d);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        code.src.Complex complex2 = new code.src.Complex(214489.27308040016d, 29147.719905143265d);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double6 = complex5.imaginary;
        complex5.imaginary = (byte) 10;
        code.src.Complex complex9 = complex2.sub(complex5);
        double double10 = complex9.imaginary;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        double double27 = complex26.real;
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        double double35 = complex34.imaginary;
        code.src.Complex complex36 = complex26.sub(complex34);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex59.sub(complex79);
        code.src.Complex complex85 = complex42.add(complex84);
        code.src.Complex complex86 = complex36.add(complex42);
        complex36.imaginary = 875.1298242002123d;
        double double89 = complex36.real;
        code.src.Complex complex90 = complex9.multiply(complex36);
        complex9.imaginary = 324.9608082617091d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-317.11773840932915d) + "'", double6 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-10.0d) + "'", double10 == (-10.0d));
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 290.95719905143267d + "'", double27 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 437.56491210010614d + "'", double35 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 10.0d + "'", double89 == 10.0d);
        org.junit.Assert.assertNotNull(complex90);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        complex2.real = 1051.4948429356753d;
        java.lang.String str15 = complex2.toString();
        double double16 = complex2.imaginary;
        code.src.Complex complex19 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex20 = new code.src.Complex();
        complex20.real = 1L;
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex55 = complex38.add(complex54);
        code.src.Complex complex56 = complex20.add(complex55);
        code.src.Complex complex57 = complex19.add(complex55);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        double double65 = complex63.imaginary;
        java.lang.String str66 = complex63.toString();
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double70 = complex69.abs();
        double double71 = complex69.real;
        code.src.Complex complex72 = complex63.sub(complex69);
        code.src.Complex complex73 = complex55.sub(complex63);
        double double74 = complex55.imaginary;
        code.src.Complex complex75 = complex2.multiply(complex55);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(1051.4948429356753,97.0)" + "'", str15, "(1051.4948429356753,97.0)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 43.756491210010616d + "'", double65 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str66, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 52.0d + "'", double70 == 52.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 28.09571990514327d + "'", double71 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 875.1298242002123d + "'", double74 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        java.lang.String str35 = complex15.toString();
        complex15.real = 14827.945873355611d;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        double double46 = complex40.real;
        code.src.Complex complex49 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex50 = complex40.multiply(complex49);
        code.src.Complex complex51 = complex15.multiply(complex49);
        double double52 = complex15.real;
        double double53 = complex15.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str35, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 10.0d + "'", double46 == 10.0d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 14827.945873355611d + "'", double52 == 14827.945873355611d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 437.56491210010614d + "'", double53 == 437.56491210010614d);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        double double43 = complex42.imaginary;
        java.lang.String str44 = complex42.toString();
        double double45 = complex42.real;
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double49 = complex48.abs();
        java.lang.String str50 = complex48.toString();
        code.src.Complex complex51 = complex42.sub(complex48);
        code.src.Complex complex54 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex55 = complex51.add(complex54);
        code.src.Complex complex56 = complex32.sub(complex54);
        complex32.imaginary = (-333229.2368515873d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 437.56491210010614d + "'", double43 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str44, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 280.95719905143267d + "'", double45 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str50, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        code.src.Complex complex2 = new code.src.Complex(922.8939813892761d, (-581.9143981028653d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex9.imaginary;
        java.lang.String str11 = complex9.toString();
        double double12 = complex9.real;
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double16 = complex15.abs();
        java.lang.String str17 = complex15.toString();
        code.src.Complex complex18 = complex9.sub(complex15);
        code.src.Complex complex21 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex23 = complex2.add(complex21);
        double double24 = complex2.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 437.56491210010614d + "'", double10 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str11, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 280.95719905143267d + "'", double12 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str17, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 1091.0351358246762d + "'", double24 == 1091.0351358246762d);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str32 = complex31.toString();
        code.src.Complex complex35 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex36 = complex31.sub(complex35);
        complex31.imaginary = (-1.0f);
        code.src.Complex complex39 = complex2.sub(complex31);
        code.src.Complex complex42 = code.src.Complex.polar(28.09571990514327d, (double) 10L);
        code.src.Complex complex43 = complex39.add(complex42);
        double double44 = complex39.abs();
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex47.real = 582.9143981028653d;
        code.src.Complex complex52 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        code.src.Complex complex53 = complex47.multiply(complex52);
        code.src.Complex complex54 = complex39.sub(complex53);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(100.0,10.0)" + "'", str32, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 141.42842712835352d + "'", double44 == 141.42842712835352d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        double double47 = complex29.real;
        double double48 = complex29.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        java.lang.String str72 = complex67.toString();
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        code.src.Complex complex80 = complex67.add(complex79);
        code.src.Complex complex81 = complex64.add(complex80);
        code.src.Complex complex82 = complex29.sub(complex64);
        code.src.Complex complex85 = new code.src.Complex(525.4704025737593d, 0.0d);
        code.src.Complex complex86 = complex82.add(complex85);
        code.src.Complex complex87 = complex10.add(complex86);
        code.src.Complex complex90 = new code.src.Complex((double) (byte) 100, (double) 'a');
        double double91 = complex90.abs();
        code.src.Complex complex92 = complex86.multiply(complex90);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 290.95719905143267d + "'", double47 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 290.95719905143267d + "'", double48 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(10.0,0.0)" + "'", str72, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 139.31618714277246d + "'", double91 == 139.31618714277246d);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, (-389.10687533685115d));
        complex2.imaginary = 907.5648116969368d;
        code.src.Complex complex7 = new code.src.Complex((-438.0712777412159d), 58910.68753368511d);
        java.lang.String str8 = complex7.toString();
        code.src.Complex complex9 = complex2.sub(complex7);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(-438.0712777412159,58910.68753368511)" + "'", str8, "(-438.0712777412159,58910.68753368511)");
        org.junit.Assert.assertNotNull(complex9);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex2.add(complex43);
        complex43.imaginary = 214489.24976920983d;
        complex43.real = (-273.44509135195034d);
        double double53 = complex43.real;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + (-273.44509135195034d) + "'", double53 == (-273.44509135195034d));
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex47.imaginary;
        code.src.Complex complex49 = complex40.sub(complex47);
        double double50 = complex40.abs();
        complex40.real = 0.0d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 437.56491210010614d + "'", double48 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 492.8116754934422d + "'", double50 == 492.8116754934422d);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        code.src.Complex complex2 = new code.src.Complex((-389.10687533685115d), (-44.52533050340393d));
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.real;
        complex32.imaginary = 71852.21111515388d;
        code.src.Complex complex40 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex41 = new code.src.Complex();
        complex41.real = 1L;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = complex41.add(complex76);
        code.src.Complex complex78 = complex40.add(complex76);
        code.src.Complex complex81 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex84 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex40.add(complex81);
        code.src.Complex complex89 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex90 = complex40.multiply(complex89);
        code.src.Complex complex91 = complex32.add(complex90);
        double double92 = complex90.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 581.9143981028653d + "'", double35 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 883.0145252225883d + "'", double92 == 883.0145252225883d);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        double double3 = complex2.abs();
        double double4 = complex2.imaginary;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        java.lang.String str13 = complex7.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        java.lang.String str37 = complex23.toString();
        code.src.Complex complex38 = complex20.add(complex23);
        code.src.Complex complex39 = complex7.sub(complex23);
        double double40 = complex39.real;
        code.src.Complex complex41 = new code.src.Complex();
        complex41.real = 1L;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = complex41.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex77.sub(complex84);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex84.add(complex89);
        complex89.imaginary = (short) 100;
        code.src.Complex complex93 = complex39.sub(complex89);
        code.src.Complex complex94 = complex2.multiply(complex89);
        complex94.imaginary = 288.4361024143587d;
        complex94.real = (-198.14967628541848d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 141.4213562373095d + "'", double3 == 141.4213562373095d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 582.9143981028653d + "'", double78 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex29.multiply(complex33);
        code.src.Complex complex35 = complex9.multiply(complex29);
        code.src.Complex complex36 = complex2.sub(complex29);
        double double37 = complex36.imaginary;
        double double38 = complex36.abs();
        double double39 = complex36.imaginary;
        java.lang.Class<?> wildcardClass40 = complex36.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-437.56491210010614d) + "'", double37 == (-437.56491210010614d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 520.0d + "'", double38 == 520.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + (-437.56491210010614d) + "'", double39 == (-437.56491210010614d));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex2.abs();
        code.src.Complex complex19 = new code.src.Complex((double) 10, (double) 10);
        complex19.imaginary = 100;
        code.src.Complex complex22 = complex2.add(complex19);
        code.src.Complex complex25 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        code.src.Complex complex28 = code.src.Complex.polar((double) 0.0f, 36.40054944640259d);
        double double29 = complex28.real;
        java.lang.String str30 = complex28.toString();
        code.src.Complex complex33 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex36 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex37 = new code.src.Complex();
        complex37.real = 1L;
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        java.lang.String str63 = complex58.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex58.add(complex70);
        code.src.Complex complex72 = complex55.add(complex71);
        code.src.Complex complex73 = complex37.add(complex72);
        double double74 = complex73.real;
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex73.sub(complex80);
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex86 = complex80.add(complex85);
        code.src.Complex complex87 = complex36.add(complex85);
        code.src.Complex complex88 = complex33.multiply(complex85);
        complex85.real = 100;
        double double91 = complex85.imaginary;
        code.src.Complex complex92 = complex28.add(complex85);
        code.src.Complex complex93 = complex25.sub(complex92);
        double double94 = complex93.real;
        double double95 = complex93.real;
        double double96 = complex93.imaginary;
        code.src.Complex complex97 = complex2.add(complex93);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(0.0,-0.0)" + "'", str30, "(0.0,-0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(10.0,0.0)" + "'", str63, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 582.9143981028653d + "'", double74 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 43.756491210010616d + "'", double91 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 324.9608082617091d + "'", double94 == 324.9608082617091d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 324.9608082617091d + "'", double95 == 324.9608082617091d);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-293.29939121762186d) + "'", double96 == (-293.29939121762186d));
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        code.src.Complex complex2 = new code.src.Complex((-0.5440211108893698d), 43.756491210010616d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 43.756491210010616d + "'", double3 == 43.756491210010616d);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex40.real = 10;
        code.src.Complex complex43 = complex32.multiply(complex40);
        code.src.Complex complex46 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex47 = complex40.add(complex46);
        complex40.imaginary = '#';
        code.src.Complex complex50 = complex2.add(complex40);
        code.src.Complex complex53 = code.src.Complex.polar((-180.95719905143267d), 213613.92387355183d);
        code.src.Complex complex54 = complex2.multiply(complex53);
        double double55 = complex53.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 175.79622099436838d + "'", double55 == 175.79622099436838d);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        code.src.Complex complex2 = code.src.Complex.polar(148.66068747318505d, 141.42842712835352d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (-1L));
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = new code.src.Complex();
        code.src.Complex complex78 = complex76.add(complex77);
        code.src.Complex complex79 = complex43.add(complex77);
        double double80 = complex79.imaginary;
        code.src.Complex complex81 = complex2.sub(complex79);
        double double82 = complex2.imaginary;
        code.src.Complex complex83 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex84 = complex2.add(complex83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 907.1298242002123d + "'", double80 == 907.1298242002123d);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 0.8414709848078965d + "'", double82 == 0.8414709848078965d);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        code.src.Complex complex2 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 994.0878718290595d + "'", double3 == 994.0878718290595d);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        code.src.Complex complex2 = new code.src.Complex((-509251.64491133287d), 589.1068753368511d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 589.1068753368511d + "'", double3 == 589.1068753368511d);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex52.sub(complex61);
        double double66 = complex61.abs();
        double double67 = complex61.imaginary;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str64, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 520.0d + "'", double66 == 520.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 437.56491210010614d + "'", double67 == 437.56491210010614d);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex49.add(complex54);
        code.src.Complex complex56 = complex5.add(complex54);
        code.src.Complex complex57 = complex2.multiply(complex54);
        double double58 = complex54.abs();
        double double59 = complex54.abs();
        code.src.Complex complex62 = code.src.Complex.polar(589.1068753368511d, (double) (byte) -1);
        code.src.Complex complex63 = complex54.multiply(complex62);
        double double64 = complex63.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 52.0d + "'", double58 == 52.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 52.0d + "'", double59 == 52.0d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 30633.55751751626d + "'", double64 == 30633.55751751626d);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        java.lang.String str14 = complex2.toString();
        code.src.Complex complex17 = code.src.Complex.polar(317.11773840932915d, 663.590879631022d);
        code.src.Complex complex18 = complex2.multiply(complex17);
        double double19 = complex18.abs();
        double double20 = complex18.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 3171.1773840932915d + "'", double19 == 3171.1773840932915d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 3171.1773840932915d + "'", double20 == 3171.1773840932915d);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.real = 525.4704025737593d;
        double double79 = complex74.real;
        code.src.Complex complex80 = complex51.add(complex74);
        double double81 = complex51.abs();
        code.src.Complex complex84 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex85 = complex51.add(complex84);
        java.lang.String str86 = complex85.toString();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 525.4704025737593d + "'", double81 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(282.5664837606681,432.1247009912124)" + "'", str86, "(282.5664837606681,432.1247009912124)");
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        complex2.real = 290.95719905143267d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str8 = complex7.toString();
        java.lang.String str9 = complex7.toString();
        java.lang.String str10 = complex7.toString();
        code.src.Complex complex13 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        double double21 = complex19.imaginary;
        java.lang.String str22 = complex19.toString();
        code.src.Complex complex23 = complex13.sub(complex19);
        code.src.Complex complex26 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex26.real = 875.1298242002123d;
        complex26.imaginary = (-317.11773840932915d);
        complex26.real = 0.0d;
        code.src.Complex complex33 = complex23.sub(complex26);
        code.src.Complex complex34 = complex7.sub(complex33);
        double double35 = complex34.real;
        code.src.Complex complex38 = new code.src.Complex(318.2958031472754d, (-54.40211108893698d));
        double double39 = complex38.abs();
        code.src.Complex complex40 = complex34.sub(complex38);
        code.src.Complex complex41 = complex2.sub(complex34);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(100.0,10.0)" + "'", str8, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(100.0,10.0)" + "'", str9, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 43.756491210010616d + "'", double21 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str22, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 28.09571990514327d + "'", double35 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 322.91145534356957d + "'", double39 == 322.91145534356957d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        code.src.Complex complex2 = new code.src.Complex(35.014282800023196d, (-54.40211108893698d));
        code.src.Complex complex5 = new code.src.Complex(141.77446878757826d, (-0.9994813445442423d));
        code.src.Complex complex6 = complex2.sub(complex5);
        double double7 = complex2.abs();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 64.69613350837157d + "'", double7 == 64.69613350837157d);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        code.src.Complex complex2 = new code.src.Complex(112.71202242884297d, (-489.10687533685115d));
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        code.src.Complex complex2 = code.src.Complex.polar((-1120.0d), (-249.54290000761125d));
        double double3 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 237.5439012113714d + "'", double3 == 237.5439012113714d);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        code.src.Complex complex2 = code.src.Complex.polar((-437.56491210010614d), 1046.2741264173828d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        code.src.Complex complex2 = code.src.Complex.polar(170.71953646075502d, 491.60074581353115d);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(9.98215983786037,170.42745264289576)" + "'", str3, "(9.98215983786037,170.42745264289576)");
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        code.src.Complex complex71 = new code.src.Complex((double) 100, (double) 10.0f);
        complex71.imaginary = 100L;
        code.src.Complex complex74 = complex68.add(complex71);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str7 = complex6.toString();
        code.src.Complex complex8 = complex2.multiply(complex6);
        complex6.real = 35.0d;
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex54.add(complex59);
        code.src.Complex complex61 = complex6.multiply(complex60);
        complex6.real = 103.87188973436588d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(100.0,10.0)" + "'", str7, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        code.src.Complex complex2 = code.src.Complex.polar((-1120.0d), 625.6708893128759d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        code.src.Complex complex2 = code.src.Complex.polar(522.8336537091443d, 338637.20487324166d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex47.imaginary;
        code.src.Complex complex49 = complex40.sub(complex47);
        java.lang.String str50 = complex49.toString();
        java.lang.String str51 = complex49.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 437.56491210010614d + "'", double48 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(181.33944529425008,-266.8453756393511)" + "'", str50, "(181.33944529425008,-266.8453756393511)");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(181.33944529425008,-266.8453756393511)" + "'", str51, "(181.33944529425008,-266.8453756393511)");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = 10L;
        double double7 = complex2.abs();
        double double8 = complex2.imaginary;
        code.src.Complex complex11 = new code.src.Complex(1.0d, (double) ' ');
        complex11.imaginary = 907.1298242002123d;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, (double) '#');
        double double17 = complex16.imaginary;
        code.src.Complex complex20 = new code.src.Complex((double) 100, (double) 10.0f);
        complex20.imaginary = 100L;
        java.lang.String str23 = complex20.toString();
        code.src.Complex complex24 = complex16.multiply(complex20);
        code.src.Complex complex27 = code.src.Complex.polar(663.590879631022d, (double) ' ');
        code.src.Complex complex28 = complex24.sub(complex27);
        code.src.Complex complex29 = complex11.multiply(complex27);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex62 = complex45.add(complex61);
        complex61.real = (-288.4361024143587d);
        double double65 = complex61.real;
        double double66 = complex61.real;
        code.src.Complex complex67 = complex29.add(complex61);
        code.src.Complex complex68 = complex2.add(complex29);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.04987562112089d + "'", double7 == 10.04987562112089d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,100.0)" + "'", str23, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-288.4361024143587d) + "'", double65 == (-288.4361024143587d));
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-288.4361024143587d) + "'", double66 == (-288.4361024143587d));
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        double double39 = complex36.abs();
        code.src.Complex complex40 = complex2.sub(complex36);
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        complex43.imaginary = 100.0f;
        code.src.Complex complex50 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str51 = complex50.toString();
        code.src.Complex complex54 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex55 = complex50.sub(complex54);
        code.src.Complex complex56 = complex43.multiply(complex55);
        java.lang.String str57 = complex55.toString();
        double double58 = complex55.real;
        code.src.Complex complex59 = complex2.add(complex55);
        double double60 = complex55.abs();
        complex55.imaginary = (-8062.246137461803d);
        double double63 = complex55.real;
        double double64 = complex55.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1050.9408051475186d + "'", double39 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(100.0,10.0)" + "'", str51, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str57, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 589.1068753368511d + "'", double58 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 673.8344940348353d + "'", double60 == 673.8344940348353d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 589.1068753368511d + "'", double63 == 589.1068753368511d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-8062.246137461803d) + "'", double64 == (-8062.246137461803d));
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        java.lang.String str35 = complex15.toString();
        complex15.real = 14827.945873355611d;
        complex15.real = 2022.0451520447884d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str35, "(290.95719905143267,437.56491210010614)");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex56 = complex51.add(complex55);
        code.src.Complex complex59 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex59.imaginary = (short) 0;
        complex59.imaginary = 100.0f;
        code.src.Complex complex64 = complex51.multiply(complex59);
        code.src.Complex complex65 = complex2.add(complex59);
        code.src.Complex complex68 = new code.src.Complex(5.403023058681398d, (-43.756491210010616d));
        complex68.imaginary = 214489.24976920983d;
        code.src.Complex complex71 = complex59.multiply(complex68);
        double double72 = complex59.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-0.0d) + "'", double72 == (-0.0d));
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 0, (double) 100L);
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        double double39 = complex21.real;
        double double40 = complex21.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = complex21.sub(complex56);
        double double75 = complex56.imaginary;
        code.src.Complex complex76 = complex5.add(complex56);
        double double77 = complex5.imaginary;
        code.src.Complex complex80 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex83 = new code.src.Complex((double) 10L, (double) '#');
        double double84 = complex83.imaginary;
        code.src.Complex complex85 = complex80.multiply(complex83);
        code.src.Complex complex88 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex91 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex92 = complex88.multiply(complex91);
        double double93 = complex92.imaginary;
        code.src.Complex complex94 = complex85.multiply(complex92);
        code.src.Complex complex95 = complex5.multiply(complex85);
        code.src.Complex complex96 = complex2.sub(complex95);
        java.lang.Class<?> wildcardClass97 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 290.95719905143267d + "'", double39 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 437.56491210010614d + "'", double75 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-0.0d) + "'", double77 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 35.0d + "'", double84 == 35.0d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 437.56491210010614d + "'", double93 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        code.src.Complex complex2 = code.src.Complex.polar(109.15874002118079d, 1067.326366915413d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex7.imaginary;
        double double45 = complex7.imaginary;
        java.lang.String str46 = complex7.toString();
        code.src.Complex complex47 = complex2.sub(complex7);
        java.lang.String str48 = complex7.toString();
        code.src.Complex complex51 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex51.imaginary = (short) 0;
        double double54 = complex51.abs();
        double double55 = complex51.real;
        double double56 = complex51.real;
        double double57 = complex51.imaginary;
        code.src.Complex complex58 = complex7.multiply(complex51);
        double double59 = complex51.abs();
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(1.0,0.0)" + "'", str46, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(1.0,0.0)" + "'", str48, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + (-0.0d) + "'", double55 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + (-0.0d) + "'", double56 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        code.src.Complex complex52 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex55 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex48.add(complex56);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (-1.0d));
        code.src.Complex complex61 = complex56.multiply(complex60);
        java.lang.Class<?> wildcardClass62 = complex56.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        code.src.Complex complex2 = code.src.Complex.polar(998.947820022602d, 352.8614791462894d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        code.src.Complex complex2 = code.src.Complex.polar(1336.6737350030942d, (-489.10687533685115d));
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(742.804045141884,1111.2780139856884)" + "'", str3, "(742.804045141884,1111.2780139856884)");
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        code.src.Complex complex79 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str80 = complex79.toString();
        java.lang.String str81 = complex79.toString();
        code.src.Complex complex82 = complex40.sub(complex79);
        complex79.real = 28.09571990514327d;
        complex79.imaginary = 119.9377093343606d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(100.0,10.0)" + "'", str80, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(100.0,10.0)" + "'", str81, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex82);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        code.src.Complex complex2 = new code.src.Complex((-7835.953174193246d), 0.0d);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex37 = complex32.sub(complex36);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double41 = complex40.abs();
        code.src.Complex complex42 = complex36.add(complex40);
        complex40.real = 1050.9408051475186d;
        complex40.real = 200.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 581.9143981028653d + "'", double33 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(complex42);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 663.590879631022d);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex44);
        java.lang.Class<?> wildcardClass90 = complex44.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        code.src.Complex complex2 = code.src.Complex.polar((-0.5440211108893698d), 9.866275920404853d);
        double double3 = complex2.imaginary;
        code.src.Complex complex4 = new code.src.Complex();
        complex4.real = 1L;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex40 = complex4.add(complex39);
        double double41 = complex40.real;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex40.sub(complex47);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex47.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex57 = complex52.add(complex56);
        complex52.real = 43.756491210010616d;
        complex52.imaginary = 100.0d;
        complex52.imaginary = (-317.11773840932915d);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex52.multiply(complex78);
        java.lang.String str81 = complex52.toString();
        code.src.Complex complex82 = complex2.add(complex52);
        double double83 = complex52.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.2324571024365446d + "'", double3 == 0.2324571024365446d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 582.9143981028653d + "'", double41 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(43.756491210010616,-317.11773840932915)" + "'", str81, "(43.756491210010616,-317.11773840932915)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 320.1223055909404d + "'", double83 == 320.1223055909404d);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        complex2.imaginary = 10.0d;
        double double10 = complex2.real;
        double double11 = complex2.imaginary;
        double double12 = complex2.real;
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex65 = complex48.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex48.sub(complex68);
        code.src.Complex complex74 = complex31.add(complex73);
        code.src.Complex complex75 = complex25.add(complex31);
        double double76 = complex75.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 43.756491210010616d + "'", double76 == 43.756491210010616d);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, 309.0545367982484d);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        code.src.Complex complex2 = code.src.Complex.polar(865.1298242002123d, 100.00499987500625d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double44 = complex43.abs();
        double double45 = complex43.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        java.lang.String str79 = complex61.toString();
        double double80 = complex61.abs();
        double double81 = complex61.real;
        code.src.Complex complex82 = complex43.sub(complex61);
        code.src.Complex complex85 = code.src.Complex.polar(875.1298242002123d, (double) (-1L));
        code.src.Complex complex86 = complex82.sub(complex85);
        code.src.Complex complex87 = complex40.sub(complex86);
        double double88 = complex86.abs();
        complex86.imaginary = (-363960.5478434686d);
        double double91 = complex86.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 28.09571990514327d + "'", double45 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str79, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 525.4704025737593d + "'", double80 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 290.95719905143267d + "'", double81 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 811.5511719071119d + "'", double88 == 811.5511719071119d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 363961.29139694216d + "'", double91 == 363961.29139694216d);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        code.src.Complex complex2 = new code.src.Complex(284.34411937270323d, 354081.6424874725d);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.imaginary = (-317.11773840932915d);
        complex2.real = 0.0d;
        complex2.imaginary = 5723247.3589574285d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 280.95719905143267d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex21.sub(complex41);
        code.src.Complex complex47 = new code.src.Complex();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        double double81 = complex80.real;
        code.src.Complex complex82 = complex47.multiply(complex80);
        code.src.Complex complex83 = complex21.multiply(complex80);
        code.src.Complex complex84 = complex5.sub(complex83);
        java.lang.String str85 = complex5.toString();
        java.lang.String str86 = complex5.toString();
        code.src.Complex complex87 = complex2.add(complex5);
        complex2.imaginary = 213613.9212426372d;
        double double90 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 581.9143981028653d + "'", double81 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(100.0,10.0)" + "'", str85, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 213613.9212426372d + "'", double90 == 213613.9212426372d);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 100, 589.1068753368511d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        code.src.Complex complex44 = new code.src.Complex();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex79 = complex44.multiply(complex77);
        code.src.Complex complex80 = complex18.multiply(complex77);
        code.src.Complex complex83 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double84 = complex83.imaginary;
        code.src.Complex complex85 = complex77.add(complex83);
        double double86 = complex77.imaginary;
        double double87 = complex77.real;
        code.src.Complex complex88 = complex2.add(complex77);
        double double89 = complex88.abs();
        double double90 = complex88.abs();
        double double91 = complex88.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 581.9143981028653d + "'", double78 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 437.56491210010614d + "'", double84 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 875.1298242002123d + "'", double86 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 581.9143981028653d + "'", double87 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 972.8942831596377d + "'", double89 == 972.8942831596377d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 972.8942831596377d + "'", double90 == 972.8942831596377d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 775.2994455960913d + "'", double91 == 775.2994455960913d);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex6 = complex2.sub(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        code.src.Complex complex10 = complex5.sub(complex9);
        java.lang.Class<?> wildcardClass11 = complex10.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100.0f, 865.1298242002123d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double19 = complex18.abs();
        java.lang.String str20 = complex18.toString();
        complex18.imaginary = 'a';
        code.src.Complex complex23 = complex14.add(complex18);
        double double24 = complex23.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str20, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.98697676922636d + "'", double24 == 100.98697676922636d);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        code.src.Complex complex53 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        double double57 = complex56.imaginary;
        code.src.Complex complex58 = complex53.multiply(complex56);
        code.src.Complex complex59 = complex50.multiply(complex56);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        complex62.imaginary = (-1.0f);
        double double78 = complex62.real;
        double double79 = complex62.real;
        complex62.imaginary = 141.4213562373095d;
        code.src.Complex complex84 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex84.imaginary = (byte) 1;
        code.src.Complex complex87 = complex62.multiply(complex84);
        code.src.Complex complex88 = complex59.sub(complex87);
        complex88.imaginary = 291.13071236105446d;
        code.src.Complex complex93 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double94 = complex93.abs();
        double double95 = complex93.real;
        code.src.Complex complex96 = complex88.add(complex93);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 35.0d + "'", double57 == 35.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 1018.3729221500101d + "'", double94 == 1018.3729221500101d);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 1018.3729221500101d + "'", double95 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex96);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex5 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex36 = complex9.add(complex35);
        code.src.Complex complex37 = complex6.add(complex9);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        java.lang.String str71 = complex53.toString();
        double double72 = complex53.abs();
        double double73 = complex53.real;
        complex53.imaginary = 0;
        code.src.Complex complex76 = complex9.add(complex53);
        double double77 = complex9.abs();
        java.lang.Class<?> wildcardClass78 = complex9.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str71, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 525.4704025737593d + "'", double72 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 290.95719905143267d + "'", double73 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 525.4704025737593d + "'", double77 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        code.src.Complex complex2 = new code.src.Complex(280.95719905143267d, (-1126.926425076796d));
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        code.src.Complex complex18 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        complex22.real = (byte) 1;
        complex22.imaginary = (short) 100;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex42.multiply(complex46);
        code.src.Complex complex48 = complex22.multiply(complex42);
        code.src.Complex complex51 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str52 = complex51.toString();
        code.src.Complex complex55 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex56 = complex51.sub(complex55);
        complex51.imaginary = (-1.0f);
        code.src.Complex complex59 = complex22.sub(complex51);
        double double60 = complex22.abs();
        java.lang.String str61 = complex22.toString();
        code.src.Complex complex62 = complex6.add(complex22);
        code.src.Complex complex63 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex64 = complex6.sub(complex63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 290.95719905143267d + "'", double43 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(100.0,10.0)" + "'", str52, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.00499987500625d + "'", double60 == 100.00499987500625d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(1.0,100.0)" + "'", str61, "(1.0,100.0)");
        org.junit.Assert.assertNotNull(complex62);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        code.src.Complex complex2 = code.src.Complex.polar(100.0d, (-393.80842089009553d));
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        java.lang.String str7 = complex6.toString();
        complex6.real = 10.0d;
        code.src.Complex complex10 = complex2.add(complex6);
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex54.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex64 = complex59.add(complex63);
        complex59.real = 43.756491210010616d;
        complex59.imaginary = 100.0d;
        complex59.imaginary = 8101.177047836208d;
        complex59.real = 0L;
        code.src.Complex complex73 = complex2.add(complex59);
        complex73.real = 0.0d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-44.52533050340393,89.54046539728643)" + "'", str3, "(-44.52533050340393,89.54046539728643)");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex73);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        code.src.Complex complex2 = new code.src.Complex(307.6491606976328d, 291.13071236105446d);
        code.src.Complex complex5 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex8 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex8.imaginary = (short) 0;
        complex8.imaginary = 100.0f;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        java.lang.String str46 = complex28.toString();
        code.src.Complex complex49 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex49.imaginary = (short) 0;
        java.lang.String str52 = complex49.toString();
        code.src.Complex complex53 = complex28.sub(complex49);
        code.src.Complex complex54 = complex8.add(complex53);
        complex54.imaginary = 0;
        complex54.real = 10.0f;
        complex54.imaginary = 481.32140331011675d;
        code.src.Complex complex61 = complex5.multiply(complex54);
        double double62 = complex61.imaginary;
        code.src.Complex complex63 = complex2.multiply(complex61);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str46, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(-0.0,0.0)" + "'", str52, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 49132.14033101167d + "'", double62 == 49132.14033101167d);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        code.src.Complex complex2 = code.src.Complex.polar((double) ' ', 445.5830705563102d);
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        java.lang.String str72 = complex54.toString();
        double double73 = complex54.abs();
        code.src.Complex complex74 = complex3.multiply(complex54);
        double double75 = complex54.imaginary;
        java.lang.String str76 = complex54.toString();
        code.src.Complex complex77 = complex2.add(complex54);
        complex77.imaginary = 51323.06127921141d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 525.4704025737593d + "'", double73 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 437.56491210010614d + "'", double75 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str76, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex77);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        java.lang.String str4 = complex2.toString();
        code.src.Complex complex7 = new code.src.Complex((-389.10687533685115d), 213623.9212426372d);
        complex7.imaginary = 611.0101180080086d;
        java.lang.String str10 = complex7.toString();
        code.src.Complex complex11 = complex2.multiply(complex7);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(100.0,10.0)" + "'", str4, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(-389.10687533685115,611.0101180080086)" + "'", str10, "(-389.10687533685115,611.0101180080086)");
        org.junit.Assert.assertNotNull(complex11);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        code.src.Complex complex2 = code.src.Complex.polar(288.4361024143587d, (-333229.2368515873d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        code.src.Complex complex2 = new code.src.Complex((-35.0d), 102.46950765959599d);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        code.src.Complex complex2 = code.src.Complex.polar(9.866275920404853d, 432.1247009912124d);
        complex2.real = (-0.5440211108893698d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        code.src.Complex complex2 = new code.src.Complex((-1126.926425076796d), 1.6424065671921217E8d);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex16 = new code.src.Complex();
        complex16.real = 1L;
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex52 = complex16.add(complex51);
        double double53 = complex52.real;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex52.sub(complex59);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex59.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex69 = complex64.add(complex68);
        code.src.Complex complex70 = complex14.sub(complex68);
        double double71 = complex70.imaginary;
        double double72 = complex70.imaginary;
        complex70.imaginary = 175.79622099436838d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 582.9143981028653d + "'", double53 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-35.0d) + "'", double71 == (-35.0d));
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-35.0d) + "'", double72 == (-35.0d));
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        double double46 = complex45.real;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        double double80 = complex79.real;
        code.src.Complex complex83 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex84 = complex79.sub(complex83);
        complex84.real = 'a';
        double double87 = complex84.real;
        code.src.Complex complex88 = complex45.sub(complex84);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 554.8186781977221d + "'", double46 == 554.8186781977221d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 581.9143981028653d + "'", double80 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 97.0d + "'", double87 == 97.0d);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        code.src.Complex complex2 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex5.real = (-906.2883532154044d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.real;
        java.lang.String str13 = complex11.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex24.real = 10;
        code.src.Complex complex27 = complex16.multiply(complex24);
        code.src.Complex complex30 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex31 = new code.src.Complex();
        complex31.real = 1L;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex66 = complex49.add(complex65);
        code.src.Complex complex67 = complex31.add(complex66);
        double double68 = complex67.real;
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex67.sub(complex74);
        double double77 = complex67.imaginary;
        code.src.Complex complex78 = complex30.sub(complex67);
        code.src.Complex complex79 = complex24.add(complex30);
        code.src.Complex complex82 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex83 = complex30.add(complex82);
        complex83.real = 279.7722729260128d;
        code.src.Complex complex86 = complex11.multiply(complex83);
        code.src.Complex complex87 = complex5.sub(complex11);
        code.src.Complex complex90 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        complex90.real = 10;
        code.src.Complex complex95 = new code.src.Complex(318.2958031472754d, (-54.40211108893698d));
        code.src.Complex complex96 = complex90.sub(complex95);
        code.src.Complex complex97 = complex87.sub(complex96);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 28.09571990514327d + "'", double12 == 28.09571990514327d);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str13, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 582.9143981028653d + "'", double68 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 875.1298242002123d + "'", double77 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        code.src.Complex complex2 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) 0.0f, 36.40054944640259d);
        double double6 = complex5.real;
        java.lang.String str7 = complex5.toString();
        code.src.Complex complex10 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex13 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex57.add(complex62);
        code.src.Complex complex64 = complex13.add(complex62);
        code.src.Complex complex65 = complex10.multiply(complex62);
        complex62.real = 100;
        double double68 = complex62.imaginary;
        code.src.Complex complex69 = complex5.add(complex62);
        code.src.Complex complex70 = complex2.sub(complex69);
        double double71 = complex70.real;
        double double72 = complex70.real;
        complex70.imaginary = (-0.9994813445442423d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(0.0,-0.0)" + "'", str7, "(0.0,-0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 43.756491210010616d + "'", double68 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 324.9608082617091d + "'", double71 == 324.9608082617091d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 324.9608082617091d + "'", double72 == 324.9608082617091d);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        code.src.Complex complex2 = new code.src.Complex(811.5517880109727d, (-545.7908951722745d));
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        code.src.Complex complex2 = code.src.Complex.polar(36.40054944640259d, 8.230399429810259E7d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex29 = complex15.multiply(complex28);
        code.src.Complex complex32 = code.src.Complex.polar(148.66068747318505d, (-272.8614791462894d));
        code.src.Complex complex33 = complex28.add(complex32);
        code.src.Complex complex36 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex37 = new code.src.Complex();
        complex37.real = 1L;
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        java.lang.String str63 = complex58.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex58.add(complex70);
        code.src.Complex complex72 = complex55.add(complex71);
        code.src.Complex complex73 = complex37.add(complex72);
        double double74 = complex73.real;
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex73.sub(complex80);
        double double83 = complex73.imaginary;
        code.src.Complex complex84 = complex36.sub(complex73);
        double double85 = complex73.imaginary;
        code.src.Complex complex86 = complex28.sub(complex73);
        complex28.real = 1055.9594711542297d;
        complex28.imaginary = 1042.070607321742d;
        java.lang.Class<?> wildcardClass91 = complex28.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(10.0,0.0)" + "'", str63, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 582.9143981028653d + "'", double74 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 875.1298242002123d + "'", double83 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 875.1298242002123d + "'", double85 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 2022.0451520447884d);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        code.src.Complex complex53 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        double double57 = complex56.imaginary;
        code.src.Complex complex58 = complex53.multiply(complex56);
        code.src.Complex complex59 = complex50.multiply(complex56);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        complex62.imaginary = (-1.0f);
        double double78 = complex62.real;
        double double79 = complex62.real;
        complex62.imaginary = 141.4213562373095d;
        code.src.Complex complex84 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex84.imaginary = (byte) 1;
        code.src.Complex complex87 = complex62.multiply(complex84);
        code.src.Complex complex88 = complex59.sub(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, 0.0d);
        java.lang.String str92 = complex91.toString();
        code.src.Complex complex93 = complex88.multiply(complex91);
        complex88.real = 97.0d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 35.0d + "'", double57 == 35.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(10.0,0.0)" + "'", str92, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex93);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        java.lang.String str16 = complex14.toString();
        java.lang.String str17 = complex14.toString();
        complex14.real = 100.00499987500625d;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex52 = complex35.add(complex51);
        double double53 = complex52.real;
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex57 = complex52.sub(complex56);
        complex56.imaginary = 582.9143981028653d;
        code.src.Complex complex62 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex65 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex66 = complex62.add(complex65);
        code.src.Complex complex67 = complex56.add(complex66);
        code.src.Complex complex68 = complex14.multiply(complex66);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str16, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str17, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 581.9143981028653d + "'", double53 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        code.src.Complex complex2 = new code.src.Complex(582.9143981028653d, 663.590879631022d);
        double double3 = complex2.real;
        java.lang.String str4 = complex2.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 582.9143981028653d + "'", double3 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(582.9143981028653,663.590879631022)" + "'", str4, "(582.9143981028653,663.590879631022)");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        code.src.Complex complex16 = complex7.multiply(complex14);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        double double41 = complex40.imaginary;
        code.src.Complex complex42 = complex32.sub(complex40);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex65.sub(complex85);
        code.src.Complex complex91 = complex48.add(complex90);
        code.src.Complex complex92 = complex42.add(complex48);
        code.src.Complex complex93 = complex14.sub(complex48);
        code.src.Complex complex96 = code.src.Complex.polar(97.0d, (double) '4');
        code.src.Complex complex97 = complex93.sub(complex96);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        code.src.Complex complex2 = new code.src.Complex(483.75822480116756d, (-8062.246137461803d));
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        double double5 = complex2.abs();
        double double6 = complex2.real;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex22.real;
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex44 = complex22.sub(complex43);
        java.lang.String str45 = complex44.toString();
        code.src.Complex complex46 = complex2.sub(complex44);
        complex2.imaginary = 875.8294407044641d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0d) + "'", double6 == (-0.0d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str45, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex46);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        code.src.Complex complex2 = code.src.Complex.polar((-545.7908951722745d), 62.9683262670583d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        code.src.Complex complex2 = new code.src.Complex((-36073.24762350389d), 35.014282800023196d);
        complex2.real = 462.29664434568275d;
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex41 = new code.src.Complex();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex76 = complex41.multiply(complex74);
        code.src.Complex complex77 = complex15.multiply(complex74);
        code.src.Complex complex80 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double81 = complex80.imaginary;
        code.src.Complex complex82 = complex74.add(complex80);
        java.lang.Class<?> wildcardClass83 = complex80.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 581.9143981028653d + "'", double75 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 437.56491210010614d + "'", double81 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        code.src.Complex complex2 = code.src.Complex.polar((-101.0d), 5225.935322982863d);
        double double3 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.490726945797887d + "'", double3 == 10.490726945797887d);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        code.src.Complex complex2 = code.src.Complex.polar(483.75822480116756d, 27.594203913205885d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        code.src.Complex complex2 = new code.src.Complex(102.46950765959599d, (-3891.0687533685114d));
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        double double41 = complex40.imaginary;
        complex40.real = 290.95719905143267d;
        java.lang.String str44 = complex40.toString();
        code.src.Complex complex47 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex50 = new code.src.Complex((double) 10L, (double) '#');
        double double51 = complex50.imaginary;
        code.src.Complex complex52 = complex47.multiply(complex50);
        double double53 = complex52.imaginary;
        code.src.Complex complex56 = code.src.Complex.polar(291.13071236105446d, (-393.80842089009553d));
        code.src.Complex complex57 = complex52.add(complex56);
        code.src.Complex complex58 = complex40.sub(complex52);
        java.lang.String str59 = complex58.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 100.0f, (double) (byte) 0);
        code.src.Complex complex63 = complex58.multiply(complex62);
        java.lang.String str64 = complex62.toString();
        code.src.Complex complex65 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex66 = complex62.sub(complex65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str44, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 35.0d + "'", double51 == 35.0d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 320.0d + "'", double53 == 320.0d);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(1410.9571990514328,117.56491210010614)" + "'", str59, "(1410.9571990514328,117.56491210010614)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(100.0,0.0)" + "'", str64, "(100.0,0.0)");
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        code.src.Complex complex2 = code.src.Complex.polar(14.142135623730951d, 875.1303955438267d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        double double41 = complex15.abs();
        double double42 = complex15.real;
        code.src.Complex complex45 = new code.src.Complex((double) 10.0f, 0.0d);
        code.src.Complex complex46 = complex15.add(complex45);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 525.4704025737593d + "'", double41 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 290.95719905143267d + "'", double42 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex46);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str8 = complex7.toString();
        code.src.Complex complex11 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex12 = complex7.sub(complex11);
        code.src.Complex complex13 = complex2.sub(complex11);
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        complex16.real = (byte) 1;
        complex16.real = 589.1068753368511d;
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex25 = new code.src.Complex();
        complex25.real = 1L;
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex60 = complex43.add(complex59);
        code.src.Complex complex61 = complex25.add(complex60);
        double double62 = complex61.real;
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex61.sub(complex68);
        code.src.Complex complex71 = complex24.add(complex68);
        code.src.Complex complex72 = complex16.sub(complex68);
        complex72.imaginary = 663.590879631022d;
        code.src.Complex complex75 = complex11.add(complex72);
        complex11.imaginary = 14193.462505738793d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(100.0,10.0)" + "'", str8, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(589.1068753368511,10.0)" + "'", str21, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 582.9143981028653d + "'", double62 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        code.src.Complex complex2 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex41 = complex2.add(complex39);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double45 = complex44.abs();
        double double46 = complex44.real;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        java.lang.String str80 = complex62.toString();
        double double81 = complex62.abs();
        double double82 = complex62.real;
        code.src.Complex complex83 = complex44.sub(complex62);
        java.lang.String str84 = complex44.toString();
        code.src.Complex complex85 = complex41.multiply(complex44);
        code.src.Complex complex88 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        double double89 = complex88.imaginary;
        code.src.Complex complex90 = complex44.add(complex88);
        code.src.Complex complex93 = new code.src.Complex((double) 100, (double) 10.0f);
        complex93.imaginary = '4';
        double double96 = complex93.real;
        code.src.Complex complex97 = complex44.sub(complex93);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 52.0d + "'", double45 == 52.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 28.09571990514327d + "'", double46 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str80, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 525.4704025737593d + "'", double81 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 290.95719905143267d + "'", double82 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str84, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 290.95719905143267d + "'", double89 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 52.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        double double45 = complex43.imaginary;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double50 = complex49.abs();
        double double51 = complex49.real;
        code.src.Complex complex52 = complex43.sub(complex49);
        code.src.Complex complex53 = complex36.sub(complex43);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = new code.src.Complex((double) (short) 100, (double) (-1));
        complex57.real = 10L;
        double double60 = complex57.imaginary;
        code.src.Complex complex61 = complex53.sub(complex57);
        code.src.Complex complex62 = complex2.multiply(complex57);
        java.lang.String str63 = complex62.toString();
        double double64 = complex62.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 43.756491210010616d + "'", double45 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str46, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 52.0d + "'", double50 == 52.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 28.09571990514327d + "'", double51 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(-28.09571990514327,-43.756491210010616)" + "'", str54, "(-28.09571990514327,-43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(-64.32802159165696,1002.9266701200559)" + "'", str63, "(-64.32802159165696,1002.9266701200559)");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1002.9266701200559d + "'", double64 == 1002.9266701200559d);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        code.src.Complex complex2 = new code.src.Complex(35.014282800023196d, (-54.40211108893698d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = new code.src.Complex();
        code.src.Complex complex72 = complex70.add(complex71);
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        double double80 = complex78.imaginary;
        java.lang.String str81 = complex78.toString();
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double85 = complex84.abs();
        double double86 = complex84.real;
        code.src.Complex complex87 = complex78.sub(complex84);
        code.src.Complex complex88 = complex71.sub(complex78);
        code.src.Complex complex89 = complex36.add(complex71);
        double double90 = complex89.real;
        double double91 = complex89.real;
        code.src.Complex complex92 = complex2.sub(complex89);
        complex92.imaginary = 520.0d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 43.756491210010616d + "'", double80 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str81, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 52.0d + "'", double85 == 52.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 28.09571990514327d + "'", double86 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        code.src.Complex complex2 = new code.src.Complex((-131.01341704986802d), 432.1247009912124d);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        code.src.Complex complex2 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex9 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex10 = complex6.add(complex9);
        complex10.real = 1018.3729221500101d;
        code.src.Complex complex13 = complex2.multiply(complex10);
        complex13.real = (-54.40211108893698d);
        double double16 = complex13.imaginary;
        double double17 = complex13.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1018.3729221500101d + "'", double3 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-2.1786157730571607E8d) + "'", double16 == (-2.1786157730571607E8d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-54.40211108893698d) + "'", double17 == (-54.40211108893698d));
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        complex2.imaginary = (-43.756491210010616d);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        double double86 = complex85.real;
        code.src.Complex complex89 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex90 = complex85.sub(complex89);
        complex90.real = 'a';
        double double93 = complex90.real;
        code.src.Complex complex94 = complex2.add(complex90);
        double double95 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 581.9143981028653d + "'", double86 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 97.0d + "'", double93 == 97.0d);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 491.0602468381958d + "'", double95 == 491.0602468381958d);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        complex45.real = 0.0d;
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double51 = complex50.abs();
        double double52 = complex50.real;
        code.src.Complex complex55 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex56 = complex50.multiply(complex55);
        code.src.Complex complex57 = complex45.add(complex50);
        java.lang.String str58 = complex50.toString();
        code.src.Complex complex61 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        code.src.Complex complex62 = complex50.add(complex61);
        java.lang.Class<?> wildcardClass63 = complex61.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 52.0d + "'", double51 == 52.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 28.09571990514327d + "'", double52 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str58, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        code.src.Complex complex2 = code.src.Complex.polar((-62.9683262670583d), 1136.0754242392372d);
        complex2.real = 0.0d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex36 = new code.src.Complex();
        complex36.real = 1L;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        code.src.Complex complex72 = complex36.add(complex71);
        double double73 = complex72.real;
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex72.sub(complex79);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex79.add(complex84);
        code.src.Complex complex88 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex89 = complex84.add(complex88);
        code.src.Complex complex90 = complex33.multiply(complex89);
        double double91 = complex33.abs();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 582.9143981028653d + "'", double73 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 1050.9408051475186d + "'", double91 == 1050.9408051475186d);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        code.src.Complex complex2 = code.src.Complex.polar(148.66068747318505d, 1051.4948429356753d);
        double double3 = complex2.imaginary;
        complex2.real = 663.590879631022d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 119.9377093343606d + "'", double3 == 119.9377093343606d);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        java.lang.String str16 = complex2.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 1L, 552238.2879620573d);
        code.src.Complex complex20 = complex2.add(complex19);
        java.lang.String str21 = complex20.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(11.0,552238.2879620573)" + "'", str21, "(11.0,552238.2879620573)");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        code.src.Complex complex2 = new code.src.Complex(492.8116754934422d, 67383.44940348352d);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        java.lang.String str37 = complex35.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str37, "(581.9143981028653,875.1298242002123)");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.real = 525.4704025737593d;
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex18 = complex2.add(complex14);
        double double19 = complex2.imaginary;
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str23 = complex22.toString();
        java.lang.String str24 = complex22.toString();
        java.lang.String str25 = complex22.toString();
        double double26 = complex22.imaginary;
        code.src.Complex complex27 = complex2.add(complex22);
        java.lang.Class<?> wildcardClass28 = complex27.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 525.4704025737593d + "'", double7 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str16, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 280.95719905143267d + "'", double17 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,10.0)" + "'", str23, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(100.0,10.0)" + "'", str24, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(100.0,10.0)" + "'", str25, "(100.0,10.0)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        code.src.Complex complex2 = new code.src.Complex(572.0d, (double) 1L);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex10.imaginary;
        double double48 = complex10.imaginary;
        java.lang.String str49 = complex10.toString();
        code.src.Complex complex50 = complex5.sub(complex10);
        code.src.Complex complex51 = complex2.multiply(complex50);
        complex2.imaginary = 317.11773840932915d;
        complex2.real = (-280.95719905143267d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1.0,0.0)" + "'", str49, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        double double55 = complex2.real;
        code.src.Complex complex58 = new code.src.Complex(28.09571990514327d, (double) ' ');
        code.src.Complex complex59 = complex2.add(complex58);
        java.lang.String str60 = complex2.toString();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(100.0,100.0)" + "'", str60, "(100.0,100.0)");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        code.src.Complex complex2 = code.src.Complex.polar(148.66068747318505d, 1051.4948429356753d);
        double double3 = complex2.imaginary;
        java.lang.Class<?> wildcardClass4 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 119.9377093343606d + "'", double3 == 119.9377093343606d);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        code.src.Complex complex24 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex24.imaginary = (byte) 1;
        code.src.Complex complex27 = complex2.multiply(complex24);
        double double28 = complex2.abs();
        double double29 = complex2.imaginary;
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        double double38 = complex32.real;
        code.src.Complex complex41 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex42 = complex32.multiply(complex41);
        complex41.real = (byte) 100;
        code.src.Complex complex47 = code.src.Complex.polar(214489.24976920983d, (-36073.24762350389d));
        code.src.Complex complex48 = complex41.sub(complex47);
        code.src.Complex complex49 = complex2.multiply(complex48);
        double double50 = complex2.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 141.77446878757826d + "'", double28 == 141.77446878757826d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 141.4213562373095d + "'", double29 == 141.4213562373095d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 141.77446878757826d + "'", double50 == 141.77446878757826d);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 663.590879631022d);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex44);
        code.src.Complex complex92 = new code.src.Complex(663.590879631022d, 43.756491210010616d);
        complex92.imaginary = '#';
        double double95 = complex92.real;
        code.src.Complex complex96 = complex89.sub(complex92);
        double double97 = complex92.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 663.590879631022d + "'", double95 == 663.590879631022d);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 664.513247068464d + "'", double97 == 664.513247068464d);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        code.src.Complex complex2 = new code.src.Complex((double) 1, 1018.3729221500101d);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,1018.3729221500101)" + "'", str3, "(1.0,1018.3729221500101)");
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex5 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex36 = complex9.add(complex35);
        code.src.Complex complex37 = complex6.add(complex9);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        double double71 = complex53.real;
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.imaginary = 100.0f;
        code.src.Complex complex79 = complex53.sub(complex74);
        complex79.real = (short) -1;
        double double82 = complex79.real;
        complex79.imaginary = 5336.90751278706d;
        code.src.Complex complex85 = complex37.add(complex79);
        java.lang.Class<?> wildcardClass86 = complex37.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 290.95719905143267d + "'", double71 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + (-1.0d) + "'", double82 == (-1.0d));
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        code.src.Complex complex22 = code.src.Complex.polar(0.0d, (double) (short) -1);
        java.lang.String str23 = complex22.toString();
        code.src.Complex complex24 = complex2.sub(complex22);
        java.lang.Class<?> wildcardClass25 = complex24.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(0.0,-0.0)" + "'", str23, "(0.0,-0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        double double5 = complex2.abs();
        complex2.real = 0.9999999999999999d;
        code.src.Complex complex10 = code.src.Complex.polar(28.09571990514327d, 100.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        complex16.real = (byte) 1;
        complex16.imaginary = (short) 100;
        code.src.Complex complex21 = new code.src.Complex();
        complex21.real = 1L;
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex56 = complex39.add(complex55);
        code.src.Complex complex57 = complex21.add(complex56);
        double double58 = complex21.imaginary;
        double double59 = complex21.imaginary;
        java.lang.String str60 = complex21.toString();
        code.src.Complex complex61 = complex16.sub(complex21);
        code.src.Complex complex64 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        double double72 = complex70.imaginary;
        java.lang.String str73 = complex70.toString();
        code.src.Complex complex74 = complex64.sub(complex70);
        code.src.Complex complex77 = new code.src.Complex((double) 100, (double) 10.0f);
        complex77.real = (byte) 1;
        code.src.Complex complex80 = complex70.multiply(complex77);
        code.src.Complex complex81 = complex61.sub(complex80);
        code.src.Complex complex82 = complex13.multiply(complex80);
        double double83 = complex13.imaginary;
        complex13.imaginary = (-0.0d);
        code.src.Complex complex86 = complex10.add(complex13);
        code.src.Complex complex87 = complex2.multiply(complex86);
        java.lang.String str88 = complex2.toString();
        double double89 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 52.0d + "'", double5 == 52.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(1.0,0.0)" + "'", str60, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 43.756491210010616d + "'", double72 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str73, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-5.063656411097588d) + "'", double83 == (-5.063656411097588d));
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(0.9999999999999999,43.756491210010616)" + "'", str88, "(0.9999999999999999,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 43.756491210010616d + "'", double89 == 43.756491210010616d);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        code.src.Complex complex2 = new code.src.Complex(0.9999999999999999d, 907.1298242002123d);
        complex2.imaginary = 175.79622099436838d;
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex0.imaginary;
        double double38 = complex0.imaginary;
        java.lang.String str39 = complex0.toString();
        double double40 = complex0.real;
        complex0.real = 404.4663637172829d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(1.0,0.0)" + "'", str39, "(1.0,0.0)");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex18.real;
        double double37 = complex18.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = complex18.sub(complex53);
        double double72 = complex53.imaginary;
        code.src.Complex complex73 = complex2.add(complex53);
        code.src.Complex complex76 = new code.src.Complex(525.4704025737593d, (double) 10L);
        code.src.Complex complex77 = complex73.multiply(complex76);
        double double78 = complex73.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 437.56491210010614d + "'", double72 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 289.95719905143267d + "'", double78 == 289.95719905143267d);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        code.src.Complex complex2 = new code.src.Complex((-106706.9606213186d), 213613.9212426372d);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        code.src.Complex complex2 = code.src.Complex.polar((-1126.926425076796d), (-100.59299479274858d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str7 = complex6.toString();
        code.src.Complex complex8 = complex2.multiply(complex6);
        double double9 = complex6.real;
        code.src.Complex complex12 = new code.src.Complex((double) 100, (double) 10.0f);
        complex12.real = (byte) 1;
        complex12.imaginary = (short) 100;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex32.multiply(complex36);
        code.src.Complex complex38 = complex12.multiply(complex32);
        code.src.Complex complex41 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex42 = complex32.multiply(complex41);
        code.src.Complex complex43 = complex6.multiply(complex42);
        double double44 = complex6.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(100.0,10.0)" + "'", str7, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.4987562112089d + "'", double44 == 100.4987562112089d);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) -1, 0.8414709848078965d);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        java.lang.String str77 = complex40.toString();
        complex40.real = 170.71953646075502d;
        code.src.Complex complex82 = new code.src.Complex(589.1068753368511d, 481.32140331011675d);
        code.src.Complex complex83 = complex40.add(complex82);
        code.src.Complex complex86 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex87 = complex82.sub(complex86);
        complex87.real = 522.8336537091443d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(581.9143981028653,907.1298242002123)" + "'", str77, "(581.9143981028653,907.1298242002123)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex87);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        code.src.Complex complex2 = new code.src.Complex((-98.89258309150243d), 52.009614495783374d);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        java.lang.String str4 = complex2.toString();
        java.lang.String str5 = complex2.toString();
        code.src.Complex complex8 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        double double16 = complex14.imaginary;
        java.lang.String str17 = complex14.toString();
        code.src.Complex complex18 = complex8.sub(complex14);
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex21.real = 875.1298242002123d;
        complex21.imaginary = (-317.11773840932915d);
        complex21.real = 0.0d;
        code.src.Complex complex28 = complex18.sub(complex21);
        code.src.Complex complex29 = complex2.sub(complex28);
        complex28.imaginary = (-0.5063656411097588d);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(100.0,10.0)" + "'", str4, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(100.0,10.0)" + "'", str5, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 43.756491210010616d + "'", double16 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str17, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        code.src.Complex complex2 = new code.src.Complex((double) 1.0f, (double) '#');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex9 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex10 = complex6.add(complex9);
        complex10.real = 0.0d;
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex15.imaginary = (short) 0;
        complex15.imaginary = 100.0f;
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str23 = complex22.toString();
        code.src.Complex complex26 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex27 = complex22.sub(complex26);
        code.src.Complex complex28 = complex15.multiply(complex27);
        java.lang.String str29 = complex27.toString();
        double double30 = complex27.real;
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex63 = complex46.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex46.sub(complex66);
        double double72 = complex46.abs();
        code.src.Complex complex73 = complex27.multiply(complex46);
        code.src.Complex complex74 = complex10.add(complex46);
        java.lang.String str75 = complex74.toString();
        code.src.Complex complex76 = complex2.add(complex74);
        code.src.Complex complex79 = new code.src.Complex(1091.0075601938674d, (double) (byte) -1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        double double81 = complex76.abs();
        complex76.real = (-317.11773840932915d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.014282800023196d + "'", double3 == 35.014282800023196d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,10.0)" + "'", str23, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str29, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 589.1068753368511d + "'", double30 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 525.4704025737593d + "'", double72 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str75, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 522.8336537091443d + "'", double81 == 522.8336537091443d);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        code.src.Complex complex2 = code.src.Complex.polar(0.8390715290764524d, 213613.9212426372d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        code.src.Complex complex2 = new code.src.Complex(213931.13074726702d, (-6.660172805893699E7d));
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 290.9589175121722d;
        code.src.Complex complex47 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex50 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex35.sub(complex47);
        java.lang.Class<?> wildcardClass53 = complex52.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        code.src.Complex complex2 = new code.src.Complex((-437.56491210010614d), (-35.0d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        double double44 = complex43.imaginary;
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        code.src.Complex complex81 = complex47.add(complex63);
        code.src.Complex complex84 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex85 = complex63.sub(complex84);
        code.src.Complex complex86 = complex43.add(complex84);
        complex84.real = 35.0d;
        code.src.Complex complex89 = complex2.add(complex84);
        java.lang.Class<?> wildcardClass90 = complex89.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 437.56491210010614d + "'", double44 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        code.src.Complex complex2 = new code.src.Complex((double) '4', (double) 100L);
        code.src.Complex complex5 = code.src.Complex.polar(240.82414161407507d, 10.0d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.Class<?> wildcardClass7 = complex6.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        code.src.Complex complex2 = code.src.Complex.polar((-62.9683262670583d), (-0.9994813445442423d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        double double26 = complex23.real;
        double double27 = complex23.real;
        double double28 = complex23.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 280.95719905143267d + "'", double26 == 280.95719905143267d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 280.95719905143267d + "'", double27 == 280.95719905143267d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 437.56491210010614d + "'", double28 == 437.56491210010614d);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double61 = complex60.abs();
        code.src.Complex complex62 = complex48.add(complex60);
        complex60.imaginary = (byte) 1;
        java.lang.Class<?> wildcardClass65 = complex60.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 0, (double) 100L);
        code.src.Complex complex5 = new code.src.Complex(87.48639198643185d, (-35.0d));
        code.src.Complex complex6 = complex2.add(complex5);
        java.lang.String str7 = complex2.toString();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(0.0,100.0)" + "'", str7, "(0.0,100.0)");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex5 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex36 = complex9.add(complex35);
        code.src.Complex complex37 = complex6.add(complex9);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        java.lang.String str71 = complex53.toString();
        double double72 = complex53.abs();
        double double73 = complex53.real;
        complex53.imaginary = 0;
        code.src.Complex complex76 = complex9.add(complex53);
        double double77 = complex53.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str71, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 525.4704025737593d + "'", double72 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 290.95719905143267d + "'", double73 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 290.95719905143267d + "'", double77 == 290.95719905143267d);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        code.src.Complex complex2 = code.src.Complex.polar((-224.71369026144328d), (-62.9683262670583d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        code.src.Complex complex18 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        complex22.real = (byte) 1;
        complex22.imaginary = (short) 100;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex42.multiply(complex46);
        code.src.Complex complex48 = complex22.multiply(complex42);
        code.src.Complex complex51 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str52 = complex51.toString();
        code.src.Complex complex55 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex56 = complex51.sub(complex55);
        complex51.imaginary = (-1.0f);
        code.src.Complex complex59 = complex22.sub(complex51);
        double double60 = complex22.abs();
        java.lang.String str61 = complex22.toString();
        code.src.Complex complex62 = complex6.add(complex22);
        complex62.imaginary = 8.414709848078965d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 290.95719905143267d + "'", double43 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(100.0,10.0)" + "'", str52, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.00499987500625d + "'", double60 == 100.00499987500625d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(1.0,100.0)" + "'", str61, "(1.0,100.0)");
        org.junit.Assert.assertNotNull(complex62);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        double double23 = complex21.imaginary;
        java.lang.String str24 = complex21.toString();
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double28 = complex27.abs();
        double double29 = complex27.real;
        code.src.Complex complex30 = complex21.sub(complex27);
        java.lang.String str31 = complex30.toString();
        code.src.Complex complex32 = new code.src.Complex();
        complex32.real = 1L;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex32.add(complex67);
        double double69 = complex68.real;
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex68.sub(complex75);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex75.add(complex80);
        code.src.Complex complex84 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex85 = complex80.add(complex84);
        code.src.Complex complex86 = complex30.sub(complex84);
        double double87 = complex86.real;
        code.src.Complex complex88 = complex15.sub(complex86);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 43.756491210010616d + "'", double23 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str24, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 52.0d + "'", double28 == 52.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 28.09571990514327d + "'", double29 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(0.0,0.0)" + "'", str31, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 582.9143981028653d + "'", double69 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-10.0d) + "'", double87 == (-10.0d));
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        code.src.Complex complex2 = code.src.Complex.polar(2809.571990514327d, 11756.491210010614d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex2.imaginary = (byte) 1;
        complex2.imaginary = 811.5511719071119d;
        double double7 = complex2.abs();
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        double double45 = complex44.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex44.sub(complex51);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex51.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex61 = complex56.add(complex60);
        complex56.real = 43.756491210010616d;
        complex56.imaginary = 100.0d;
        complex56.imaginary = (-317.11773840932915d);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex56.multiply(complex82);
        complex82.imaginary = (-1.0d);
        code.src.Complex complex87 = complex2.sub(complex82);
        double double88 = complex87.imaginary;
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 811.5517880109727d + "'", double7 == 811.5517880109727d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 582.9143981028653d + "'", double45 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 812.5511719071119d + "'", double88 == 812.5511719071119d);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        code.src.Complex complex2 = code.src.Complex.polar(432.1247009912124d, 100.98697676922636d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        code.src.Complex complex2 = new code.src.Complex((double) '4', 320.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.real = 589.1068753368511d;
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex60 = complex13.add(complex57);
        code.src.Complex complex61 = complex5.sub(complex57);
        code.src.Complex complex62 = complex2.multiply(complex5);
        complex2.imaginary = 572.0d;
        code.src.Complex complex67 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex67.imaginary = (short) 0;
        double double70 = complex67.abs();
        double double71 = complex67.real;
        code.src.Complex complex72 = complex2.multiply(complex67);
        code.src.Complex complex75 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex75.imaginary = (short) 0;
        complex75.imaginary = 100.0f;
        code.src.Complex complex82 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str83 = complex82.toString();
        code.src.Complex complex86 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex87 = complex82.sub(complex86);
        code.src.Complex complex88 = complex75.multiply(complex87);
        java.lang.String str89 = complex87.toString();
        double double90 = complex87.real;
        complex87.real = (byte) 100;
        complex87.imaginary = 97.0d;
        code.src.Complex complex95 = complex67.add(complex87);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(589.1068753368511,10.0)" + "'", str10, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + (-0.0d) + "'", double71 == (-0.0d));
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(100.0,10.0)" + "'", str83, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str89, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 589.1068753368511d + "'", double90 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 290.9589175121722d;
        code.src.Complex complex47 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex50 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex35.sub(complex47);
        code.src.Complex complex55 = code.src.Complex.polar(352.8614791462894d, (-495.7163425468028d));
        double double56 = complex55.real;
        double double57 = complex55.imaginary;
        code.src.Complex complex58 = complex52.add(complex55);
        complex55.real = 0.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 279.7722729260128d + "'", double56 == 279.7722729260128d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 215.031855238055d + "'", double57 == 215.031855238055d);
        org.junit.Assert.assertNotNull(complex58);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex15.real = 875.1298242002123d;
        complex15.imaginary = (-317.11773840932915d);
        complex15.real = 0.0d;
        code.src.Complex complex22 = complex12.sub(complex15);
        double double23 = complex15.imaginary;
        code.src.Complex complex26 = code.src.Complex.polar((double) (short) -1, 52.0d);
        code.src.Complex complex29 = new code.src.Complex((double) 100, (double) 10.0f);
        complex29.real = (byte) 1;
        complex29.real = 589.1068753368511d;
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex38 = new code.src.Complex();
        complex38.real = 1L;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = complex38.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex74.sub(complex81);
        code.src.Complex complex84 = complex37.add(complex81);
        code.src.Complex complex85 = complex29.sub(complex81);
        code.src.Complex complex86 = complex26.add(complex29);
        java.lang.String str87 = complex86.toString();
        code.src.Complex complex88 = complex15.add(complex86);
        complex15.imaginary = 213613.92387355183d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-317.11773840932915d) + "'", double23 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(589.1068753368511,10.0)" + "'", str34, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 582.9143981028653d + "'", double75 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(589.2698661176468,9.013372407959515)" + "'", str87, "(589.2698661176468,9.013372407959515)");
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex39 = new code.src.Complex();
        complex39.real = 1L;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex75 = complex39.add(complex74);
        double double76 = complex75.real;
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex75.sub(complex82);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex82.add(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex92 = complex87.add(complex91);
        code.src.Complex complex93 = complex36.multiply(complex92);
        code.src.Complex complex94 = complex2.multiply(complex36);
        double double95 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 582.9143981028653d + "'", double76 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        code.src.Complex complex2 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex6 = new code.src.Complex();
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex41 = complex6.multiply(complex39);
        double double42 = complex39.abs();
        code.src.Complex complex43 = complex5.sub(complex39);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        complex46.imaginary = 100.0f;
        code.src.Complex complex53 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex58 = complex53.sub(complex57);
        code.src.Complex complex59 = complex46.multiply(complex58);
        java.lang.String str60 = complex58.toString();
        double double61 = complex58.real;
        code.src.Complex complex62 = complex5.add(complex58);
        code.src.Complex complex63 = complex2.add(complex5);
        double double64 = complex2.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 581.9143981028653d + "'", double40 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1050.9408051475186d + "'", double42 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(100.0,10.0)" + "'", str54, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str60, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 589.1068753368511d + "'", double61 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 439.7472942772762d + "'", double64 == 439.7472942772762d);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        complex6.imaginary = 572.0d;
        complex6.real = (byte) 0;
        code.src.Complex complex14 = new code.src.Complex((double) (short) 100, 525.4704025737593d);
        code.src.Complex complex15 = complex6.sub(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex19 = new code.src.Complex();
        complex19.real = 1L;
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex54 = complex37.add(complex53);
        code.src.Complex complex55 = complex19.add(complex54);
        code.src.Complex complex56 = complex18.add(complex54);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        double double73 = complex72.real;
        code.src.Complex complex74 = complex54.add(complex72);
        code.src.Complex complex75 = complex6.sub(complex54);
        complex6.real = 788.0924986456808d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 290.95719905143267d + "'", double73 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        code.src.Complex complex2 = code.src.Complex.polar(35.0d, 8101.177047836208d);
        code.src.Complex complex5 = new code.src.Complex((double) (byte) 1, 58911.02077697936d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        code.src.Complex complex2 = new code.src.Complex(27.594203913205885d, (double) 100L);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double7 = complex6.abs();
        code.src.Complex complex10 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str11 = complex10.toString();
        code.src.Complex complex12 = complex6.multiply(complex10);
        double double13 = complex10.real;
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        java.lang.String str74 = complex69.toString();
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex69.add(complex81);
        code.src.Complex complex83 = complex66.add(complex82);
        code.src.Complex complex86 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex86.multiply(complex89);
        code.src.Complex complex91 = complex66.sub(complex86);
        java.lang.String str92 = complex66.toString();
        code.src.Complex complex93 = complex49.multiply(complex66);
        complex93.real = ' ';
        complex93.imaginary = 1077.733215908709d;
        code.src.Complex complex98 = complex10.multiply(complex93);
        code.src.Complex complex99 = complex2.sub(complex98);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(27.594203913205885,100.0)" + "'", str3, "(27.594203913205885,100.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(100.0,10.0)" + "'", str11, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(10.0,0.0)" + "'", str74, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str92, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex98);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        code.src.Complex complex2 = new code.src.Complex((-1.0d), 445.5830705563102d);
        code.src.Complex complex5 = new code.src.Complex((-0.0d), 0.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = new code.src.Complex();
        code.src.Complex complex40 = complex38.add(complex39);
        double double41 = complex38.imaginary;
        double double42 = complex38.real;
        code.src.Complex complex43 = complex5.multiply(complex38);
        code.src.Complex complex44 = complex2.add(complex38);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 875.1298242002123d + "'", double41 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 581.9143981028653d + "'", double42 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        code.src.Complex complex2 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex8 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double9 = complex8.imaginary;
        complex8.imaginary = (byte) 10;
        code.src.Complex complex12 = complex5.sub(complex8);
        double double13 = complex12.imaginary;
        code.src.Complex complex14 = complex2.multiply(complex12);
        complex2.imaginary = 102.1420579389313d;
        code.src.Complex complex19 = new code.src.Complex(100.0d, (double) (byte) 10);
        java.lang.String str20 = complex19.toString();
        code.src.Complex complex21 = complex2.multiply(complex19);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-317.11773840932915d) + "'", double9 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-10.0d) + "'", double13 == (-10.0d));
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(100.0,10.0)" + "'", str20, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex21);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex29.multiply(complex33);
        code.src.Complex complex35 = complex9.multiply(complex29);
        code.src.Complex complex36 = complex2.sub(complex29);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex69 = complex52.add(complex68);
        double double70 = complex52.real;
        double double71 = complex52.real;
        java.lang.String str72 = complex52.toString();
        complex52.real = 14827.945873355611d;
        code.src.Complex complex75 = complex2.sub(complex52);
        java.lang.String str76 = complex75.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 290.95719905143267d + "'", double70 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 290.95719905143267d + "'", double71 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(-14817.945873355611,-437.56491210010614)" + "'", str76, "(-14817.945873355611,-437.56491210010614)");
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        double double39 = complex36.abs();
        code.src.Complex complex42 = new code.src.Complex(0.0d, (double) 'a');
        code.src.Complex complex43 = complex36.multiply(complex42);
        complex42.imaginary = 865.1298242002123d;
        complex42.real = 8.414709848078965d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1051.4948429356753d + "'", double39 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex43);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex40.real = 10;
        code.src.Complex complex43 = complex32.multiply(complex40);
        code.src.Complex complex46 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex47 = complex40.add(complex46);
        complex40.imaginary = '#';
        code.src.Complex complex50 = complex2.add(complex40);
        code.src.Complex complex53 = code.src.Complex.polar((-180.95719905143267d), 213613.92387355183d);
        code.src.Complex complex54 = complex2.multiply(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 100, (double) 10.0f);
        complex57.imaginary = 100L;
        java.lang.String str60 = complex57.toString();
        code.src.Complex complex61 = complex2.multiply(complex57);
        complex57.real = (short) 1;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(100.0,100.0)" + "'", str60, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex61);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        code.src.Complex complex2 = code.src.Complex.polar(16815.052882360298d, (-10971.653261183294d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex53.imaginary = 1.0322031350652954d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        code.src.Complex complex2 = new code.src.Complex((-8062.246137461803d), (-7835.953174193246d));
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        java.lang.String str40 = complex22.toString();
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex47 = complex22.sub(complex43);
        code.src.Complex complex48 = complex2.add(complex47);
        complex48.imaginary = 0;
        java.lang.Class<?> wildcardClass51 = complex48.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str40, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex7.imaginary;
        double double45 = complex7.imaginary;
        java.lang.String str46 = complex7.toString();
        code.src.Complex complex47 = complex2.sub(complex7);
        code.src.Complex complex50 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        double double58 = complex56.imaginary;
        java.lang.String str59 = complex56.toString();
        code.src.Complex complex60 = complex50.sub(complex56);
        code.src.Complex complex63 = new code.src.Complex((double) 100, (double) 10.0f);
        complex63.real = (byte) 1;
        code.src.Complex complex66 = complex56.multiply(complex63);
        code.src.Complex complex67 = complex47.sub(complex66);
        java.lang.String str68 = complex47.toString();
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(1.0,0.0)" + "'", str46, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 43.756491210010616d + "'", double58 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str59, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(0.0,100.0)" + "'", str68, "(0.0,100.0)");
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex47.imaginary;
        code.src.Complex complex49 = complex40.sub(complex47);
        complex47.imaginary = 28.09571990514327d;
        code.src.Complex complex54 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex57 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex58 = complex54.add(complex57);
        complex58.imaginary = 'a';
        java.lang.String str61 = complex58.toString();
        code.src.Complex complex62 = complex47.sub(complex58);
        java.lang.String str63 = complex58.toString();
        complex58.real = (-5.063656411097588d);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        double double82 = complex81.abs();
        double double83 = complex81.real;
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double87 = complex86.abs();
        java.lang.String str88 = complex86.toString();
        code.src.Complex complex89 = complex81.add(complex86);
        code.src.Complex complex90 = complex58.add(complex81);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 437.56491210010614d + "'", double48 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(-198.14967628541848,97.0)" + "'", str61, "(-198.14967628541848,97.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(-198.14967628541848,97.0)" + "'", str63, "(-198.14967628541848,97.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 525.4704025737593d + "'", double82 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 290.95719905143267d + "'", double83 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 52.0d + "'", double87 == 52.0d);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str88, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        code.src.Complex complex2 = code.src.Complex.polar(437.56491210010614d, (-325.1488062743758d));
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex5.imaginary = (short) 0;
        complex5.real = 525.4704025737593d;
        double double10 = complex5.real;
        complex5.imaginary = 100;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = new code.src.Complex();
        code.src.Complex complex47 = complex45.add(complex46);
        complex45.real = 10;
        code.src.Complex complex52 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex55 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex45.multiply(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        java.lang.String str66 = complex60.toString();
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        java.lang.String str81 = complex76.toString();
        code.src.Complex complex84 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex84.multiply(complex87);
        code.src.Complex complex89 = complex76.add(complex88);
        java.lang.String str90 = complex76.toString();
        code.src.Complex complex91 = complex73.add(complex76);
        code.src.Complex complex92 = complex60.sub(complex76);
        double double93 = complex92.real;
        double double94 = complex92.imaginary;
        code.src.Complex complex95 = complex56.multiply(complex92);
        code.src.Complex complex96 = complex5.sub(complex56);
        code.src.Complex complex97 = complex2.sub(complex56);
        double double98 = complex97.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 525.4704025737593d + "'", double10 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(10.0,0.0)" + "'", str66, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(10.0,0.0)" + "'", str81, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(10.0,0.0)" + "'", str90, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-8633.741293904874d) + "'", double98 == (-8633.741293904874d));
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (double) 'a');
        double double3 = complex2.abs();
        double double4 = complex2.imaginary;
        code.src.Complex complex7 = new code.src.Complex(291.95719905143267d, (double) 0);
        code.src.Complex complex8 = complex2.sub(complex7);
        double double9 = complex8.abs();
        complex8.imaginary = 100.0d;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 97.0d + "'", double3 == 97.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 97.0d + "'", double4 == 97.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 307.6491606976328d + "'", double9 == 307.6491606976328d);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str32 = complex31.toString();
        code.src.Complex complex35 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex36 = complex31.sub(complex35);
        complex31.imaginary = (-1.0f);
        code.src.Complex complex39 = complex2.sub(complex31);
        double double40 = complex2.real;
        java.lang.String str41 = complex2.toString();
        double double42 = complex2.real;
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(100.0,10.0)" + "'", str32, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(1.0,100.0)" + "'", str41, "(1.0,100.0)");
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1.0d + "'", double42 == 1.0d);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        code.src.Complex complex2 = new code.src.Complex(1.0d, 28.09571990514327d);
        complex2.real = (-437.56491210010614d);
        complex2.real = 317.11773840932915d;
        complex2.imaginary = 35.0d;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        java.lang.String str42 = complex24.toString();
        code.src.Complex complex43 = complex2.add(complex24);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str42, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex6 = complex2.sub(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        double double17 = complex15.imaginary;
        java.lang.String str18 = complex15.toString();
        code.src.Complex complex19 = complex9.sub(complex15);
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        complex22.real = (byte) 1;
        code.src.Complex complex25 = complex15.multiply(complex22);
        java.lang.String str26 = complex22.toString();
        code.src.Complex complex27 = complex5.add(complex22);
        java.lang.Class<?> wildcardClass28 = complex5.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 43.756491210010616d + "'", double17 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str18, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(1.0,10.0)" + "'", str26, "(1.0,10.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        code.src.Complex complex2 = code.src.Complex.polar((-906.2883532154044d), 214489.24977154096d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        code.src.Complex complex2 = code.src.Complex.polar(58911.02077697936d, 1072.0212734397164d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex65.sub(complex85);
        code.src.Complex complex91 = complex49.multiply(complex65);
        double double92 = complex91.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 81519.1342829683d + "'", double92 == 81519.1342829683d);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) -1, 100.4987562112089d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex9 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex10 = complex6.add(complex9);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex9.sub(complex42);
        double double45 = complex42.imaginary;
        code.src.Complex complex46 = complex2.sub(complex42);
        complex2.real = 58911.02077697936d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 437.56491210010614d + "'", double45 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex46);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = code.src.Complex.polar(28.09571990514327d, 100.0d);
        code.src.Complex complex44 = complex40.add(complex43);
        double double45 = complex44.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1079.2052353356332d + "'", double45 == 1079.2052353356332d);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        code.src.Complex complex2 = code.src.Complex.polar(9.013372407959515d, 517.6532504767864d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.imaginary = (-317.11773840932915d);
        code.src.Complex complex9 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex9.real = 10;
        code.src.Complex complex12 = complex2.sub(complex9);
        complex12.real = 525.4704025737593d;
        complex12.imaginary = 8101.177047836208d;
        code.src.Complex complex19 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex22 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex22.imaginary = (short) 0;
        complex22.imaginary = 100.0f;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex59 = complex42.add(complex58);
        java.lang.String str60 = complex42.toString();
        code.src.Complex complex63 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex63.imaginary = (short) 0;
        java.lang.String str66 = complex63.toString();
        code.src.Complex complex67 = complex42.sub(complex63);
        code.src.Complex complex68 = complex22.add(complex67);
        complex68.imaginary = 0;
        complex68.real = 10.0f;
        complex68.imaginary = 481.32140331011675d;
        code.src.Complex complex75 = complex19.multiply(complex68);
        code.src.Complex complex76 = complex12.sub(complex19);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str60, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(-0.0,0.0)" + "'", str66, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        code.src.Complex complex2 = code.src.Complex.polar(467.07736184459986d, 691.255183740681d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        code.src.Complex complex2 = code.src.Complex.polar(462.29664434568275d, 537.5649121001061d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex5 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, (double) '#');
        double double11 = complex10.imaginary;
        double double12 = complex10.abs();
        code.src.Complex complex15 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex64 = complex47.add(complex63);
        java.lang.String str65 = complex47.toString();
        double double66 = complex47.abs();
        code.src.Complex complex67 = complex31.multiply(complex47);
        code.src.Complex complex68 = complex15.add(complex67);
        code.src.Complex complex69 = complex10.multiply(complex68);
        complex10.imaginary = (-285.04312220503374d);
        code.src.Complex complex72 = complex2.sub(complex10);
        java.lang.Class<?> wildcardClass73 = complex72.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 36.40054944640259d + "'", double12 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str65, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 525.4704025737593d + "'", double66 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.real;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        code.src.Complex complex72 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex72.imaginary = (short) 0;
        java.lang.String str75 = complex72.toString();
        code.src.Complex complex76 = complex51.sub(complex72);
        code.src.Complex complex77 = complex32.multiply(complex76);
        double double78 = complex77.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 581.9143981028653d + "'", double35 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(-0.0,0.0)" + "'", str75, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 509250.64491133287d + "'", double78 == 509250.64491133287d);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        code.src.Complex complex2 = new code.src.Complex(58.01650108462993d, (double) 10.0f);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        double double60 = complex59.real;
        code.src.Complex complex61 = complex41.add(complex59);
        complex41.real = 582.9143981028653d;
        double double64 = complex41.abs();
        code.src.Complex complex65 = complex2.multiply(complex41);
        double double66 = complex41.imaginary;
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 290.95719905143267d + "'", double60 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1051.4948429356753d + "'", double64 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 875.1298242002123d + "'", double66 == 875.1298242002123d);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex56 = complex51.add(complex55);
        complex51.real = 43.756491210010616d;
        complex51.imaginary = 100.0d;
        code.src.Complex complex63 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double64 = complex63.abs();
        code.src.Complex complex65 = complex51.add(complex63);
        complex51.real = 100.00499987500625d;
        code.src.Complex complex68 = complex2.multiply(complex51);
        java.lang.Class<?> wildcardClass69 = complex68.getClass();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        java.lang.String str34 = complex28.toString();
        code.src.Complex complex35 = complex25.multiply(complex28);
        complex35.real = 8101.177047836208d;
        java.lang.Class<?> wildcardClass38 = complex35.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        code.src.Complex complex2 = new code.src.Complex(141.42842712835352d, 625.6708893128759d);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        code.src.Complex complex2 = code.src.Complex.polar(10.0d, (double) '4');
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        code.src.Complex complex44 = complex6.add(complex42);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        double double52 = complex50.imaginary;
        java.lang.String str53 = complex50.toString();
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double57 = complex56.abs();
        double double58 = complex56.real;
        code.src.Complex complex59 = complex50.sub(complex56);
        code.src.Complex complex60 = complex42.sub(complex50);
        double double61 = complex42.real;
        code.src.Complex complex62 = complex2.multiply(complex42);
        complex42.imaginary = (-272.8614791462894d);
        java.lang.String str65 = complex42.toString();
        double double66 = complex42.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 9.866275920404853d + "'", double3 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 43.756491210010616d + "'", double52 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str53, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 28.09571990514327d + "'", double58 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 581.9143981028653d + "'", double61 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(581.9143981028653,-272.8614791462894)" + "'", str65, "(581.9143981028653,-272.8614791462894)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 642.7112520575013d + "'", double66 == 642.7112520575013d);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, (-272.8614791462894d));
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex25.multiply(complex29);
        code.src.Complex complex31 = complex5.multiply(complex25);
        code.src.Complex complex34 = new code.src.Complex((double) 100, (double) 10.0f);
        complex34.imaginary = 100L;
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex59.sub(complex79);
        code.src.Complex complex85 = complex42.add(complex84);
        code.src.Complex complex86 = complex34.multiply(complex84);
        code.src.Complex complex87 = complex5.sub(complex34);
        double double88 = complex5.real;
        code.src.Complex complex89 = complex2.sub(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 1.0d + "'", double88 == 1.0d);
        org.junit.Assert.assertNotNull(complex89);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        double double42 = complex40.imaginary;
        java.lang.String str43 = complex40.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double47 = complex46.abs();
        double double48 = complex46.real;
        code.src.Complex complex49 = complex40.sub(complex46);
        code.src.Complex complex50 = complex33.sub(complex40);
        double double51 = complex33.real;
        code.src.Complex complex54 = new code.src.Complex(100.0d, (-1.0d));
        double double55 = complex54.abs();
        code.src.Complex complex56 = complex33.sub(complex54);
        complex33.imaginary = 52.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 43.756491210010616d + "'", double42 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str43, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 28.09571990514327d + "'", double48 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.00499987500625d + "'", double55 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(complex56);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        complex2.real = 9.866275920404853d;
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        complex46.imaginary = 100.0f;
        code.src.Complex complex53 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex58 = complex53.sub(complex57);
        code.src.Complex complex59 = complex46.multiply(complex58);
        java.lang.String str60 = complex58.toString();
        complex58.real = 582.9143981028653d;
        code.src.Complex complex65 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex66 = complex58.sub(complex65);
        code.src.Complex complex67 = complex2.multiply(complex66);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(100.0,10.0)" + "'", str54, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str60, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        java.lang.String str34 = complex28.toString();
        code.src.Complex complex35 = complex25.multiply(complex28);
        double double36 = complex25.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 10.0d + "'", double36 == 10.0d);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        double double16 = complex15.imaginary;
        double double17 = complex15.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 393.80842089009553d + "'", double16 == 393.80842089009553d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 468.0d + "'", double17 == 468.0d);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        code.src.Complex complex2 = new code.src.Complex(27.594203913205885d, 430.3716436914759d);
        complex2.imaginary = 213613.92147670433d;
        code.src.Complex complex7 = code.src.Complex.polar(214489.24976920983d, (-36073.24762350389d));
        code.src.Complex complex8 = complex2.sub(complex7);
        double double9 = complex2.abs();
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 213613.92325898536d + "'", double9 == 213613.92325898536d);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.imaginary = 100L;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex30.sub(complex50);
        code.src.Complex complex56 = complex13.add(complex55);
        code.src.Complex complex57 = complex5.multiply(complex55);
        double double58 = complex5.real;
        code.src.Complex complex61 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double62 = complex61.imaginary;
        code.src.Complex complex63 = complex5.add(complex61);
        code.src.Complex complex64 = complex2.add(complex5);
        double double65 = complex64.abs();
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 100.0d + "'", double58 == 100.0d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-317.11773840932915d) + "'", double62 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 243.39291758796492d + "'", double65 == 243.39291758796492d);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        double double53 = complex52.abs();
        code.src.Complex complex54 = complex2.multiply(complex52);
        complex52.imaginary = 101.9803902718557d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 104.0d + "'", double53 == 104.0d);
        org.junit.Assert.assertNotNull(complex54);
    }
}

