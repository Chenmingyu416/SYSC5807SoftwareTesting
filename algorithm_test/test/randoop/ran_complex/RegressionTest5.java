import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, (-389.10687533685115d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        complex38.imaginary = 52.0d;
        complex38.imaginary = 28.09571990514327d;
        complex38.real = 572.0d;
        code.src.Complex complex50 = complex2.add(complex38);
        complex2.real = 215.031855238055d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex50);
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        code.src.Complex complex2 = new code.src.Complex(1336.6737350030942d, 288.43610241435874d);
        double double3 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1367.439965418266d + "'", double3 == 1367.439965418266d);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex32.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex37 = complex32.sub(complex36);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double41 = complex40.abs();
        code.src.Complex complex42 = complex36.add(complex40);
        complex40.real = 1050.9408051475186d;
        double double45 = complex40.real;
        complex40.real = 324.9608082617091d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 581.9143981028653d + "'", double33 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 52.0d + "'", double41 == 52.0d);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1050.9408051475186d + "'", double45 == 1050.9408051475186d);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        code.src.Complex complex2 = code.src.Complex.polar(296.9226963579992d, 266.8453756393511d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        code.src.Complex complex2 = code.src.Complex.polar(21990.294301380844d, 264.1513050036045d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        code.src.Complex complex2 = new code.src.Complex((-100.59299479274858d), 0.0d);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        code.src.Complex complex2 = code.src.Complex.polar(404.0601914051499d, 8.414709848078965d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        code.src.Complex complex2 = new code.src.Complex(58.01650108462993d, (double) 10.0f);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        double double60 = complex59.real;
        code.src.Complex complex61 = complex41.add(complex59);
        complex41.real = 582.9143981028653d;
        double double64 = complex41.abs();
        code.src.Complex complex65 = complex2.multiply(complex41);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        double double73 = complex71.imaginary;
        double double74 = complex71.imaginary;
        complex71.real = 708268.0426747819d;
        code.src.Complex complex77 = complex2.multiply(complex71);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 290.95719905143267d + "'", double60 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 1051.4948429356753d + "'", double64 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 43.756491210010616d + "'", double73 == 43.756491210010616d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 43.756491210010616d + "'", double74 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex77);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex29.multiply(complex33);
        code.src.Complex complex35 = complex9.multiply(complex29);
        code.src.Complex complex36 = complex2.sub(complex29);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex69 = complex52.add(complex68);
        double double70 = complex52.real;
        double double71 = complex52.real;
        java.lang.String str72 = complex52.toString();
        complex52.real = 14827.945873355611d;
        code.src.Complex complex75 = complex2.sub(complex52);
        java.lang.Class<?> wildcardClass76 = complex75.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 290.95719905143267d + "'", double70 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 290.95719905143267d + "'", double71 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double44 = complex43.abs();
        code.src.Complex complex45 = complex2.add(complex43);
        complex2.imaginary = (-217.11773840932915d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertNotNull(complex45);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        code.src.Complex complex2 = new code.src.Complex(213613.92325898536d, 619.1683912176034d);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        java.lang.String str49 = complex48.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex66 = complex48.sub(complex65);
        code.src.Complex complex69 = code.src.Complex.polar((-489.10687533685115d), 520.0d);
        code.src.Complex complex72 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex73 = complex69.add(complex72);
        code.src.Complex complex76 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex79 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex73.sub(complex76);
        code.src.Complex complex82 = complex65.multiply(complex73);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(309.0529189565759,481.32140331011675)" + "'", str49, "(309.0529189565759,481.32140331011675)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, 52.0d);
        code.src.Complex complex5 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex6 = complex2.sub(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        code.src.Complex complex2 = code.src.Complex.polar((-62.9683262670583d), 1136.0754242392372d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 58.24763401216367d + "'", double3 == 58.24763401216367d);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.real;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        code.src.Complex complex72 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex72.imaginary = (short) 0;
        java.lang.String str75 = complex72.toString();
        code.src.Complex complex76 = complex51.sub(complex72);
        code.src.Complex complex77 = complex32.multiply(complex76);
        code.src.Complex complex80 = code.src.Complex.polar(393.80842089009553d, 214489.24976920983d);
        code.src.Complex complex81 = complex76.sub(complex80);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 581.9143981028653d + "'", double35 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(-0.0,0.0)" + "'", str75, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex15.real = 875.1298242002123d;
        complex15.imaginary = (-317.11773840932915d);
        complex15.real = 0.0d;
        code.src.Complex complex22 = complex12.sub(complex15);
        code.src.Complex complex23 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex24 = complex15.add(complex23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        code.src.Complex complex2 = new code.src.Complex((double) '4', (double) (short) 0);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(52.0,0.0)" + "'", str3, "(52.0,0.0)");
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        complex2.real = 290.95719905143267d;
        complex2.imaginary = (-489.10687533685115d);
        double double7 = complex2.real;
        java.lang.Class<?> wildcardClass8 = complex2.getClass();
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 290.95719905143267d + "'", double7 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.imaginary = 'a';
        code.src.Complex complex11 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str12 = complex11.toString();
        code.src.Complex complex15 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double16 = complex15.abs();
        code.src.Complex complex17 = complex11.sub(complex15);
        code.src.Complex complex18 = complex6.add(complex11);
        double double19 = complex6.abs();
        code.src.Complex complex22 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex23 = complex6.sub(complex22);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(1.0,0.0)" + "'", str12, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 220.6179825218609d + "'", double19 == 220.6179825218609d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        code.src.Complex complex2 = code.src.Complex.polar((-34.19160722294309d), (-317.11773840932915d));
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(33.61993740168686,6.2262198479230655)" + "'", str3, "(33.61993740168686,6.2262198479230655)");
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        code.src.Complex complex17 = code.src.Complex.polar(141.4213562373095d, (-272.8614791462894d));
        code.src.Complex complex18 = complex11.multiply(complex17);
        java.lang.String str19 = complex11.toString();
        code.src.Complex complex22 = new code.src.Complex(525.4704025737593d, (double) 0);
        code.src.Complex complex23 = complex11.multiply(complex22);
        double double24 = complex11.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str19, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 43.756491210010616d + "'", double24 == 43.756491210010616d);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        code.src.Complex complex2 = new code.src.Complex(1114.6258773791556d, 319.0529189565759d);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        code.src.Complex complex2 = new code.src.Complex((double) '4', (double) 100L);
        code.src.Complex complex5 = code.src.Complex.polar(240.82414161407507d, 10.0d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex44 = complex39.sub(complex43);
        double double45 = complex43.real;
        code.src.Complex complex46 = complex6.multiply(complex43);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 581.9143981028653d + "'", double40 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 14.841058233505056d + "'", double45 == 14.841058233505056d);
        org.junit.Assert.assertNotNull(complex46);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        code.src.Complex complex2 = code.src.Complex.polar(1050.9408051475186d, (double) 0L);
        complex2.real = 663.590879631022d;
        java.lang.String str5 = complex2.toString();
        code.src.Complex complex8 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex9 = complex2.add(complex8);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(663.590879631022,0.0)" + "'", str5, "(663.590879631022,0.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        code.src.Complex complex2 = new code.src.Complex(141.4213562373095d, 36.40054944640259d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex52 = complex5.add(complex49);
        code.src.Complex complex55 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex61.imaginary;
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex55.sub(complex61);
        code.src.Complex complex66 = complex5.multiply(complex65);
        code.src.Complex complex67 = complex2.multiply(complex65);
        double double68 = complex2.real;
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 43.756491210010616d + "'", double63 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str64, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 141.4213562373095d + "'", double68 == 141.4213562373095d);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        code.src.Complex complex2 = new code.src.Complex((-1.0d), (-906.2883532154044d));
        java.lang.String str3 = complex2.toString();
        complex2.real = 2022.0451520447884d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-1.0,-906.2883532154044)" + "'", str3, "(-1.0,-906.2883532154044)");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.abs();
        code.src.Complex complex19 = code.src.Complex.polar(141.4213562373095d, (double) 10.0f);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        complex26.imaginary = 572.0d;
        complex26.real = (byte) 0;
        code.src.Complex complex32 = complex19.sub(complex26);
        code.src.Complex complex33 = complex15.add(complex26);
        double double34 = complex15.abs();
        code.src.Complex complex37 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        complex37.imaginary = (short) 100;
        code.src.Complex complex40 = complex15.add(complex37);
        double double41 = complex40.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 525.4704025737593d + "'", double16 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 525.4704025737593d + "'", double34 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 537.5649121001061d + "'", double41 == 537.5649121001061d);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.real = 589.1068753368511d;
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex57 = complex10.add(complex54);
        code.src.Complex complex58 = complex2.sub(complex54);
        double double59 = complex2.abs();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(589.1068753368511,10.0)" + "'", str7, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 589.1917434665461d + "'", double59 == 589.1917434665461d);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        code.src.Complex complex2 = new code.src.Complex((-165.30108883409898d), 642.7112520575013d);
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        code.src.Complex complex2 = new code.src.Complex(1067.326366915413d, (-44.52533050340393d));
        double double3 = complex2.real;
        code.src.Complex complex4 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex5 = complex2.multiply(complex4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1067.326366915413d + "'", double3 == 1067.326366915413d);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        double double65 = complex54.imaginary;
        code.src.Complex complex66 = complex36.multiply(complex54);
        java.lang.String str67 = complex36.toString();
        code.src.Complex complex70 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        code.src.Complex complex71 = complex36.multiply(complex70);
        double double72 = complex70.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 437.56491210010614d + "'", double65 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str67, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-83.90715290764524d) + "'", double72 == (-83.90715290764524d));
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) (byte) 100);
        complex2.imaginary = 528.7686600293723d;
        code.src.Complex complex7 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        code.src.Complex complex45 = complex7.add(complex43);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        code.src.Complex complex79 = new code.src.Complex();
        code.src.Complex complex80 = complex78.add(complex79);
        code.src.Complex complex81 = complex45.add(complex79);
        code.src.Complex complex84 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str85 = complex84.toString();
        java.lang.String str86 = complex84.toString();
        code.src.Complex complex87 = complex45.sub(complex84);
        java.lang.String str88 = complex84.toString();
        code.src.Complex complex89 = complex2.multiply(complex84);
        code.src.Complex complex92 = new code.src.Complex(481.32140331011675d, (double) ' ');
        code.src.Complex complex93 = complex2.multiply(complex92);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(100.0,10.0)" + "'", str85, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(100.0,10.0)" + "'", str88, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex93);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        java.lang.String str40 = complex22.toString();
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex47 = complex22.sub(complex43);
        code.src.Complex complex48 = complex2.add(complex47);
        complex48.imaginary = 0;
        complex48.real = 10.0f;
        complex48.imaginary = 481.32140331011675d;
        code.src.Complex complex57 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex58 = complex48.add(complex57);
        complex58.imaginary = 352949.7590519551d;
        double double61 = complex58.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str40, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 352949.8873651941d + "'", double61 == 352949.8873651941d);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        code.src.Complex complex2 = code.src.Complex.polar(97.0d, (double) (short) 1);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        complex23.imaginary = 0.0d;
        code.src.Complex complex30 = new code.src.Complex((double) 100, (double) 10.0f);
        complex30.imaginary = '4';
        code.src.Complex complex35 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str36 = complex35.toString();
        double double37 = complex35.abs();
        code.src.Complex complex38 = complex30.multiply(complex35);
        code.src.Complex complex39 = complex23.add(complex35);
        double double40 = complex39.real;
        complex39.real = 875.1303955438267d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(1.0,290.95719905143267)" + "'", str36, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.9589175121722d + "'", double37 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 281.95719905143267d + "'", double40 == 281.95719905143267d);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        code.src.Complex complex44 = new code.src.Complex();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex79 = complex44.multiply(complex77);
        code.src.Complex complex80 = complex18.multiply(complex77);
        code.src.Complex complex81 = complex2.sub(complex80);
        java.lang.String str82 = complex2.toString();
        code.src.Complex complex85 = code.src.Complex.polar((-0.5440211108893698d), 9.866275920404853d);
        code.src.Complex complex86 = complex2.add(complex85);
        double double87 = complex2.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 581.9143981028653d + "'", double78 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(100.0,10.0)" + "'", str82, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double7 = complex6.abs();
        code.src.Complex complex8 = complex2.sub(complex6);
        java.lang.Class<?> wildcardClass9 = complex8.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,0.0)" + "'", str3, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        code.src.Complex complex16 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex17 = new code.src.Complex();
        complex17.real = 1L;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex52 = complex35.add(complex51);
        code.src.Complex complex53 = complex17.add(complex52);
        double double54 = complex53.real;
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex53.sub(complex60);
        double double63 = complex53.imaginary;
        code.src.Complex complex64 = complex16.sub(complex53);
        code.src.Complex complex65 = complex10.add(complex16);
        code.src.Complex complex68 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex69 = complex16.add(complex68);
        complex69.real = (short) 1;
        complex69.imaginary = 492.8116754934422d;
        complex69.real = 317.11773840932915d;
        double double76 = complex69.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 582.9143981028653d + "'", double54 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 875.1298242002123d + "'", double63 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 586.0264563281264d + "'", double76 == 586.0264563281264d);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        double double55 = complex54.abs();
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 73539.10524340095d + "'", double55 == 73539.10524340095d);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        code.src.Complex complex2 = new code.src.Complex(582.9143981028653d, 663.590879631022d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        code.src.Complex complex2 = new code.src.Complex(426446.1210112362d, 0.0d);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        code.src.Complex complex2 = code.src.Complex.polar(48.09571990514327d, (-581.9143981028653d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        code.src.Complex complex2 = new code.src.Complex(73539.10524340095d, 437.56605478621583d);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        complex28.imaginary = 100L;
        code.src.Complex complex34 = code.src.Complex.polar((double) 'a', (double) (short) 1);
        code.src.Complex complex37 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex38 = new code.src.Complex();
        complex38.real = 1L;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = complex38.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex74.sub(complex81);
        double double84 = complex74.imaginary;
        code.src.Complex complex85 = complex37.sub(complex74);
        code.src.Complex complex88 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex89 = complex74.sub(complex88);
        code.src.Complex complex90 = complex34.add(complex88);
        double double91 = complex34.abs();
        code.src.Complex complex92 = complex28.sub(complex34);
        java.lang.String str93 = complex92.toString();
        double double94 = complex92.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 582.9143981028653d + "'", double75 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 875.1298242002123d + "'", double84 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 97.0d + "'", double91 == 97.0d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "(-42.409323669209556,18.377314473634044)" + "'", str93, "(-42.409323669209556,18.377314473634044)");
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 46.219870416765744d + "'", double94 == 46.219870416765744d);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        code.src.Complex complex24 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex24.imaginary = (byte) 1;
        code.src.Complex complex27 = complex2.multiply(complex24);
        complex2.real = 437.56605478621583d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        java.lang.String str4 = complex2.toString();
        java.lang.String str5 = complex2.toString();
        code.src.Complex complex8 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        double double16 = complex14.imaginary;
        java.lang.String str17 = complex14.toString();
        code.src.Complex complex18 = complex8.sub(complex14);
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex21.real = 875.1298242002123d;
        complex21.imaginary = (-317.11773840932915d);
        complex21.real = 0.0d;
        code.src.Complex complex28 = complex18.sub(complex21);
        code.src.Complex complex29 = complex2.sub(complex28);
        code.src.Complex complex32 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex33 = complex28.multiply(complex32);
        code.src.Complex complex36 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        complex36.real = 0.0d;
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        double double72 = complex54.real;
        code.src.Complex complex75 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex76 = complex54.sub(complex75);
        double double77 = complex75.abs();
        code.src.Complex complex78 = complex36.sub(complex75);
        java.lang.String str79 = complex75.toString();
        code.src.Complex complex80 = complex33.sub(complex75);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(100.0,10.0)" + "'", str4, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(100.0,10.0)" + "'", str5, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 43.756491210010616d + "'", double16 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str17, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 290.95719905143267d + "'", double72 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(-0.0,0.0)" + "'", str79, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 51.46657711748192d);
        complex2.real = (-836.4961004935847d);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        code.src.Complex complex8 = complex2.multiply(complex7);
        double double9 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 43.756491210010616d + "'", double9 == 43.756491210010616d);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex5 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, (double) '#');
        double double11 = complex10.imaginary;
        double double12 = complex10.abs();
        code.src.Complex complex15 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex64 = complex47.add(complex63);
        java.lang.String str65 = complex47.toString();
        double double66 = complex47.abs();
        code.src.Complex complex67 = complex31.multiply(complex47);
        code.src.Complex complex68 = complex15.add(complex67);
        code.src.Complex complex69 = complex10.multiply(complex68);
        complex10.imaginary = (-285.04312220503374d);
        code.src.Complex complex72 = complex2.sub(complex10);
        java.lang.Class<?> wildcardClass73 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 36.40054944640259d + "'", double12 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str65, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 525.4704025737593d + "'", double66 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        code.src.Complex complex2 = new code.src.Complex(875.8294407044641d, 8101.177047836208d);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        code.src.Complex complex2 = new code.src.Complex(309.0529189565759d, 161.68806101217828d);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 663.590879631022d);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex44);
        complex2.real = 612077.1638882305d;
        complex2.imaginary = 319.0529189565759d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex41 = new code.src.Complex();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex76 = complex41.multiply(complex74);
        code.src.Complex complex77 = complex15.multiply(complex74);
        code.src.Complex complex80 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double81 = complex80.imaginary;
        code.src.Complex complex82 = complex74.add(complex80);
        double double83 = complex74.real;
        code.src.Complex complex86 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex89 = new code.src.Complex((double) 10L, (double) '#');
        double double90 = complex89.imaginary;
        code.src.Complex complex91 = complex86.multiply(complex89);
        complex91.imaginary = (byte) 0;
        code.src.Complex complex94 = complex74.add(complex91);
        double double95 = complex74.real;
        complex74.imaginary = 831.3733329902017d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 581.9143981028653d + "'", double75 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 437.56491210010614d + "'", double81 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 581.9143981028653d + "'", double83 == 581.9143981028653d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 35.0d + "'", double90 == 35.0d);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 581.9143981028653d + "'", double95 == 581.9143981028653d);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        double double64 = complex61.real;
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double68 = complex67.abs();
        java.lang.String str69 = complex67.toString();
        code.src.Complex complex70 = complex61.sub(complex67);
        code.src.Complex complex73 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex74 = complex70.add(complex73);
        code.src.Complex complex75 = complex54.multiply(complex73);
        complex54.imaginary = 0.0d;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 280.95719905143267d + "'", double64 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 52.0d + "'", double68 == 52.0d);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str69, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        double double41 = complex40.imaginary;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        code.src.Complex complex78 = complex44.add(complex60);
        code.src.Complex complex81 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex82 = complex60.sub(complex81);
        code.src.Complex complex83 = complex40.add(complex81);
        double double84 = complex83.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 704.4102877394573d + "'", double84 == 704.4102877394573d);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (short) 10);
        double double3 = complex2.imaginary;
        complex2.imaginary = 354080.08284857025d;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double38 = complex37.abs();
        double double39 = complex37.real;
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        java.lang.String str63 = complex58.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex58.add(complex70);
        code.src.Complex complex72 = complex55.add(complex71);
        java.lang.String str73 = complex55.toString();
        double double74 = complex55.abs();
        double double75 = complex55.real;
        code.src.Complex complex76 = complex37.sub(complex55);
        code.src.Complex complex77 = complex33.add(complex55);
        complex33.imaginary = 52.0d;
        double double80 = complex33.imaginary;
        code.src.Complex complex83 = new code.src.Complex(214489.24976920983d, (double) (-1));
        java.lang.String str84 = complex83.toString();
        double double85 = complex83.abs();
        code.src.Complex complex86 = complex33.multiply(complex83);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 52.0d + "'", double38 == 52.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 28.09571990514327d + "'", double39 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(10.0,0.0)" + "'", str63, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str73, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 525.4704025737593d + "'", double74 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 290.95719905143267d + "'", double75 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(214489.24976920983,-1.0)" + "'", str84, "(214489.24976920983,-1.0)");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 214489.24977154096d + "'", double85 == 214489.24977154096d);
        org.junit.Assert.assertNotNull(complex86);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 290.9589175121722d;
        double double45 = complex35.abs();
        complex35.imaginary = 1072.0212734397164d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 291.13071236105446d + "'", double45 == 291.13071236105446d);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        code.src.Complex complex2 = code.src.Complex.polar(354618.7620473047d, 84.21177072733951d);
        complex2.real = 589.2698661176468d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        code.src.Complex complex2 = new code.src.Complex(322.91145534356957d, 1.2901027673467858d);
        double double3 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 322.91145534356957d + "'", double3 == 322.91145534356957d);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        code.src.Complex complex2 = code.src.Complex.polar(352949.7590519551d, 1588.9039857732523d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) -1, 100.4987562112089d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex9 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex10 = complex6.add(complex9);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex9.sub(complex42);
        double double45 = complex42.imaginary;
        code.src.Complex complex46 = complex2.sub(complex42);
        double double47 = complex42.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 437.56491210010614d + "'", double45 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 525.4704025737593d + "'", double47 == 525.4704025737593d);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        code.src.Complex complex2 = code.src.Complex.polar(589.1068753368511d, 214489.24976920983d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex18.real;
        double double37 = complex18.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = complex18.sub(complex53);
        complex53.real = 0.0d;
        double double74 = complex53.real;
        code.src.Complex complex75 = complex2.add(complex53);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        code.src.Complex complex2 = new code.src.Complex(525.4704025737593d, 0.0d);
        double double3 = complex2.imaginary;
        double double4 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        code.src.Complex complex2 = new code.src.Complex((-22432.531388878706d), 374.40386057429686d);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        code.src.Complex complex2 = new code.src.Complex((double) 100L, 0.0d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex18.real;
        double double37 = complex18.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = complex18.sub(complex53);
        double double72 = complex53.imaginary;
        code.src.Complex complex73 = complex2.add(complex53);
        double double74 = complex73.imaginary;
        complex73.imaginary = (-293.29939121762186d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 437.56491210010614d + "'", double72 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 437.56491210010614d + "'", double74 == 437.56491210010614d);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        code.src.Complex complex2 = code.src.Complex.polar(361.4548352976297d, 1.4142135623730951d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        code.src.Complex complex2 = new code.src.Complex((double) 1.0f, (double) 0);
        complex2.real = (short) -1;
        code.src.Complex complex7 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex10 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex11 = complex7.add(complex10);
        double double12 = complex11.real;
        code.src.Complex complex13 = complex2.add(complex11);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 98.37009219204295d + "'", double12 == 98.37009219204295d);
        org.junit.Assert.assertNotNull(complex13);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        code.src.Complex complex2 = new code.src.Complex(279.95719905143267d, (-118.66263362210499d));
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 5.403023058681398d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        code.src.Complex complex2 = new code.src.Complex(525.4704025737593d, (double) 0);
        double double3 = complex2.real;
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        code.src.Complex complex37 = new code.src.Complex();
        code.src.Complex complex38 = complex36.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        java.lang.String str62 = complex57.toString();
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex57.add(complex69);
        code.src.Complex complex71 = complex54.add(complex70);
        code.src.Complex complex72 = new code.src.Complex();
        code.src.Complex complex73 = complex71.add(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        double double81 = complex79.imaginary;
        java.lang.String str82 = complex79.toString();
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double86 = complex85.abs();
        double double87 = complex85.real;
        code.src.Complex complex88 = complex79.sub(complex85);
        code.src.Complex complex89 = complex72.sub(complex79);
        code.src.Complex complex90 = complex37.add(complex72);
        double double91 = complex37.imaginary;
        code.src.Complex complex94 = code.src.Complex.polar((-288.4361024143587d), (-5.063656411097588d));
        code.src.Complex complex95 = complex37.add(complex94);
        code.src.Complex complex96 = complex2.sub(complex95);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 525.4704025737593d + "'", double3 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(10.0,0.0)" + "'", str62, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 43.756491210010616d + "'", double81 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str82, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 52.0d + "'", double86 == 52.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 28.09571990514327d + "'", double87 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        double double3 = complex2.imaginary;
        complex2.real = 27.276795759674354d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-54.40211108893698d) + "'", double3 == (-54.40211108893698d));
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        code.src.Complex complex2 = code.src.Complex.polar(572.6895926040461d, (-532.5987024931094d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        java.lang.String str40 = complex22.toString();
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex47 = complex22.sub(complex43);
        code.src.Complex complex48 = complex2.add(complex47);
        complex48.imaginary = 0;
        complex48.real = 10.0f;
        complex48.imaginary = 481.32140331011675d;
        code.src.Complex complex57 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex58 = complex48.add(complex57);
        java.lang.String str59 = complex58.toString();
        code.src.Complex complex62 = new code.src.Complex(213613.9236394847d, (double) 10L);
        code.src.Complex complex63 = complex58.sub(complex62);
        complex62.imaginary = 288.4361024143587d;
        double double66 = complex62.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str40, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(300.9589175121722,491.32140331011675)" + "'", str59, "(300.9589175121722,491.32140331011675)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 288.4361024143587d + "'", double66 == 288.4361024143587d);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        code.src.Complex complex2 = code.src.Complex.polar(322.91145534356957d, 1188.0499518279444d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.imaginary = (-317.11773840932915d);
        code.src.Complex complex9 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex9.real = 10;
        code.src.Complex complex12 = complex2.sub(complex9);
        complex12.real = 525.4704025737593d;
        complex12.imaginary = 0.2324571024365446d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex12);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        code.src.Complex complex2 = new code.src.Complex((double) (-1), 581.9143981028653d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex6 = complex2.sub(complex5);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        code.src.Complex complex2 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.real = 0.0d;
        code.src.Complex complex11 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex11.imaginary = (short) 0;
        complex11.imaginary = 100.0f;
        code.src.Complex complex18 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str19 = complex18.toString();
        code.src.Complex complex22 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex23 = complex18.sub(complex22);
        code.src.Complex complex24 = complex11.multiply(complex23);
        java.lang.String str25 = complex23.toString();
        double double26 = complex23.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex59 = complex42.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex42.sub(complex62);
        double double68 = complex42.abs();
        code.src.Complex complex69 = complex23.multiply(complex42);
        code.src.Complex complex70 = complex6.add(complex42);
        code.src.Complex complex73 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        double double74 = complex73.real;
        code.src.Complex complex75 = complex42.add(complex73);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(100.0,10.0)" + "'", str19, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str25, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 589.1068753368511d + "'", double26 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 525.4704025737593d + "'", double68 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-285.04312220503374d) + "'", double74 == (-285.04312220503374d));
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double19 = complex18.abs();
        java.lang.String str20 = complex18.toString();
        complex18.imaginary = 'a';
        code.src.Complex complex23 = complex14.add(complex18);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex56 = complex39.add(complex55);
        double double57 = complex39.real;
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex61 = complex39.sub(complex60);
        code.src.Complex complex62 = complex18.add(complex39);
        double double63 = complex18.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str20, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 290.95719905143267d + "'", double57 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 97.0d + "'", double63 == 97.0d);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        code.src.Complex complex2 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex9 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex10 = complex6.add(complex9);
        complex10.real = 1018.3729221500101d;
        code.src.Complex complex13 = complex2.multiply(complex10);
        complex13.real = (-54.40211108893698d);
        double double16 = complex13.imaginary;
        code.src.Complex complex19 = code.src.Complex.polar(71852.21111515388d, 309.0545367982484d);
        complex19.imaginary = 309.0529189565759d;
        code.src.Complex complex22 = complex13.multiply(complex19);
        double double23 = complex22.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1018.3729221500101d + "'", double3 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-2.1786157730571607E8d) + "'", double16 == (-2.1786157730571607E8d));
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 6.732926181735216E10d + "'", double23 == 6.732926181735216E10d);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        code.src.Complex complex2 = new code.src.Complex(27.276795759674354d, 46.219870416765744d);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        java.lang.String str50 = complex46.toString();
        java.lang.String str51 = complex46.toString();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str50, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str51, "(28.09571990514327,43.756491210010616)");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex36.imaginary = (short) 0;
        complex36.imaginary = 100.0f;
        code.src.Complex complex41 = complex15.sub(complex36);
        complex41.real = (short) -1;
        double double44 = complex41.real;
        complex41.imaginary = 5336.90751278706d;
        code.src.Complex complex49 = new code.src.Complex((-906.2883532154044d), (double) 10);
        complex49.real = 101.9803902718557d;
        double double52 = complex49.imaginary;
        code.src.Complex complex53 = complex41.multiply(complex49);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + (-1.0d) + "'", double44 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 10.0d + "'", double52 == 10.0d);
        org.junit.Assert.assertNotNull(complex53);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        code.src.Complex complex2 = new code.src.Complex((-42268.69049101621d), (-437.56491210010614d));
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        code.src.Complex complex2 = code.src.Complex.polar((-489.10687533685115d), 741.8060216641154d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex10 = new code.src.Complex();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        double double44 = complex43.real;
        code.src.Complex complex45 = complex10.multiply(complex43);
        double double46 = complex43.abs();
        code.src.Complex complex47 = complex9.sub(complex43);
        code.src.Complex complex50 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex50.imaginary = (short) 0;
        complex50.imaginary = 100.0f;
        code.src.Complex complex57 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str58 = complex57.toString();
        code.src.Complex complex61 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex62 = complex57.sub(complex61);
        code.src.Complex complex63 = complex50.multiply(complex62);
        java.lang.String str64 = complex62.toString();
        double double65 = complex62.real;
        code.src.Complex complex66 = complex9.add(complex62);
        complex62.real = 1.0d;
        code.src.Complex complex69 = complex5.multiply(complex62);
        double double70 = complex69.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 581.9143981028653d + "'", double44 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 1050.9408051475186d + "'", double46 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(100.0,10.0)" + "'", str58, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str64, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 589.1068753368511d + "'", double65 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 6.987729413744412E7d + "'", double70 == 6.987729413744412E7d);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        complex2.imaginary = 1018.3729221500101d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        java.lang.String str9 = complex6.toString();
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        java.lang.String str43 = complex25.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex50 = complex25.sub(complex46);
        code.src.Complex complex51 = complex6.sub(complex46);
        code.src.Complex complex54 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        complex54.real = 1;
        code.src.Complex complex57 = complex51.multiply(complex54);
        java.lang.String str58 = complex57.toString();
        code.src.Complex complex61 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex64 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        code.src.Complex complex65 = complex61.sub(complex64);
        complex61.real = (-437.56491210010614d);
        double double68 = complex61.real;
        code.src.Complex complex71 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex72 = complex61.sub(complex71);
        code.src.Complex complex73 = complex57.sub(complex72);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str9, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str43, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(-0.0,0.0)" + "'", str49, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(-11654.411539903023,8101.177047836208)" + "'", str58, "(-11654.411539903023,8101.177047836208)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-437.56491210010614d) + "'", double68 == (-437.56491210010614d));
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        code.src.Complex complex2 = code.src.Complex.polar(1051.4948429356753d, 581.9143981028653d);
        complex2.imaginary = (-1);
        code.src.Complex complex7 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex10 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex11 = complex7.multiply(complex10);
        complex11.real = 324.9608082617091d;
        code.src.Complex complex14 = complex2.add(complex11);
        double double15 = complex11.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str3 = complex2.toString();
        double double4 = complex2.abs();
        complex2.real = 1051.4948429356753d;
        double double7 = complex2.imaginary;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,290.95719905143267)" + "'", str3, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 290.9589175121722d + "'", double4 == 290.9589175121722d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 290.95719905143267d + "'", double7 == 290.95719905143267d);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        code.src.Complex complex2 = code.src.Complex.polar(322.91145534356957d, 309.0545367982484d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex29.multiply(complex33);
        code.src.Complex complex35 = complex9.multiply(complex29);
        code.src.Complex complex36 = complex2.sub(complex29);
        double double37 = complex36.imaginary;
        double double38 = complex36.abs();
        code.src.Complex complex41 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex44 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        code.src.Complex complex45 = complex41.sub(complex44);
        code.src.Complex complex46 = complex36.sub(complex45);
        double double47 = complex45.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + (-437.56491210010614d) + "'", double37 == (-437.56491210010614d));
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 520.0d + "'", double38 == 520.0d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 5.733935704569432d + "'", double47 == 5.733935704569432d);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 520.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        java.lang.String str7 = complex2.toString();
        complex2.real = (byte) 10;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(-0.0,100.0)" + "'", str7, "(-0.0,100.0)");
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = complex2.add(complex5);
        complex5.real = (-288.4361024143587d);
        org.junit.Assert.assertNotNull(complex10);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        java.lang.String str33 = complex15.toString();
        java.lang.Class<?> wildcardClass34 = complex15.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str33, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        code.src.Complex complex2 = code.src.Complex.polar(139.31618714277246d, 293.2270309501752d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex69 = complex52.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex52.sub(complex72);
        java.lang.String str78 = complex52.toString();
        code.src.Complex complex79 = complex35.multiply(complex52);
        double double80 = complex79.abs();
        double double81 = complex79.imaginary;
        code.src.Complex complex84 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex85 = complex79.add(complex84);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str78, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 552238.2879620573d + "'", double80 == 552238.2879620573d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 509250.64491133287d + "'", double81 == 509250.64491133287d);
        org.junit.Assert.assertNotNull(complex85);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, 8.414709848078965d);
        code.src.Complex complex3 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex4 = complex2.sub(complex3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        code.src.Complex complex2 = new code.src.Complex(141.77446878757826d, 293.2270309501752d);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex49.add(complex54);
        code.src.Complex complex56 = complex5.add(complex54);
        code.src.Complex complex57 = complex2.multiply(complex54);
        complex54.real = 100;
        code.src.Complex complex62 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex63 = complex54.add(complex62);
        double double64 = complex63.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 260.0611305123407d + "'", double64 == 260.0611305123407d);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        code.src.Complex complex2 = new code.src.Complex(572.0d, (double) 1L);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex10.imaginary;
        double double48 = complex10.imaginary;
        java.lang.String str49 = complex10.toString();
        code.src.Complex complex50 = complex5.sub(complex10);
        code.src.Complex complex51 = complex2.multiply(complex50);
        complex2.imaginary = 1588.9039857732523d;
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1.0,0.0)" + "'", str49, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        code.src.Complex complex44 = new code.src.Complex();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex79 = complex44.multiply(complex77);
        code.src.Complex complex80 = complex18.multiply(complex77);
        code.src.Complex complex81 = complex2.sub(complex80);
        java.lang.String str82 = complex2.toString();
        java.lang.String str83 = complex2.toString();
        double double84 = complex2.abs();
        java.lang.String str85 = complex2.toString();
        java.lang.String str86 = complex2.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 581.9143981028653d + "'", double78 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "(100.0,10.0)" + "'", str82, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(100.0,10.0)" + "'", str83, "(100.0,10.0)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.4987562112089d + "'", double84 == 100.4987562112089d);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(100.0,10.0)" + "'", str85, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        double double56 = complex48.real;
        complex48.imaginary = (-44.52533050340393d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 43.756491210010616d + "'", double56 == 43.756491210010616d);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex2.real = 875.1298242002123d;
        complex2.real = 36.40054944640259d;
        code.src.Complex complex9 = code.src.Complex.polar(0.0d, 280.95719905143267d);
        complex9.real = (-288.4361024143587d);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        double double28 = complex27.real;
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        double double36 = complex35.imaginary;
        code.src.Complex complex37 = complex27.sub(complex35);
        complex35.imaginary = 0.0d;
        code.src.Complex complex42 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex42.imaginary = 10L;
        double double45 = complex42.real;
        code.src.Complex complex46 = complex35.add(complex42);
        code.src.Complex complex47 = complex9.sub(complex46);
        code.src.Complex complex48 = complex2.multiply(complex47);
        double double49 = complex48.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 290.95719905143267d + "'", double28 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 437.56491210010614d + "'", double36 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 56933.69471340167d + "'", double49 == 56933.69471340167d);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        code.src.Complex complex24 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex24.imaginary = (byte) 1;
        code.src.Complex complex27 = complex2.multiply(complex24);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex60 = complex43.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex43.sub(complex63);
        complex63.imaginary = 52.0d;
        complex63.imaginary = 28.09571990514327d;
        code.src.Complex complex73 = complex2.multiply(complex63);
        double double74 = complex63.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 10.0d + "'", double74 == 10.0d);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (-1.0d));
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex9 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex10 = complex6.add(complex9);
        code.src.Complex complex13 = new code.src.Complex((double) 10, (double) 10);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex10);
        double double16 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-43.756491210010616d) + "'", double3 == (-43.756491210010616d));
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-43.756491210010616d) + "'", double16 == (-43.756491210010616d));
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        code.src.Complex complex2 = code.src.Complex.polar((-213613.9212426372d), (double) (byte) 100);
        complex2.imaginary = (-23.574318661312283d);
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        complex7.imaginary = (-1.0f);
        double double23 = complex7.real;
        double double24 = complex7.real;
        complex7.imaginary = 141.4213562373095d;
        code.src.Complex complex29 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex29.imaginary = (byte) 1;
        code.src.Complex complex32 = complex7.multiply(complex29);
        double double33 = complex7.abs();
        double double34 = complex7.imaginary;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        double double43 = complex37.real;
        code.src.Complex complex46 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex47 = complex37.multiply(complex46);
        complex46.real = (byte) 100;
        code.src.Complex complex52 = code.src.Complex.polar(214489.24976920983d, (-36073.24762350389d));
        code.src.Complex complex53 = complex46.sub(complex52);
        code.src.Complex complex54 = complex7.multiply(complex53);
        double double55 = complex54.abs();
        code.src.Complex complex56 = complex2.multiply(complex54);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10.0d + "'", double24 == 10.0d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 141.77446878757826d + "'", double33 == 141.77446878757826d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 141.4213562373095d + "'", double34 == 141.4213562373095d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 10.0d + "'", double43 == 10.0d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 3.0535922788626987E7d + "'", double55 == 3.0535922788626987E7d);
        org.junit.Assert.assertNotNull(complex56);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        code.src.Complex complex2 = code.src.Complex.polar(309.0545367982484d, 554.8186781977221d);
        double double3 = complex2.real;
        double double4 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-99.43760890437507d) + "'", double3 == (-99.43760890437507d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-99.43760890437507d) + "'", double4 == (-99.43760890437507d));
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        complex39.imaginary = (-317.11773840932915d);
        double double53 = complex39.real;
        complex39.real = 29147.719905143265d;
        code.src.Complex complex58 = new code.src.Complex(100.0d, (double) (byte) 10);
        double double59 = complex58.real;
        code.src.Complex complex60 = complex39.add(complex58);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 582.9143981028653d + "'", double53 == 582.9143981028653d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 100.0d + "'", double59 == 100.0d);
        org.junit.Assert.assertNotNull(complex60);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        code.src.Complex complex2 = new code.src.Complex(141.77446878757826d, 214489.24977154096d);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        code.src.Complex complex2 = new code.src.Complex(148.66068747318505d, 875.1869567153606d);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        code.src.Complex complex2 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex10.imaginary;
        double double48 = complex10.imaginary;
        java.lang.String str49 = complex10.toString();
        code.src.Complex complex50 = complex5.sub(complex10);
        code.src.Complex complex53 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        double double61 = complex59.imaginary;
        java.lang.String str62 = complex59.toString();
        code.src.Complex complex63 = complex53.sub(complex59);
        code.src.Complex complex66 = new code.src.Complex((double) 100, (double) 10.0f);
        complex66.real = (byte) 1;
        code.src.Complex complex69 = complex59.multiply(complex66);
        code.src.Complex complex70 = complex50.sub(complex69);
        code.src.Complex complex71 = complex2.add(complex70);
        java.lang.Class<?> wildcardClass72 = complex70.getClass();
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1.0,0.0)" + "'", str49, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 43.756491210010616d + "'", double61 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str62, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex41 = new code.src.Complex();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex76 = complex41.multiply(complex74);
        code.src.Complex complex77 = complex15.multiply(complex74);
        code.src.Complex complex80 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double81 = complex80.imaginary;
        code.src.Complex complex82 = complex74.add(complex80);
        double double83 = complex74.real;
        code.src.Complex complex86 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex89 = new code.src.Complex((double) 10L, (double) '#');
        double double90 = complex89.imaginary;
        code.src.Complex complex91 = complex86.multiply(complex89);
        complex91.imaginary = (byte) 0;
        code.src.Complex complex94 = complex74.add(complex91);
        code.src.Complex complex97 = code.src.Complex.polar(517.6532504767864d, 354080.08284857025d);
        code.src.Complex complex98 = complex74.add(complex97);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 581.9143981028653d + "'", double75 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 437.56491210010614d + "'", double81 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 581.9143981028653d + "'", double83 == 581.9143981028653d);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 35.0d + "'", double90 == 35.0d);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertNotNull(complex98);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double15 = complex14.abs();
        double double16 = complex14.real;
        code.src.Complex complex17 = complex8.sub(complex14);
        java.lang.String str18 = complex17.toString();
        double double19 = complex17.imaginary;
        code.src.Complex complex20 = complex2.sub(complex17);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 28.09571990514327d + "'", double16 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(0.0,0.0)" + "'", str18, "(0.0,0.0)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNotNull(complex20);
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.imaginary = 100L;
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex34.sub(complex54);
        code.src.Complex complex60 = complex17.add(complex59);
        code.src.Complex complex61 = complex9.multiply(complex59);
        java.lang.String str62 = complex9.toString();
        code.src.Complex complex63 = complex2.multiply(complex9);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double67 = complex66.abs();
        java.lang.String str68 = complex66.toString();
        code.src.Complex complex69 = complex9.add(complex66);
        code.src.Complex complex72 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex73 = complex9.sub(complex72);
        double double74 = complex72.real;
        double double75 = complex72.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(100.0,100.0)" + "'", str62, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 52.0d + "'", double67 == 52.0d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str68, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-0.0d) + "'", double74 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        complex31.real = 119.9377093343606d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex15.imaginary = 8243.654474996218d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        code.src.Complex complex2 = code.src.Complex.polar(291.95719905143267d, 875.1869567153606d);
        code.src.Complex complex5 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        double double13 = complex11.imaginary;
        java.lang.String str14 = complex11.toString();
        code.src.Complex complex15 = complex5.sub(complex11);
        complex5.real = 1051.4948429356753d;
        java.lang.String str18 = complex5.toString();
        double double19 = complex5.imaginary;
        double double20 = complex5.abs();
        double double21 = complex5.real;
        code.src.Complex complex24 = code.src.Complex.polar((-1120.0d), (-249.54290000761125d));
        code.src.Complex complex25 = complex5.add(complex24);
        code.src.Complex complex26 = complex2.add(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 43.756491210010616d + "'", double13 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(1051.4948429356753,97.0)" + "'", str18, "(1051.4948429356753,97.0)");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 97.0d + "'", double19 == 97.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1055.9594711542297d + "'", double20 == 1055.9594711542297d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1051.4948429356753d + "'", double21 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex5 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.real = 481.32140331011675d;
        code.src.Complex complex11 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex12 = new code.src.Complex();
        complex12.real = 1L;
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex48 = complex12.add(complex47);
        code.src.Complex complex49 = complex11.add(complex47);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex83 = new code.src.Complex();
        code.src.Complex complex84 = complex82.add(complex83);
        code.src.Complex complex85 = complex49.add(complex83);
        double double86 = complex85.imaginary;
        code.src.Complex complex87 = complex6.sub(complex85);
        code.src.Complex complex90 = code.src.Complex.polar(1051.4948429356753d, 52.0d);
        code.src.Complex complex91 = complex6.multiply(complex90);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 907.1298242002123d + "'", double86 == 907.1298242002123d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex2.imaginary = 10L;
        code.src.Complex complex7 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex10 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        code.src.Complex complex48 = complex10.add(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double52 = complex51.abs();
        code.src.Complex complex53 = complex10.add(complex51);
        code.src.Complex complex54 = complex7.add(complex10);
        code.src.Complex complex55 = complex2.sub(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        double double66 = complex64.imaginary;
        java.lang.String str67 = complex64.toString();
        code.src.Complex complex68 = complex58.sub(complex64);
        java.lang.String str69 = complex58.toString();
        code.src.Complex complex70 = complex54.sub(complex58);
        double double71 = complex70.abs();
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 43.756491210010616d + "'", double66 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str67, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(100.0,97.0)" + "'", str69, "(100.0,97.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 105.65474854127304d + "'", double71 == 105.65474854127304d);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        code.src.Complex complex2 = new code.src.Complex(141.4213562373095d, 36.40054944640259d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex52 = complex5.add(complex49);
        code.src.Complex complex55 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex61.imaginary;
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex55.sub(complex61);
        code.src.Complex complex66 = complex5.multiply(complex65);
        code.src.Complex complex67 = complex2.multiply(complex65);
        code.src.Complex complex70 = new code.src.Complex(3171.1773840932915d, 1055.9594711542297d);
        code.src.Complex complex71 = complex65.sub(complex70);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 43.756491210010616d + "'", double63 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str64, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex71);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        double double42 = complex40.imaginary;
        java.lang.String str43 = complex40.toString();
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double47 = complex46.abs();
        double double48 = complex46.real;
        code.src.Complex complex49 = complex40.sub(complex46);
        code.src.Complex complex50 = complex33.sub(complex40);
        complex50.imaginary = (short) -1;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 43.756491210010616d + "'", double42 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str43, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 52.0d + "'", double47 == 52.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 28.09571990514327d + "'", double48 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.sub(complex5);
        complex2.real = (-437.56491210010614d);
        double double9 = complex2.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex13 = complex2.sub(complex12);
        double double14 = complex13.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-437.56491210010614d) + "'", double9 == (-437.56491210010614d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-0.0d) + "'", double14 == (-0.0d));
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex68.imaginary;
        double double70 = complex68.imaginary;
        double double71 = complex68.real;
        complex68.real = 583.5571927775646d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 1079.2052353356332d);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        code.src.Complex complex2 = code.src.Complex.polar(28.09571990514327d, 100.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 100, (double) 10.0f);
        complex8.real = (byte) 1;
        complex8.imaginary = (short) 100;
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        double double50 = complex13.imaginary;
        double double51 = complex13.imaginary;
        java.lang.String str52 = complex13.toString();
        code.src.Complex complex53 = complex8.sub(complex13);
        code.src.Complex complex56 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex66 = complex56.sub(complex62);
        code.src.Complex complex69 = new code.src.Complex((double) 100, (double) 10.0f);
        complex69.real = (byte) 1;
        code.src.Complex complex72 = complex62.multiply(complex69);
        code.src.Complex complex73 = complex53.sub(complex72);
        code.src.Complex complex74 = complex5.multiply(complex72);
        double double75 = complex5.imaginary;
        complex5.imaginary = (-0.0d);
        code.src.Complex complex78 = complex2.add(complex5);
        complex78.imaginary = 54.03023058681398d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(1.0,0.0)" + "'", str52, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-5.063656411097588d) + "'", double75 == (-5.063656411097588d));
        org.junit.Assert.assertNotNull(complex78);
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex40 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex41 = complex37.add(complex40);
        code.src.Complex complex42 = complex15.sub(complex37);
        code.src.Complex complex45 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        code.src.Complex complex46 = complex37.multiply(complex45);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        complex23.imaginary = 0.0d;
        code.src.Complex complex30 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex41.real = 10;
        code.src.Complex complex44 = complex33.multiply(complex41);
        java.lang.String str45 = complex33.toString();
        code.src.Complex complex46 = complex30.sub(complex33);
        code.src.Complex complex47 = complex23.multiply(complex33);
        java.lang.Class<?> wildcardClass48 = complex33.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        code.src.Complex complex39 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        double double56 = complex55.real;
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex63.imaginary;
        code.src.Complex complex65 = complex55.sub(complex63);
        double double66 = complex55.imaginary;
        code.src.Complex complex67 = complex39.multiply(complex55);
        code.src.Complex complex68 = complex0.multiply(complex67);
        complex67.imaginary = 148.66068747318505d;
        double double71 = complex67.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 290.95719905143267d + "'", double56 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 437.56491210010614d + "'", double64 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 437.56491210010614d + "'", double66 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 326.7355072223633d + "'", double71 == 326.7355072223633d);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, 393.80842089009553d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-8.954046539728642d) + "'", double3 == (-8.954046539728642d));
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        code.src.Complex complex2 = new code.src.Complex(1050.9408051475186d, (-272.8614791462894d));
        double double3 = complex2.real;
        complex2.real = (short) 100;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1050.9408051475186d + "'", double3 == 1050.9408051475186d);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        code.src.Complex complex2 = new code.src.Complex(1108.4219560476556d, 56933.69471340167d);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        double double3 = complex2.abs();
        double double4 = complex2.imaginary;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        java.lang.String str13 = complex7.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        java.lang.String str37 = complex23.toString();
        code.src.Complex complex38 = complex20.add(complex23);
        code.src.Complex complex39 = complex7.sub(complex23);
        double double40 = complex39.real;
        code.src.Complex complex41 = new code.src.Complex();
        complex41.real = 1L;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = complex41.add(complex76);
        double double78 = complex77.real;
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex77.sub(complex84);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex84.add(complex89);
        complex89.imaginary = (short) 100;
        code.src.Complex complex93 = complex39.sub(complex89);
        code.src.Complex complex94 = complex2.multiply(complex89);
        java.lang.Class<?> wildcardClass95 = complex94.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 141.4213562373095d + "'", double3 == 141.4213562373095d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 582.9143981028653d + "'", double78 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (-10.0d));
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        code.src.Complex complex77 = new code.src.Complex();
        code.src.Complex complex78 = complex76.add(complex77);
        code.src.Complex complex79 = complex43.add(complex77);
        complex43.imaginary = (-1);
        code.src.Complex complex84 = new code.src.Complex((double) 100, (double) 10.0f);
        complex84.imaginary = '4';
        code.src.Complex complex87 = complex43.multiply(complex84);
        complex84.real = 0.0d;
        double double90 = complex84.real;
        code.src.Complex complex91 = complex2.sub(complex84);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        code.src.Complex complex53 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex54 = complex39.sub(complex53);
        double double55 = complex54.abs();
        double double56 = complex54.real;
        complex54.imaginary = (-262.8614791462894d);
        code.src.Complex complex61 = new code.src.Complex((-213613.9212426372d), 509250.64491133287d);
        java.lang.String str62 = complex61.toString();
        code.src.Complex complex63 = complex54.add(complex61);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 214489.24976920983d + "'", double55 == 214489.24976920983d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 291.95719905143267d + "'", double56 == 291.95719905143267d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(-213613.9212426372,509250.64491133287)" + "'", str62, "(-213613.9212426372,509250.64491133287)");
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex2.imaginary = (-1.0f);
        code.src.Complex complex11 = new code.src.Complex(907.1298242002123d, (-35.0d));
        code.src.Complex complex14 = code.src.Complex.polar(10.0d, (double) '4');
        double double15 = complex14.imaginary;
        code.src.Complex complex18 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex19 = new code.src.Complex();
        complex19.real = 1L;
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex54 = complex37.add(complex53);
        code.src.Complex complex55 = complex19.add(complex54);
        code.src.Complex complex56 = complex18.add(complex54);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double69 = complex68.abs();
        double double70 = complex68.real;
        code.src.Complex complex71 = complex62.sub(complex68);
        code.src.Complex complex72 = complex54.sub(complex62);
        double double73 = complex54.real;
        code.src.Complex complex74 = complex14.multiply(complex54);
        code.src.Complex complex75 = complex11.add(complex54);
        code.src.Complex complex76 = complex2.multiply(complex11);
        double double77 = complex2.imaginary;
        code.src.Complex complex80 = code.src.Complex.polar((-213613.9212426372d), 0.0d);
        code.src.Complex complex81 = complex2.add(complex80);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 9.866275920404853d + "'", double15 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 52.0d + "'", double69 == 52.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 28.09571990514327d + "'", double70 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 581.9143981028653d + "'", double73 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-1.0d) + "'", double77 == (-1.0d));
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        code.src.Complex complex2 = code.src.Complex.polar((double) 100L, (double) (byte) 1);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double7 = complex6.abs();
        double double8 = complex6.real;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        java.lang.String str42 = complex24.toString();
        double double43 = complex24.abs();
        double double44 = complex24.real;
        code.src.Complex complex45 = complex6.sub(complex24);
        code.src.Complex complex48 = code.src.Complex.polar(875.1298242002123d, (double) (-1L));
        code.src.Complex complex49 = complex45.sub(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex65.sub(complex85);
        java.lang.String str91 = complex65.toString();
        code.src.Complex complex94 = new code.src.Complex((double) 100.0f, (double) (short) -1);
        code.src.Complex complex95 = complex65.add(complex94);
        code.src.Complex complex96 = complex49.multiply(complex65);
        code.src.Complex complex97 = complex2.sub(complex49);
        double double98 = complex97.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(54.03023058681398,84.14709848078965)" + "'", str3, "(54.03023058681398,84.14709848078965)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 52.0d + "'", double7 == 52.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 28.09571990514327d + "'", double8 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str42, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 525.4704025737593d + "'", double43 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 290.95719905143267d + "'", double44 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str91, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + (-258.4408356336288d) + "'", double98 == (-258.4408356336288d));
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        code.src.Complex complex39 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        double double56 = complex55.real;
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex63.imaginary;
        code.src.Complex complex65 = complex55.sub(complex63);
        double double66 = complex55.imaginary;
        code.src.Complex complex67 = complex39.multiply(complex55);
        code.src.Complex complex68 = complex0.multiply(complex67);
        double double69 = complex0.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 290.95719905143267d + "'", double56 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 437.56491210010614d + "'", double64 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 437.56491210010614d + "'", double66 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 1.0d + "'", double69 == 1.0d);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 3.7494694905957755d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex2.add(complex43);
        double double49 = complex48.imaginary;
        double double50 = complex48.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 939.1298242002123d + "'", double49 == 939.1298242002123d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 939.5499966363205d + "'", double50 == 939.5499966363205d);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        code.src.Complex complex2 = code.src.Complex.polar(276080.4779057942d, 14.841058233505056d);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex4 = new code.src.Complex();
        complex4.real = 1L;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex40 = complex4.add(complex39);
        double double41 = complex40.real;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex40.sub(complex47);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex47.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex57 = complex52.add(complex56);
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex60.imaginary = (short) 0;
        complex60.imaginary = 100.0f;
        code.src.Complex complex65 = complex52.multiply(complex60);
        complex65.real = 213613.92147670433d;
        java.lang.String str68 = complex65.toString();
        code.src.Complex complex69 = complex2.multiply(complex65);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-178676.25583184877,210464.31023478412)" + "'", str3, "(-178676.25583184877,210464.31023478412)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 582.9143981028653d + "'", double41 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(213613.92147670433,2809.571990514327)" + "'", str68, "(213613.92147670433,2809.571990514327)");
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, (-217.11773840932915d));
        code.src.Complex complex3 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex4 = complex2.add(complex3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        complex44.imaginary = 589.2698661176468d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex46.imaginary;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double53 = complex52.abs();
        double double54 = complex52.real;
        code.src.Complex complex55 = complex46.sub(complex52);
        code.src.Complex complex56 = complex38.sub(complex46);
        code.src.Complex complex57 = new code.src.Complex();
        complex57.real = 1L;
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        java.lang.String str83 = complex78.toString();
        code.src.Complex complex86 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex86.multiply(complex89);
        code.src.Complex complex91 = complex78.add(complex90);
        code.src.Complex complex92 = complex75.add(complex91);
        code.src.Complex complex93 = complex57.add(complex92);
        java.lang.String str94 = complex57.toString();
        code.src.Complex complex95 = complex46.sub(complex57);
        java.lang.Class<?> wildcardClass96 = complex46.getClass();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 43.756491210010616d + "'", double48 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str49, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(10.0,0.0)" + "'", str83, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(1.0,0.0)" + "'", str94, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        java.lang.String str16 = complex2.toString();
        complex2.imaginary = '#';
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double22 = complex21.abs();
        code.src.Complex complex25 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str26 = complex25.toString();
        code.src.Complex complex27 = complex21.multiply(complex25);
        double double28 = complex25.real;
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        complex31.real = (byte) 1;
        complex31.imaginary = (short) 100;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        double double52 = complex51.real;
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex51.multiply(complex55);
        code.src.Complex complex57 = complex31.multiply(complex51);
        code.src.Complex complex60 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex61 = complex51.multiply(complex60);
        code.src.Complex complex62 = complex25.multiply(complex61);
        code.src.Complex complex63 = complex2.multiply(complex61);
        complex63.real = 581.9143981028653d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(100.0,10.0)" + "'", str26, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 290.95719905143267d + "'", double52 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        double double35 = complex15.imaginary;
        double double36 = complex15.abs();
        double double37 = complex15.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 437.56491210010614d + "'", double35 == 437.56491210010614d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 525.4704025737593d + "'", double36 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex6 = complex2.sub(complex5);
        java.lang.Class<?> wildcardClass7 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex40 = complex18.sub(complex39);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double44 = complex43.abs();
        double double45 = complex43.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        java.lang.String str79 = complex61.toString();
        double double80 = complex61.abs();
        double double81 = complex61.real;
        code.src.Complex complex82 = complex43.sub(complex61);
        code.src.Complex complex85 = code.src.Complex.polar(875.1298242002123d, (double) (-1L));
        code.src.Complex complex86 = complex82.sub(complex85);
        code.src.Complex complex87 = complex40.sub(complex86);
        double double88 = complex86.abs();
        double double89 = complex86.real;
        java.lang.String str90 = complex86.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 52.0d + "'", double44 == 52.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 28.09571990514327d + "'", double45 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str79, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 525.4704025737593d + "'", double80 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 290.95719905143267d + "'", double81 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 811.5511719071119d + "'", double88 == 811.5511719071119d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-735.696141095644d) + "'", double89 == (-735.696141095644d));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(-735.696141095644,342.5879341144185)" + "'", str90, "(-735.696141095644,342.5879341144185)");
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str3 = complex2.toString();
        double double4 = complex2.imaginary;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex40 = complex23.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex23.sub(complex43);
        code.src.Complex complex49 = new code.src.Complex();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        double double83 = complex82.real;
        code.src.Complex complex84 = complex49.multiply(complex82);
        code.src.Complex complex85 = complex23.multiply(complex82);
        code.src.Complex complex86 = complex7.sub(complex85);
        double double87 = complex85.real;
        double double88 = complex85.real;
        code.src.Complex complex91 = code.src.Complex.polar((double) (byte) 100, (double) 1.0f);
        code.src.Complex complex92 = complex85.sub(complex91);
        complex91.real = 522.5935322982863d;
        code.src.Complex complex95 = complex2.add(complex91);
        complex2.imaginary = 0.2324571024365446d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,290.95719905143267)" + "'", str3, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 290.95719905143267d + "'", double4 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 581.9143981028653d + "'", double83 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + (-213613.9212426372d) + "'", double87 == (-213613.9212426372d));
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-213613.9212426372d) + "'", double88 == (-213613.9212426372d));
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        code.src.Complex complex2 = code.src.Complex.polar(3.7494694905957755d, 258461.7816901948d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str32 = complex31.toString();
        code.src.Complex complex35 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex36 = complex31.sub(complex35);
        complex31.imaginary = (-1.0f);
        code.src.Complex complex39 = complex2.sub(complex31);
        double double40 = complex2.abs();
        code.src.Complex complex43 = new code.src.Complex(100.00499987500625d, 907.1298242002123d);
        code.src.Complex complex44 = complex2.sub(complex43);
        complex44.imaginary = 1078.895181758881d;
        double double47 = complex44.real;
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(100.0,10.0)" + "'", str32, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.00499987500625d + "'", double40 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + (-99.00499987500625d) + "'", double47 == (-99.00499987500625d));
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        code.src.Complex complex2 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) 0.0f, 36.40054944640259d);
        double double6 = complex5.real;
        java.lang.String str7 = complex5.toString();
        code.src.Complex complex10 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex13 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex57.add(complex62);
        code.src.Complex complex64 = complex13.add(complex62);
        code.src.Complex complex65 = complex10.multiply(complex62);
        complex62.real = 100;
        double double68 = complex62.imaginary;
        code.src.Complex complex69 = complex5.add(complex62);
        code.src.Complex complex70 = complex2.sub(complex69);
        double double71 = complex70.real;
        complex70.imaginary = 904.2902405342309d;
        double double74 = complex70.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(0.0,-0.0)" + "'", str7, "(0.0,-0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 43.756491210010616d + "'", double68 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 324.9608082617091d + "'", double71 == 324.9608082617091d);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 324.9608082617091d + "'", double74 == 324.9608082617091d);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex65 = complex48.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex48.sub(complex68);
        code.src.Complex complex74 = complex31.add(complex73);
        code.src.Complex complex75 = complex25.add(complex31);
        complex31.real = 100L;
        code.src.Complex complex80 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex83 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex84 = complex80.add(complex83);
        complex84.imaginary = 'a';
        code.src.Complex complex89 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str90 = complex89.toString();
        code.src.Complex complex93 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double94 = complex93.abs();
        code.src.Complex complex95 = complex89.sub(complex93);
        code.src.Complex complex96 = complex84.add(complex89);
        code.src.Complex complex97 = complex31.multiply(complex84);
        complex84.real = 6.732926181735216E10d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(1.0,0.0)" + "'", str90, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 10.0d + "'", double94 == 10.0d);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex5 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        double double15 = complex9.real;
        code.src.Complex complex18 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex18.imaginary = (byte) 1;
        code.src.Complex complex21 = complex9.multiply(complex18);
        code.src.Complex complex22 = complex5.add(complex9);
        double double23 = complex5.abs();
        java.lang.Class<?> wildcardClass24 = complex5.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.00499987500625d + "'", double23 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        java.lang.String str35 = complex32.toString();
        complex32.imaginary = 445.65251212240173d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str35, "(581.9143981028653,875.1298242002123)");
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        double double14 = complex2.abs();
        double double15 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        code.src.Complex complex2 = new code.src.Complex(58911.02077697936d, 309.0545367982484d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str6 = complex5.toString();
        code.src.Complex complex9 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex10 = complex5.sub(complex9);
        complex5.real = (-213613.9212426372d);
        double double13 = complex5.abs();
        code.src.Complex complex14 = complex2.multiply(complex5);
        complex5.imaginary = (-10.0d);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(100.0,10.0)" + "'", str6, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 213613.92147670433d + "'", double13 == 213613.92147670433d);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex56 = complex51.add(complex55);
        complex51.real = 43.756491210010616d;
        complex51.imaginary = 100.0d;
        complex51.imaginary = (-317.11773840932915d);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex51.multiply(complex77);
        code.src.Complex complex80 = complex2.sub(complex77);
        complex80.imaginary = 5723247.3589574285d;
        complex80.imaginary = (-581.9143981028653d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex37 = complex15.sub(complex36);
        complex36.real = 100L;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = new code.src.Complex((double) 100, (double) 10.0f);
        complex15.real = (byte) 1;
        code.src.Complex complex18 = complex8.multiply(complex15);
        double double19 = complex18.abs();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex55 = complex38.add(complex54);
        code.src.Complex complex56 = complex22.add(complex38);
        code.src.Complex complex59 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        double double60 = complex59.imaginary;
        double double61 = complex59.imaginary;
        code.src.Complex complex62 = complex38.sub(complex59);
        code.src.Complex complex63 = complex18.multiply(complex62);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 522.5935322982863d + "'", double19 == 522.5935322982863d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-54.40211108893698d) + "'", double60 == (-54.40211108893698d));
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + (-54.40211108893698d) + "'", double61 == (-54.40211108893698d));
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        code.src.Complex complex2 = new code.src.Complex((double) 100L, (double) 10);
        double double3 = complex2.real;
        complex2.imaginary = 0.0d;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.0d + "'", double3 == 100.0d);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex7 = complex2.sub(complex6);
        complex2.real = (-213613.9212426372d);
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex38 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex39 = complex25.multiply(complex38);
        double double40 = complex25.abs();
        java.lang.String str41 = complex25.toString();
        complex25.imaginary = 235.63140523513093d;
        code.src.Complex complex44 = complex2.add(complex25);
        code.src.Complex complex47 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        complex47.real = 1051.4948429356753d;
        complex47.real = 9.013372407959515d;
        code.src.Complex complex52 = complex2.sub(complex47);
        double double53 = complex2.abs();
        double double54 = complex2.real;
        complex2.real = 354080.08284857025d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 525.4704025737593d + "'", double40 == 525.4704025737593d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str41, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 213613.92147670433d + "'", double53 == 213613.92147670433d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-213613.9212426372d) + "'", double54 == (-213613.9212426372d));
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex15.real = 875.1298242002123d;
        complex15.imaginary = (-317.11773840932915d);
        complex15.real = 0.0d;
        code.src.Complex complex22 = complex12.sub(complex15);
        double double23 = complex15.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        code.src.Complex complex2 = new code.src.Complex(1136.0754242392372d, 279.7722729260128d);
        code.src.Complex complex5 = new code.src.Complex(907.1298242002123d, (-35.0d));
        code.src.Complex complex8 = code.src.Complex.polar(10.0d, (double) '4');
        double double9 = complex8.imaginary;
        code.src.Complex complex12 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        code.src.Complex complex50 = complex12.add(complex48);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        double double58 = complex56.imaginary;
        java.lang.String str59 = complex56.toString();
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double63 = complex62.abs();
        double double64 = complex62.real;
        code.src.Complex complex65 = complex56.sub(complex62);
        code.src.Complex complex66 = complex48.sub(complex56);
        double double67 = complex48.real;
        code.src.Complex complex68 = complex8.multiply(complex48);
        code.src.Complex complex69 = complex5.add(complex48);
        code.src.Complex complex70 = complex2.sub(complex69);
        complex69.real = 0.0d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 9.866275920404853d + "'", double9 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 43.756491210010616d + "'", double58 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str59, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 52.0d + "'", double63 == 52.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 28.09571990514327d + "'", double64 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 581.9143981028653d + "'", double67 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        code.src.Complex complex2 = new code.src.Complex((-23.574318661312283d), 1118.3729221500103d);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        code.src.Complex complex2 = code.src.Complex.polar((-37.09571990514327d), 119.9377093343606d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.imaginary = 100L;
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex34.sub(complex54);
        code.src.Complex complex60 = complex17.add(complex59);
        code.src.Complex complex61 = complex9.multiply(complex59);
        java.lang.String str62 = complex9.toString();
        code.src.Complex complex63 = complex2.multiply(complex9);
        double double64 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(100.0,100.0)" + "'", str62, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + (-0.5063656411097588d) + "'", double64 == (-0.5063656411097588d));
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        java.lang.String str37 = complex0.toString();
        java.lang.String str38 = complex0.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(1.0,0.0)" + "'", str37, "(1.0,0.0)");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(1.0,0.0)" + "'", str38, "(1.0,0.0)");
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        code.src.Complex complex2 = code.src.Complex.polar(121.44752674007574d, 214489.84591642267d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        code.src.Complex complex16 = complex7.multiply(complex14);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex52 = complex35.add(complex51);
        code.src.Complex complex53 = complex19.add(complex35);
        code.src.Complex complex56 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex57 = complex35.sub(complex56);
        code.src.Complex complex58 = complex7.add(complex56);
        code.src.Complex complex61 = code.src.Complex.polar(43.75649121001061d, 10.490726945797887d);
        code.src.Complex complex62 = complex7.add(complex61);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        code.src.Complex complex2 = new code.src.Complex(35.014282800023196d, (-54.40211108893698d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = new code.src.Complex();
        code.src.Complex complex72 = complex70.add(complex71);
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        double double80 = complex78.imaginary;
        java.lang.String str81 = complex78.toString();
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double85 = complex84.abs();
        double double86 = complex84.real;
        code.src.Complex complex87 = complex78.sub(complex84);
        code.src.Complex complex88 = complex71.sub(complex78);
        code.src.Complex complex89 = complex36.add(complex71);
        double double90 = complex89.real;
        double double91 = complex89.real;
        code.src.Complex complex92 = complex2.sub(complex89);
        double double93 = complex92.real;
        java.lang.Class<?> wildcardClass94 = complex92.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 43.756491210010616d + "'", double80 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str81, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 52.0d + "'", double85 == 52.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 28.09571990514327d + "'", double86 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 35.014282800023196d + "'", double93 == 35.014282800023196d);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        complex2.real = 10;
        double double5 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 22801.876198575297d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        code.src.Complex complex2 = new code.src.Complex((-438.0712777412159d), (-437.56491210010614d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        complex5.imaginary = (byte) 10;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) (short) -1, (double) (-1L));
        code.src.Complex complex14 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex15 = new code.src.Complex();
        complex15.real = 1L;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex51 = complex15.add(complex50);
        code.src.Complex complex52 = complex14.add(complex50);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        code.src.Complex complex86 = new code.src.Complex();
        code.src.Complex complex87 = complex85.add(complex86);
        code.src.Complex complex88 = complex52.add(complex86);
        double double89 = complex88.imaginary;
        code.src.Complex complex90 = complex11.sub(complex88);
        double double91 = complex90.imaginary;
        double double92 = complex90.imaginary;
        code.src.Complex complex93 = complex5.sub(complex90);
        code.src.Complex complex94 = complex2.multiply(complex5);
        double double95 = complex5.real;
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,10.0)" + "'", str8, "(10.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 907.1298242002123d + "'", double89 == 907.1298242002123d);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-906.2883532154044d) + "'", double91 == (-906.2883532154044d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + (-906.2883532154044d) + "'", double92 == (-906.2883532154044d));
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 10.0d + "'", double95 == 10.0d);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        code.src.Complex complex79 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str80 = complex79.toString();
        java.lang.String str81 = complex79.toString();
        code.src.Complex complex82 = complex40.sub(complex79);
        java.lang.String str83 = complex79.toString();
        double double84 = complex79.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(100.0,10.0)" + "'", str80, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(100.0,10.0)" + "'", str81, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(100.0,10.0)" + "'", str83, "(100.0,10.0)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.4987562112089d + "'", double84 == 100.4987562112089d);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        code.src.Complex complex2 = new code.src.Complex(0.1820978992688351d, 276080.4779057942d);
        complex2.imaginary = 352949.8873651941d;
        double double5 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 352949.88736524107d + "'", double5 == 352949.88736524107d);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        code.src.Complex complex2 = code.src.Complex.polar(71852.21111515388d, 589.1068753368511d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex13.real = 10;
        code.src.Complex complex16 = complex5.multiply(complex13);
        code.src.Complex complex19 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex20 = complex13.add(complex19);
        java.lang.String str21 = complex13.toString();
        code.src.Complex complex24 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double25 = complex24.imaginary;
        code.src.Complex complex26 = complex13.add(complex24);
        code.src.Complex complex27 = complex2.add(complex24);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        code.src.Complex complex2 = code.src.Complex.polar(215.031855238055d, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        java.lang.String str77 = complex76.toString();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(581.9143981028653,907.1298242002123)" + "'", str77, "(581.9143981028653,907.1298242002123)");
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        code.src.Complex complex2 = code.src.Complex.polar((double) (-1), (double) (short) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex13.real = 10;
        code.src.Complex complex16 = complex5.multiply(complex13);
        code.src.Complex complex19 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex20 = new code.src.Complex();
        complex20.real = 1L;
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex55 = complex38.add(complex54);
        code.src.Complex complex56 = complex20.add(complex55);
        double double57 = complex56.real;
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex56.sub(complex63);
        double double66 = complex56.imaginary;
        code.src.Complex complex67 = complex19.sub(complex56);
        code.src.Complex complex68 = complex13.add(complex19);
        code.src.Complex complex69 = complex2.multiply(complex68);
        complex69.imaginary = 0.0d;
        complex69.real = (-545.7908951722745d);
        complex69.real = 105.65474854127304d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 582.9143981028653d + "'", double57 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 875.1298242002123d + "'", double66 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex36.imaginary = (short) 0;
        complex36.imaginary = 100.0f;
        code.src.Complex complex41 = complex15.sub(complex36);
        double double42 = complex41.abs();
        complex41.imaginary = (-325.1488062743758d);
        code.src.Complex complex47 = new code.src.Complex(43.756491210010616d, 36.41428291206625d);
        java.lang.String str48 = complex47.toString();
        code.src.Complex complex49 = complex41.sub(complex47);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 445.65251212240173d + "'", double42 == 445.65251212240173d);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(43.756491210010616,36.41428291206625)" + "'", str48, "(43.756491210010616,36.41428291206625)");
        org.junit.Assert.assertNotNull(complex49);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        code.src.Complex complex2 = code.src.Complex.polar(29147.719905143265d, 491.0602468381958d);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 29147.719905143265d + "'", double3 == 29147.719905143265d);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        complex2.real = 97.0d;
        complex2.imaginary = 290.9589175121722d;
        code.src.Complex complex22 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex25 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex28 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex29 = complex25.add(complex28);
        complex29.real = 0.0d;
        code.src.Complex complex34 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex34.imaginary = (short) 0;
        complex34.imaginary = 100.0f;
        code.src.Complex complex41 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str42 = complex41.toString();
        code.src.Complex complex45 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex46 = complex41.sub(complex45);
        code.src.Complex complex47 = complex34.multiply(complex46);
        java.lang.String str48 = complex46.toString();
        double double49 = complex46.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        code.src.Complex complex85 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex88 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex89 = complex85.multiply(complex88);
        code.src.Complex complex90 = complex65.sub(complex85);
        double double91 = complex65.abs();
        code.src.Complex complex92 = complex46.multiply(complex65);
        code.src.Complex complex93 = complex29.add(complex65);
        java.lang.String str94 = complex93.toString();
        code.src.Complex complex95 = complex22.multiply(complex93);
        double double96 = complex93.real;
        java.lang.String str97 = complex93.toString();
        code.src.Complex complex98 = complex2.multiply(complex93);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(100.0,10.0)" + "'", str42, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str48, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 589.1068753368511d + "'", double49 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 525.4704025737593d + "'", double91 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str94, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 290.95719905143267d + "'", double96 == 290.95719905143267d);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str97, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex98);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex43 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex44 = complex40.sub(complex43);
        double double45 = complex44.abs();
        java.lang.String str46 = complex44.toString();
        java.lang.String str47 = complex44.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 511.0653454891018d + "'", double45 == 511.0653454891018d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(279.95719905143267,427.56491210010614)" + "'", str46, "(279.95719905143267,427.56491210010614)");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(279.95719905143267,427.56491210010614)" + "'", str47, "(279.95719905143267,427.56491210010614)");
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        code.src.Complex complex2 = new code.src.Complex((double) 10, 907.1298242002123d);
        complex2.real = 922.8939813892761d;
        code.src.Complex complex7 = new code.src.Complex(112.71202242884297d, 279.7722729260128d);
        code.src.Complex complex8 = new code.src.Complex();
        complex8.real = 1L;
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        code.src.Complex complex44 = complex8.add(complex43);
        double double45 = complex44.real;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex44.sub(complex51);
        double double54 = complex44.imaginary;
        double double55 = complex44.real;
        double double56 = complex44.abs();
        code.src.Complex complex59 = new code.src.Complex((double) 100, (double) 10.0f);
        complex59.imaginary = '4';
        code.src.Complex complex64 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str65 = complex64.toString();
        double double66 = complex64.abs();
        code.src.Complex complex67 = complex59.multiply(complex64);
        code.src.Complex complex68 = complex44.sub(complex64);
        code.src.Complex complex69 = complex7.add(complex64);
        code.src.Complex complex70 = complex2.add(complex69);
        complex70.real = 307.6491606976328d;
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 582.9143981028653d + "'", double45 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 875.1298242002123d + "'", double54 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 582.9143981028653d + "'", double55 == 582.9143981028653d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 1051.4948429356753d + "'", double56 == 1051.4948429356753d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(1.0,290.95719905143267)" + "'", str65, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 290.9589175121722d + "'", double66 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        code.src.Complex complex2 = code.src.Complex.polar((double) '#', (-317.11773840932915d));
        java.lang.String str3 = complex2.toString();
        double double4 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-34.41481417900291,-6.373426474409229)" + "'", str3, "(-34.41481417900291,-6.373426474409229)");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-34.41481417900291d) + "'", double4 == (-34.41481417900291d));
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        code.src.Complex complex2 = code.src.Complex.polar((double) (-1), (double) (short) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex13.real = 10;
        code.src.Complex complex16 = complex5.multiply(complex13);
        code.src.Complex complex19 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex20 = new code.src.Complex();
        complex20.real = 1L;
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        code.src.Complex complex55 = complex38.add(complex54);
        code.src.Complex complex56 = complex20.add(complex55);
        double double57 = complex56.real;
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex56.sub(complex63);
        double double66 = complex56.imaginary;
        code.src.Complex complex67 = complex19.sub(complex56);
        code.src.Complex complex68 = complex13.add(complex19);
        code.src.Complex complex69 = complex2.multiply(complex68);
        complex69.real = 1079.2052353356332d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 582.9143981028653d + "'", double57 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 875.1298242002123d + "'", double66 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        code.src.Complex complex2 = new code.src.Complex(307.6491606976328d, 290.9589175121722d);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        code.src.Complex complex2 = new code.src.Complex(1.4142135623730951d, 181.33944529425008d);
        complex2.imaginary = 907.1298242002123d;
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex36.imaginary = (short) 0;
        complex36.imaginary = 100.0f;
        code.src.Complex complex41 = complex15.sub(complex36);
        code.src.Complex complex44 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex47 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex48 = complex44.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        java.lang.String str72 = complex67.toString();
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        code.src.Complex complex80 = complex67.add(complex79);
        code.src.Complex complex81 = complex64.add(complex80);
        code.src.Complex complex82 = new code.src.Complex();
        code.src.Complex complex83 = complex81.add(complex82);
        complex81.real = 10;
        code.src.Complex complex86 = complex44.sub(complex81);
        code.src.Complex complex87 = complex41.add(complex81);
        complex87.real = 104.0d;
        complex87.real = 1.2901027673467858d;
        code.src.Complex complex94 = code.src.Complex.polar(0.9999999999999999d, (-389.10687533685115d));
        code.src.Complex complex95 = complex87.add(complex94);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(10.0,0.0)" + "'", str72, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        code.src.Complex complex2 = code.src.Complex.polar((-0.0d), (-489.10687533685115d));
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex5.imaginary = (short) 0;
        double double8 = complex5.abs();
        double double9 = complex5.real;
        complex5.real = 1.6424065671921217E8d;
        double double12 = complex5.real;
        code.src.Complex complex13 = complex2.multiply(complex5);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = new code.src.Complex();
        code.src.Complex complex48 = complex46.add(complex47);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double52 = complex51.abs();
        double double53 = complex51.real;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        java.lang.String str77 = complex72.toString();
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        code.src.Complex complex85 = complex72.add(complex84);
        code.src.Complex complex86 = complex69.add(complex85);
        java.lang.String str87 = complex69.toString();
        double double88 = complex69.abs();
        double double89 = complex69.real;
        code.src.Complex complex90 = complex51.sub(complex69);
        code.src.Complex complex91 = complex47.add(complex69);
        complex47.imaginary = 52.0d;
        complex47.imaginary = (-213613.9212426372d);
        code.src.Complex complex96 = complex13.add(complex47);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.0d) + "'", double9 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.6424065671921217E8d + "'", double12 == 1.6424065671921217E8d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 28.09571990514327d + "'", double53 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(10.0,0.0)" + "'", str77, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str87, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 525.4704025737593d + "'", double88 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 290.95719905143267d + "'", double89 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex96);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        code.src.Complex complex2 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double10 = complex9.imaginary;
        code.src.Complex complex11 = complex5.add(complex9);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex34.sub(complex54);
        code.src.Complex complex60 = complex17.add(complex59);
        double double61 = complex60.abs();
        code.src.Complex complex64 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex67 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex60.add(complex68);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (-1.0d));
        code.src.Complex complex73 = complex68.multiply(complex72);
        double double74 = complex72.imaginary;
        double double75 = complex72.imaginary;
        code.src.Complex complex76 = complex11.multiply(complex72);
        double double77 = complex76.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 572.0d + "'", double61 == 572.0d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + (-43.756491210010616d) + "'", double74 == (-43.756491210010616d));
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + (-43.756491210010616d) + "'", double75 == (-43.756491210010616d));
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-13960.636243851644d) + "'", double77 == (-13960.636243851644d));
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        code.src.Complex complex2 = code.src.Complex.polar((-1.868831124759214E7d), 1114.6258773791556d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double7 = complex6.abs();
        code.src.Complex complex8 = complex2.sub(complex6);
        double double9 = complex8.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(1.0,0.0)" + "'", str3, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-4.403023058681398d) + "'", double9 == (-4.403023058681398d));
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        code.src.Complex complex2 = new code.src.Complex(100.00499987500625d, 289.95719905143267d);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        code.src.Complex complex2 = new code.src.Complex(0.2324571024365446d, (-285.04312220503374d));
        complex2.imaginary = (-906.2883532154044d);
        complex2.real = (-50.09571990514327d);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.real = 10;
        double double5 = complex2.imaginary;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = new code.src.Complex();
        code.src.Complex complex40 = complex38.add(complex39);
        double double41 = complex38.imaginary;
        double double42 = complex38.abs();
        double double43 = complex38.imaginary;
        code.src.Complex complex46 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex49 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double50 = complex49.abs();
        code.src.Complex complex53 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex55 = complex49.multiply(complex53);
        double double56 = complex53.real;
        complex53.imaginary = (-198.14967628541848d);
        code.src.Complex complex61 = code.src.Complex.polar((-489.10687533685115d), 520.0d);
        code.src.Complex complex64 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex65 = complex61.add(complex64);
        code.src.Complex complex66 = complex53.sub(complex64);
        code.src.Complex complex67 = complex46.multiply(complex66);
        code.src.Complex complex68 = complex38.multiply(complex67);
        code.src.Complex complex69 = complex2.add(complex67);
        double double70 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 875.1298242002123d + "'", double41 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1050.9408051475186d + "'", double42 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 875.1298242002123d + "'", double43 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(100.0,10.0)" + "'", str54, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 10.0d + "'", double70 == 10.0d);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex18.real;
        double double37 = complex18.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = complex18.sub(complex53);
        double double72 = complex53.imaginary;
        code.src.Complex complex73 = complex2.add(complex53);
        double double74 = complex73.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 290.95719905143267d + "'", double36 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 437.56491210010614d + "'", double72 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 524.9173550026002d + "'", double74 == 524.9173550026002d);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        complex32.real = 10;
        double double37 = complex32.imaginary;
        double double38 = complex32.imaginary;
        java.lang.String str39 = complex32.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 875.1298242002123d + "'", double38 == 875.1298242002123d);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,875.1298242002123)" + "'", str39, "(10.0,875.1298242002123)");
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        code.src.Complex complex2 = code.src.Complex.polar(49132.14033101167d, (-333229.2368515873d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex56.imaginary = (short) 0;
        complex56.imaginary = 100.0f;
        code.src.Complex complex61 = complex48.multiply(complex56);
        double double62 = complex56.abs();
        double double63 = complex56.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 100.0d + "'", double62 == 100.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 100.0d + "'", double63 == 100.0d);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        code.src.Complex complex74 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex74.imaginary = (short) 0;
        complex74.real = 525.4704025737593d;
        double double79 = complex74.real;
        code.src.Complex complex80 = complex51.add(complex74);
        double double81 = complex51.abs();
        code.src.Complex complex84 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex85 = complex51.add(complex84);
        double double86 = complex85.imaginary;
        double double87 = complex85.real;
        double double88 = complex85.real;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 525.4704025737593d + "'", double81 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 432.1247009912124d + "'", double86 == 432.1247009912124d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 282.5664837606681d + "'", double87 == 282.5664837606681d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 282.5664837606681d + "'", double88 == 282.5664837606681d);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (byte) 10);
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex8 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex9 = complex5.add(complex8);
        code.src.Complex complex10 = complex2.sub(complex9);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        java.lang.String str27 = complex13.toString();
        complex13.imaginary = '#';
        code.src.Complex complex32 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double33 = complex32.abs();
        code.src.Complex complex36 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str37 = complex36.toString();
        code.src.Complex complex38 = complex32.multiply(complex36);
        double double39 = complex36.real;
        code.src.Complex complex42 = new code.src.Complex((double) 100, (double) 10.0f);
        complex42.real = (byte) 1;
        complex42.imaginary = (short) 100;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        double double63 = complex62.real;
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex62.multiply(complex66);
        code.src.Complex complex68 = complex42.multiply(complex62);
        code.src.Complex complex71 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex72 = complex62.multiply(complex71);
        code.src.Complex complex73 = complex36.multiply(complex72);
        code.src.Complex complex74 = complex13.multiply(complex72);
        code.src.Complex complex75 = complex10.multiply(complex72);
        complex10.real = 554.8186781977221d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(100.0,10.0)" + "'", str37, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 100.0d + "'", double39 == 100.0d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 290.95719905143267d + "'", double63 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        java.lang.String str41 = complex15.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 100.0f, (double) (short) -1);
        code.src.Complex complex45 = complex15.add(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 100, (double) 10.0f);
        complex48.imaginary = '4';
        code.src.Complex complex53 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str54 = complex53.toString();
        double double55 = complex53.abs();
        code.src.Complex complex56 = complex48.multiply(complex53);
        code.src.Complex complex57 = complex15.multiply(complex48);
        java.lang.Class<?> wildcardClass58 = complex15.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str41, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(1.0,290.95719905143267)" + "'", str54, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.9589175121722d + "'", double55 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (double) (byte) 10);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (-489.10687533685115d));
        double double3 = complex2.real;
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double7 = complex6.abs();
        code.src.Complex complex10 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str11 = complex10.toString();
        code.src.Complex complex12 = complex6.multiply(complex10);
        complex10.imaginary = (-0.0d);
        code.src.Complex complex15 = complex2.sub(complex10);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 161.68806101217828d + "'", double3 == 161.68806101217828d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(100.0,10.0)" + "'", str11, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex15);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((-0.0d), 0.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 10L, (double) '#');
        double double9 = complex8.imaginary;
        double double10 = complex8.abs();
        code.src.Complex complex13 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex62 = complex45.add(complex61);
        java.lang.String str63 = complex45.toString();
        double double64 = complex45.abs();
        code.src.Complex complex65 = complex29.multiply(complex45);
        code.src.Complex complex66 = complex13.add(complex65);
        code.src.Complex complex67 = complex8.multiply(complex66);
        double double68 = complex66.real;
        code.src.Complex complex69 = complex5.add(complex66);
        code.src.Complex complex72 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex75 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex78 = new code.src.Complex((double) 10L, (double) '#');
        double double79 = complex78.imaginary;
        code.src.Complex complex80 = complex75.multiply(complex78);
        code.src.Complex complex83 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex87 = complex83.multiply(complex86);
        double double88 = complex87.imaginary;
        code.src.Complex complex89 = complex80.multiply(complex87);
        code.src.Complex complex90 = complex72.sub(complex87);
        complex87.real = 213613.9236394847d;
        code.src.Complex complex93 = complex66.add(complex87);
        code.src.Complex complex94 = complex2.add(complex93);
        double double95 = complex94.abs();
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 36.40054944640259d + "'", double10 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str63, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 525.4704025737593d + "'", double64 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + (-106706.9606213186d) + "'", double68 == (-106706.9606213186d));
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 35.0d + "'", double79 == 35.0d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 437.56491210010614d + "'", double88 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 276650.8031134174d + "'", double95 == 276650.8031134174d);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        code.src.Complex complex38 = new code.src.Complex();
        code.src.Complex complex39 = complex37.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        java.lang.String str63 = complex58.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex58.add(complex70);
        code.src.Complex complex72 = complex55.add(complex71);
        code.src.Complex complex73 = new code.src.Complex();
        code.src.Complex complex74 = complex72.add(complex73);
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        double double82 = complex80.imaginary;
        java.lang.String str83 = complex80.toString();
        code.src.Complex complex86 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double87 = complex86.abs();
        double double88 = complex86.real;
        code.src.Complex complex89 = complex80.sub(complex86);
        code.src.Complex complex90 = complex73.sub(complex80);
        code.src.Complex complex91 = complex38.add(complex73);
        complex91.imaginary = (byte) 100;
        code.src.Complex complex94 = complex2.sub(complex91);
        complex91.imaginary = 100;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(10.0,0.0)" + "'", str63, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 43.756491210010616d + "'", double82 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str83, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 52.0d + "'", double87 == 52.0d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 28.09571990514327d + "'", double88 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex94);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        code.src.Complex complex0 = new code.src.Complex();
        code.src.Complex complex3 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex7 = complex3.multiply(complex6);
        java.lang.String str8 = complex3.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex16 = complex3.add(complex15);
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex33 = complex16.add(complex32);
        double double34 = complex33.real;
        code.src.Complex complex35 = complex0.multiply(complex33);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex38.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex68 = complex51.add(complex67);
        java.lang.String str69 = complex51.toString();
        double double70 = complex51.abs();
        code.src.Complex complex71 = complex0.multiply(complex51);
        java.lang.String str72 = complex51.toString();
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 581.9143981028653d + "'", double34 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str69, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str72, "(290.95719905143267,437.56491210010614)");
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex65 = complex48.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex48.sub(complex68);
        code.src.Complex complex74 = complex31.add(complex73);
        code.src.Complex complex75 = complex25.add(complex31);
        complex25.imaginary = 875.1298242002123d;
        double double78 = complex25.real;
        double double79 = complex25.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 10.0d + "'", double78 == 10.0d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 10.0d + "'", double79 == 10.0d);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex16 = new code.src.Complex();
        complex16.real = 1L;
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex52 = complex16.add(complex51);
        double double53 = complex52.real;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex52.sub(complex59);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex59.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex69 = complex64.add(complex68);
        code.src.Complex complex70 = complex14.sub(complex68);
        complex68.imaginary = 242.7106111527617d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 582.9143981028653d + "'", double53 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        code.src.Complex complex2 = new code.src.Complex(282.35849053254026d, 1926.648617074226d);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        code.src.Complex complex2 = new code.src.Complex(2.036599186399486d, 213613.92124332994d);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex16 = new code.src.Complex();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        double double50 = complex49.real;
        code.src.Complex complex51 = complex16.multiply(complex49);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex67.add(complex83);
        java.lang.String str85 = complex67.toString();
        double double86 = complex67.abs();
        code.src.Complex complex87 = complex16.multiply(complex67);
        code.src.Complex complex88 = complex15.add(complex87);
        code.src.Complex complex91 = code.src.Complex.polar(43.756491210010616d, 509250.64491133287d);
        code.src.Complex complex92 = complex87.multiply(complex91);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 581.9143981028653d + "'", double50 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str85, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 525.4704025737593d + "'", double86 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        code.src.Complex complex2 = code.src.Complex.polar((-1120.0d), (-249.54290000761125d));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        double double50 = complex39.real;
        double double51 = complex39.abs();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        double double59 = complex58.imaginary;
        java.lang.String str60 = complex58.toString();
        code.src.Complex complex61 = complex39.multiply(complex58);
        code.src.Complex complex64 = new code.src.Complex(213613.9236394847d, 290.95719905143267d);
        code.src.Complex complex65 = complex39.sub(complex64);
        code.src.Complex complex66 = complex2.add(complex64);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 582.9143981028653d + "'", double50 == 582.9143981028653d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 1051.4948429356753d + "'", double51 == 1051.4948429356753d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 437.56491210010614d + "'", double59 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str60, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex16 = new code.src.Complex();
        complex16.real = 1L;
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex52 = complex16.add(complex51);
        double double53 = complex52.real;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex52.sub(complex59);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex59.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex69 = complex64.add(complex68);
        code.src.Complex complex70 = complex14.sub(complex68);
        double double71 = complex68.imaginary;
        code.src.Complex complex74 = new code.src.Complex(481.32140331011675d, (double) ' ');
        code.src.Complex complex75 = complex68.sub(complex74);
        complex68.real = 21990.294301380844d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 582.9143981028653d + "'", double53 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 35.0d + "'", double71 == 35.0d);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        code.src.Complex complex2 = new code.src.Complex((-1.868831124759214E7d), 105.65474854127304d);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, (-389.10687533685115d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex18.sub(complex38);
        complex38.imaginary = 52.0d;
        complex38.imaginary = 28.09571990514327d;
        complex38.real = 572.0d;
        code.src.Complex complex50 = complex2.add(complex38);
        double double51 = complex50.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 572.0d + "'", double51 == 572.0d);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str8 = complex7.toString();
        code.src.Complex complex11 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex12 = complex7.sub(complex11);
        code.src.Complex complex13 = complex2.sub(complex11);
        double double14 = complex11.abs();
        double double15 = complex11.real;
        complex11.real = 1072.0212734397164d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(100.0,10.0)" + "'", str8, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 582.9143981028653d + "'", double14 == 582.9143981028653d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-489.10687533685115d) + "'", double15 == (-489.10687533685115d));
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        code.src.Complex complex2 = code.src.Complex.polar((double) (-1L), 52.0d);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.0d + "'", double3 == 1.0d);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        code.src.Complex complex2 = new code.src.Complex(1050.9408051475186d, (-272.8614791462894d));
        complex2.imaginary = 939.5499966363205d;
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        code.src.Complex complex2 = code.src.Complex.polar(9071.298242002124d, (double) ' ');
        double double3 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 5002.155884140813d + "'", double3 == 5002.155884140813d);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        code.src.Complex complex2 = new code.src.Complex(481.32140331011675d, (-35.0d));
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex6 = new code.src.Complex();
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex41 = complex6.multiply(complex39);
        double double42 = complex39.abs();
        code.src.Complex complex43 = complex5.sub(complex39);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        complex46.imaginary = 100.0f;
        code.src.Complex complex53 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex58 = complex53.sub(complex57);
        code.src.Complex complex59 = complex46.multiply(complex58);
        java.lang.String str60 = complex58.toString();
        double double61 = complex58.real;
        code.src.Complex complex62 = complex5.add(complex58);
        double double63 = complex62.real;
        code.src.Complex complex64 = complex2.multiply(complex62);
        java.lang.String str65 = complex2.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 581.9143981028653d + "'", double40 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1050.9408051475186d + "'", double42 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(100.0,10.0)" + "'", str54, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str60, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 589.1068753368511d + "'", double61 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 589.1068753368511d + "'", double63 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(481.32140331011675,-35.0)" + "'", str65, "(481.32140331011675,-35.0)");
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        code.src.Complex complex2 = new code.src.Complex(35.0d, 875.1298242002123d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double7 = complex6.abs();
        code.src.Complex complex10 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str11 = complex10.toString();
        code.src.Complex complex12 = complex6.multiply(complex10);
        double double13 = complex10.real;
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        complex16.real = (byte) 1;
        complex16.imaginary = (short) 100;
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex36.multiply(complex40);
        code.src.Complex complex42 = complex16.multiply(complex36);
        code.src.Complex complex45 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        code.src.Complex complex46 = complex36.multiply(complex45);
        code.src.Complex complex47 = complex10.multiply(complex46);
        code.src.Complex complex48 = complex2.multiply(complex46);
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        java.lang.String str72 = complex67.toString();
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        code.src.Complex complex80 = complex67.add(complex79);
        code.src.Complex complex81 = complex64.add(complex80);
        code.src.Complex complex84 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex84.multiply(complex87);
        code.src.Complex complex89 = complex64.sub(complex84);
        complex84.imaginary = 52.0d;
        complex84.imaginary = 290.9589175121722d;
        code.src.Complex complex94 = complex46.multiply(complex84);
        java.lang.String str95 = complex46.toString();
        complex46.real = 1246.4447622874072d;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 875.8294407044641d + "'", double3 == 875.8294407044641d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(100.0,10.0)" + "'", str11, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 290.95719905143267d + "'", double37 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(10.0,0.0)" + "'", str72, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(15118.903072407044,7359.672093492629)" + "'", str95, "(15118.903072407044,7359.672093492629)");
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        code.src.Complex complex2 = code.src.Complex.polar(9.866275920404853d, 119.9377093343606d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex53 = complex2.multiply(complex52);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str57 = complex56.toString();
        code.src.Complex complex60 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double61 = complex60.abs();
        code.src.Complex complex62 = complex56.sub(complex60);
        code.src.Complex complex63 = complex2.multiply(complex60);
        complex63.real = 5002.155884140813d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(1.0,0.0)" + "'", str57, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 10.0d + "'", double61 == 10.0d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex69 = complex52.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex52.sub(complex72);
        java.lang.String str78 = complex52.toString();
        code.src.Complex complex79 = complex35.multiply(complex52);
        code.src.Complex complex82 = code.src.Complex.polar(1051.4948429356753d, 581.9143981028653d);
        complex82.imaginary = (-1);
        code.src.Complex complex87 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex90 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex91 = complex87.multiply(complex90);
        complex91.real = 324.9608082617091d;
        code.src.Complex complex94 = complex82.add(complex91);
        code.src.Complex complex95 = complex79.sub(complex94);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str78, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        code.src.Complex complex2 = new code.src.Complex(0.2324571024365446d, 58.01650108462993d);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex43.real;
        code.src.Complex complex45 = complex6.add(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double49 = complex48.abs();
        double double50 = complex48.real;
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        java.lang.String str74 = complex69.toString();
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex69.add(complex81);
        code.src.Complex complex83 = complex66.add(complex82);
        java.lang.String str84 = complex66.toString();
        double double85 = complex66.abs();
        double double86 = complex66.real;
        code.src.Complex complex87 = complex48.sub(complex66);
        java.lang.String str88 = complex48.toString();
        code.src.Complex complex89 = complex45.multiply(complex48);
        double double90 = complex45.imaginary;
        code.src.Complex complex91 = complex2.multiply(complex45);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(0.2324571024365446,58.01650108462993)" + "'", str3, "(0.2324571024365446,58.01650108462993)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 582.9143981028653d + "'", double44 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 52.0d + "'", double49 == 52.0d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 28.09571990514327d + "'", double50 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(10.0,0.0)" + "'", str74, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str84, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 525.4704025737593d + "'", double85 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 290.95719905143267d + "'", double86 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str88, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 875.1298242002123d + "'", double90 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        code.src.Complex complex2 = new code.src.Complex((-273.44509135195034d), 100.98697676922636d);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        code.src.Complex complex2 = new code.src.Complex(572.0d, (double) 1L);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex10.imaginary;
        double double48 = complex10.imaginary;
        java.lang.String str49 = complex10.toString();
        code.src.Complex complex50 = complex5.sub(complex10);
        code.src.Complex complex51 = complex2.multiply(complex50);
        complex2.imaginary = 317.11773840932915d;
        double double54 = complex2.abs();
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1.0,0.0)" + "'", str49, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 654.0242044556514d + "'", double54 == 654.0242044556514d);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) 0.0f);
        double double3 = complex2.real;
        double double4 = complex2.abs();
        complex2.real = 148.66068747318505d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-317.11773840932915d) + "'", double3 == (-317.11773840932915d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 317.11773840932915d + "'", double4 == 317.11773840932915d);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str7 = complex6.toString();
        code.src.Complex complex8 = complex2.multiply(complex6);
        complex6.real = 35.0d;
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex47.sub(complex54);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex54.add(complex59);
        code.src.Complex complex61 = complex6.multiply(complex60);
        complex6.real = 663.590879631022d;
        complex6.imaginary = 43.756491210010616d;
        java.lang.Class<?> wildcardClass66 = complex6.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(100.0,10.0)" + "'", str7, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex7 = complex2.sub(complex6);
        complex2.real = (-213613.9212426372d);
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex38 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex39 = complex25.multiply(complex38);
        double double40 = complex25.abs();
        java.lang.String str41 = complex25.toString();
        complex25.imaginary = 235.63140523513093d;
        code.src.Complex complex44 = complex2.add(complex25);
        double double45 = complex2.imaginary;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 525.4704025737593d + "'", double40 == 525.4704025737593d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str41, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 280.95719905143267d);
        complex2.real = (-288.4361024143587d);
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        double double21 = complex20.real;
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        double double29 = complex28.imaginary;
        code.src.Complex complex30 = complex20.sub(complex28);
        complex28.imaginary = 0.0d;
        code.src.Complex complex35 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex35.imaginary = 10L;
        double double38 = complex35.real;
        code.src.Complex complex39 = complex28.add(complex35);
        code.src.Complex complex40 = complex2.sub(complex39);
        code.src.Complex complex43 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        complex43.real = 0.0d;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        double double79 = complex61.real;
        code.src.Complex complex82 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex83 = complex61.sub(complex82);
        double double84 = complex82.abs();
        code.src.Complex complex85 = complex43.sub(complex82);
        code.src.Complex complex86 = complex40.sub(complex85);
        complex86.imaginary = 0.1820978992688351d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 290.95719905143267d + "'", double21 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 437.56491210010614d + "'", double29 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 10.0d + "'", double38 == 10.0d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 290.95719905143267d + "'", double79 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        double double22 = complex2.imaginary;
        complex2.real = 0.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 141.4213562373095d + "'", double22 == 141.4213562373095d);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        double double7 = complex2.imaginary;
        double double8 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-317.11773840932915d) + "'", double7 == (-317.11773840932915d));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-317.11773840932915d) + "'", double8 == (-317.11773840932915d));
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) '#');
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = new code.src.Complex((double) 10.0f, (-438.56491210010614d));
        code.src.Complex complex7 = complex2.add(complex6);
        double double8 = complex2.abs();
        java.lang.Class<?> wildcardClass9 = complex2.getClass();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 36.40054944640259d + "'", double8 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.real = 525.4704025737593d;
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        double double15 = complex14.imaginary;
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex18 = complex2.add(complex14);
        double double19 = complex2.imaginary;
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str23 = complex22.toString();
        java.lang.String str24 = complex22.toString();
        java.lang.String str25 = complex22.toString();
        double double26 = complex22.imaginary;
        code.src.Complex complex27 = complex2.add(complex22);
        double double28 = complex2.real;
        code.src.Complex complex29 = new code.src.Complex();
        complex29.real = 1L;
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex64 = complex47.add(complex63);
        code.src.Complex complex65 = complex29.add(complex64);
        double double66 = complex65.real;
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        code.src.Complex complex74 = complex65.sub(complex72);
        complex74.real = 0.0d;
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double80 = complex79.abs();
        double double81 = complex79.real;
        code.src.Complex complex84 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex85 = complex79.multiply(complex84);
        code.src.Complex complex86 = complex74.add(complex79);
        code.src.Complex complex87 = complex2.add(complex79);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 525.4704025737593d + "'", double7 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 437.56491210010614d + "'", double15 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str16, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 280.95719905143267d + "'", double17 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,10.0)" + "'", str23, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(100.0,10.0)" + "'", str24, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(100.0,10.0)" + "'", str25, "(100.0,10.0)");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 525.4704025737593d + "'", double28 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 582.9143981028653d + "'", double66 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 52.0d + "'", double80 == 52.0d);
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 28.09571990514327d + "'", double81 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 28.09571990514327d;
        double double45 = complex35.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 10.0d + "'", double45 == 10.0d);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 9.866275920404853d);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        java.lang.String str40 = complex22.toString();
        code.src.Complex complex43 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex43.imaginary = (short) 0;
        java.lang.String str46 = complex43.toString();
        code.src.Complex complex47 = complex22.sub(complex43);
        code.src.Complex complex48 = complex2.add(complex47);
        double double49 = complex47.real;
        double double50 = complex47.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str40, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 290.95719905143267d + "'", double49 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 525.4704025737593d + "'", double50 == 525.4704025737593d);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        code.src.Complex complex2 = new code.src.Complex(280.95719905143267d, 43.756491210010616d);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 284.34411937270323d + "'", double3 == 284.34411937270323d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 280.95719905143267d + "'", double4 == 280.95719905143267d);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        double double5 = complex2.abs();
        double double6 = complex2.real;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        code.src.Complex complex14 = complex2.multiply(complex9);
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex48 = new code.src.Complex();
        code.src.Complex complex49 = complex47.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        double double57 = complex55.imaginary;
        java.lang.String str58 = complex55.toString();
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double62 = complex61.abs();
        double double63 = complex61.real;
        code.src.Complex complex64 = complex55.sub(complex61);
        code.src.Complex complex65 = complex48.sub(complex55);
        double double66 = complex48.real;
        code.src.Complex complex69 = new code.src.Complex(100.0d, (-1.0d));
        double double70 = complex69.abs();
        code.src.Complex complex71 = complex48.sub(complex69);
        complex71.real = (short) 1;
        code.src.Complex complex74 = complex9.sub(complex71);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-0.0d) + "'", double6 == (-0.0d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 43.756491210010616d + "'", double57 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str58, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 52.0d + "'", double62 == 52.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 28.09571990514327d + "'", double63 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 100.00499987500625d + "'", double70 == 100.00499987500625d);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex74);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.abs();
        double double17 = complex15.real;
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double21 = complex20.abs();
        java.lang.String str22 = complex20.toString();
        code.src.Complex complex23 = complex15.add(complex20);
        code.src.Complex complex26 = new code.src.Complex(939.1298242002123d, 181.33944529425008d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (-1.0d));
        double double30 = complex29.imaginary;
        code.src.Complex complex33 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex36 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex37 = complex33.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10, (double) 10);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex37);
        code.src.Complex complex43 = complex26.add(complex29);
        code.src.Complex complex44 = complex15.add(complex43);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 525.4704025737593d + "'", double16 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 290.95719905143267d + "'", double17 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 52.0d + "'", double21 == 52.0d);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str22, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-43.756491210010616d) + "'", double30 == (-43.756491210010616d));
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        code.src.Complex complex2 = code.src.Complex.polar(354618.7620473047d, (-90.0d));
        double double3 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-158895.31105778556d) + "'", double3 == (-158895.31105778556d));
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str7 = complex6.toString();
        code.src.Complex complex8 = complex2.multiply(complex6);
        double double9 = complex6.real;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        code.src.Complex complex82 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex86 = complex82.multiply(complex85);
        code.src.Complex complex87 = complex62.sub(complex82);
        java.lang.String str88 = complex62.toString();
        code.src.Complex complex89 = complex45.multiply(complex62);
        complex89.real = ' ';
        complex89.imaginary = 1077.733215908709d;
        code.src.Complex complex94 = complex6.multiply(complex89);
        double double95 = complex6.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(100.0,10.0)" + "'", str7, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str88, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 100.0d + "'", double95 == 100.0d);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        double double36 = complex32.abs();
        double double37 = complex32.imaginary;
        double double38 = complex32.imaginary;
        java.lang.Class<?> wildcardClass39 = complex32.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1050.9408051475186d + "'", double36 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 875.1298242002123d + "'", double38 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 10, (double) 1);
        java.lang.String str3 = complex2.toString();
        double double4 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(5.403023058681398,8.414709848078965)" + "'", str3, "(5.403023058681398,8.414709848078965)");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 5.403023058681398d + "'", double4 == 5.403023058681398d);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        code.src.Complex complex2 = new code.src.Complex(907.1298242002123d, (-35.0d));
        code.src.Complex complex5 = code.src.Complex.polar(10.0d, (double) '4');
        double double6 = complex5.imaginary;
        code.src.Complex complex9 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        code.src.Complex complex47 = complex9.add(complex45);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        double double55 = complex53.imaginary;
        java.lang.String str56 = complex53.toString();
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double60 = complex59.abs();
        double double61 = complex59.real;
        code.src.Complex complex62 = complex53.sub(complex59);
        code.src.Complex complex63 = complex45.sub(complex53);
        double double64 = complex45.real;
        code.src.Complex complex65 = complex5.multiply(complex45);
        code.src.Complex complex66 = complex2.add(complex45);
        complex2.real = (-43.756491210010616d);
        complex2.real = (-711.5461720321057d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 9.866275920404853d + "'", double6 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 43.756491210010616d + "'", double55 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str56, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 52.0d + "'", double60 == 52.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 28.09571990514327d + "'", double61 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 581.9143981028653d + "'", double64 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        code.src.Complex complex28 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex29 = complex15.multiply(complex28);
        double double30 = complex15.abs();
        java.lang.String str31 = complex15.toString();
        complex15.imaginary = 235.63140523513093d;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        double double41 = complex40.imaginary;
        java.lang.String str42 = complex40.toString();
        java.lang.String str43 = complex40.toString();
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        java.lang.String str51 = complex46.toString();
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex46.add(complex58);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex76 = complex59.add(complex75);
        java.lang.String str77 = complex59.toString();
        code.src.Complex complex80 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex80.imaginary = (short) 0;
        java.lang.String str83 = complex80.toString();
        code.src.Complex complex84 = complex59.sub(complex80);
        code.src.Complex complex85 = complex40.sub(complex80);
        code.src.Complex complex88 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        complex88.real = 1;
        code.src.Complex complex91 = complex85.multiply(complex88);
        code.src.Complex complex92 = complex15.sub(complex88);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 525.4704025737593d + "'", double30 == 525.4704025737593d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str31, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 437.56491210010614d + "'", double41 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str42, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str43, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(10.0,0.0)" + "'", str51, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str77, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(-0.0,0.0)" + "'", str83, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        code.src.Complex complex2 = new code.src.Complex(491.0602468381958d, 432.1247009912124d);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        double double46 = complex2.imaginary;
        complex2.imaginary = (byte) 0;
        java.lang.String str49 = complex2.toString();
        code.src.Complex complex52 = code.src.Complex.polar(43.756491210010616d, 509250.64491133287d);
        double double53 = complex52.real;
        code.src.Complex complex54 = complex2.add(complex52);
        double double55 = complex54.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-317.11773840932915d) + "'", double46 == (-317.11773840932915d));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 2.036599186399486d + "'", double53 == 2.036599186399486d);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 12.036599186399485d + "'", double55 == 12.036599186399485d);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex43 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex44 = complex40.sub(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        complex76.real = (-288.4361024143587d);
        code.src.Complex complex82 = new code.src.Complex(525.4704025737593d, 0.0d);
        code.src.Complex complex83 = complex76.add(complex82);
        code.src.Complex complex84 = complex40.add(complex82);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        double double65 = complex54.imaginary;
        code.src.Complex complex66 = complex36.multiply(complex54);
        code.src.Complex complex69 = new code.src.Complex(52.0d, 430.3716436914759d);
        code.src.Complex complex70 = complex36.sub(complex69);
        double double71 = complex69.abs();
        double double72 = complex69.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 437.56491210010614d + "'", double65 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 433.501732053867d + "'", double71 == 433.501732053867d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        code.src.Complex complex2 = code.src.Complex.polar(1072.0212734397164d, 3171.1773840932915d);
        code.src.Complex complex5 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 100, (double) 10.0f);
        complex8.real = (byte) 1;
        complex8.imaginary = (short) 100;
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        double double50 = complex13.imaginary;
        double double51 = complex13.imaginary;
        java.lang.String str52 = complex13.toString();
        code.src.Complex complex53 = complex8.sub(complex13);
        code.src.Complex complex56 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex66 = complex56.sub(complex62);
        code.src.Complex complex69 = new code.src.Complex((double) 100, (double) 10.0f);
        complex69.real = (byte) 1;
        code.src.Complex complex72 = complex62.multiply(complex69);
        code.src.Complex complex73 = complex53.sub(complex72);
        code.src.Complex complex74 = complex5.multiply(complex72);
        code.src.Complex complex75 = complex2.multiply(complex72);
        code.src.Complex complex78 = code.src.Complex.polar((double) (short) 10, 35.0d);
        code.src.Complex complex79 = complex72.multiply(complex78);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(1.0,0.0)" + "'", str52, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        complex6.imaginary = 572.0d;
        complex6.real = (byte) 0;
        complex6.real = 1072.0212734397164d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        complex2.imaginary = (-1.0f);
        code.src.Complex complex11 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = new code.src.Complex();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        java.lang.String str77 = complex72.toString();
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        code.src.Complex complex85 = complex72.add(complex84);
        code.src.Complex complex86 = complex69.add(complex85);
        double double87 = complex86.real;
        code.src.Complex complex88 = complex53.multiply(complex86);
        code.src.Complex complex89 = complex27.multiply(complex86);
        code.src.Complex complex90 = complex11.sub(complex89);
        double double91 = complex89.real;
        double double92 = complex89.abs();
        code.src.Complex complex93 = complex2.sub(complex89);
        double double94 = complex93.real;
        complex93.real = 939.1298242002123d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "(10.0,0.0)" + "'", str77, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 581.9143981028653d + "'", double87 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-213613.9212426372d) + "'", double91 == (-213613.9212426372d));
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 552238.2879620573d + "'", double92 == 552238.2879620573d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 213623.9212426372d + "'", double94 == 213623.9212426372d);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        double double29 = complex18.imaginary;
        code.src.Complex complex30 = complex2.multiply(complex18);
        java.lang.Class<?> wildcardClass31 = complex18.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 437.56491210010614d + "'", double29 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 10, (double) (-1));
        code.src.Complex complex5 = new code.src.Complex(87.48639198643185d, (-35.0d));
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex5.toString();
        code.src.Complex complex10 = code.src.Complex.polar(1050.9408051475186d, (double) 0L);
        complex10.real = 663.590879631022d;
        code.src.Complex complex15 = new code.src.Complex(213613.9236394847d, (double) 10L);
        code.src.Complex complex16 = complex10.sub(complex15);
        java.lang.String str17 = complex16.toString();
        double double18 = complex16.real;
        code.src.Complex complex19 = complex5.multiply(complex16);
        double double20 = complex19.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(87.48639198643185,-35.0)" + "'", str7, "(87.48639198643185,-35.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(-212950.33275985369,-10.0)" + "'", str17, "(-212950.33275985369,-10.0)");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-212950.33275985369d) + "'", double18 == (-212950.33275985369d));
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.863060628546966E7d) + "'", double20 == (-1.863060628546966E7d));
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        double double65 = complex54.imaginary;
        code.src.Complex complex66 = complex36.multiply(complex54);
        java.lang.Class<?> wildcardClass67 = complex54.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 437.56491210010614d + "'", double65 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double12 = complex11.abs();
        double double13 = complex11.real;
        code.src.Complex complex14 = complex5.sub(complex11);
        java.lang.String str15 = complex14.toString();
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double19 = complex18.abs();
        java.lang.String str20 = complex18.toString();
        complex18.imaginary = 'a';
        code.src.Complex complex23 = complex14.add(complex18);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex56 = complex39.add(complex55);
        double double57 = complex39.real;
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex61 = complex39.sub(complex60);
        code.src.Complex complex62 = complex18.add(complex39);
        java.lang.String str63 = complex18.toString();
        code.src.Complex complex66 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str67 = complex66.toString();
        java.lang.String str68 = complex66.toString();
        java.lang.String str69 = complex66.toString();
        code.src.Complex complex72 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        double double80 = complex78.imaginary;
        java.lang.String str81 = complex78.toString();
        code.src.Complex complex82 = complex72.sub(complex78);
        code.src.Complex complex85 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex85.real = 875.1298242002123d;
        complex85.imaginary = (-317.11773840932915d);
        complex85.real = 0.0d;
        code.src.Complex complex92 = complex82.sub(complex85);
        code.src.Complex complex93 = complex66.sub(complex92);
        code.src.Complex complex96 = new code.src.Complex(309.0529189565759d, 112.71202242884297d);
        code.src.Complex complex97 = complex92.multiply(complex96);
        code.src.Complex complex98 = complex18.add(complex96);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 28.09571990514327d + "'", double13 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(0.0,0.0)" + "'", str15, "(0.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str20, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 290.95719905143267d + "'", double57 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(28.09571990514327,97.0)" + "'", str63, "(28.09571990514327,97.0)");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(100.0,10.0)" + "'", str67, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(100.0,10.0)" + "'", str68, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(100.0,10.0)" + "'", str69, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 43.756491210010616d + "'", double80 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str81, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertNotNull(complex98);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        code.src.Complex complex2 = code.src.Complex.polar((-13960.636243851644d), (-158895.31105778556d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        code.src.Complex complex2 = new code.src.Complex(48.09571990514327d, 509250.64491133287d);
        code.src.Complex complex5 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex8 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex9 = complex5.add(complex8);
        code.src.Complex complex10 = complex2.sub(complex8);
        double double11 = complex8.real;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 290.95719905143267d + "'", double11 == 290.95719905143267d);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        double double18 = complex14.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str16, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 589.1068753368511d + "'", double17 == 589.1068753368511d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 327.11773840932915d + "'", double18 == 327.11773840932915d);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 525.4704025737593d);
        complex2.real = 589.1068753368511d;
        code.src.Complex complex7 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double8 = complex7.abs();
        code.src.Complex complex9 = new code.src.Complex();
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex9.multiply(complex42);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        java.lang.String str52 = complex47.toString();
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        code.src.Complex complex60 = complex47.add(complex59);
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        java.lang.String str68 = complex63.toString();
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        code.src.Complex complex76 = complex63.add(complex75);
        code.src.Complex complex77 = complex60.add(complex76);
        java.lang.String str78 = complex60.toString();
        double double79 = complex60.abs();
        code.src.Complex complex80 = complex9.multiply(complex60);
        code.src.Complex complex83 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex83.imaginary = (short) 0;
        complex83.real = 525.4704025737593d;
        double double88 = complex83.real;
        code.src.Complex complex89 = complex60.add(complex83);
        double double90 = complex60.abs();
        code.src.Complex complex93 = code.src.Complex.polar((double) (byte) 10, 10.0d);
        code.src.Complex complex94 = complex60.add(complex93);
        double double95 = complex94.imaginary;
        code.src.Complex complex96 = complex7.add(complex94);
        complex94.imaginary = (-363960.5478434686d);
        code.src.Complex complex99 = complex2.multiply(complex94);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1018.3729221500101d + "'", double8 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 581.9143981028653d + "'", double43 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(10.0,0.0)" + "'", str52, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(10.0,0.0)" + "'", str68, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str78, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 525.4704025737593d + "'", double79 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 525.4704025737593d + "'", double88 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 525.4704025737593d + "'", double90 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 432.1247009912124d + "'", double95 == 432.1247009912124d);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        complex32.real = 10;
        java.lang.Class<?> wildcardClass37 = complex32.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex39.imaginary = (short) 0;
        complex39.imaginary = 100.0f;
        code.src.Complex complex46 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str47 = complex46.toString();
        code.src.Complex complex50 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex51 = complex46.sub(complex50);
        code.src.Complex complex52 = complex39.multiply(complex51);
        java.lang.String str53 = complex51.toString();
        code.src.Complex complex54 = complex2.sub(complex51);
        complex2.imaginary = (byte) -1;
        double double57 = complex2.imaginary;
        complex2.real = (-2.1786157730571607E8d);
        double double60 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(100.0,10.0)" + "'", str47, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str53, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + (-1.0d) + "'", double57 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + (-1.0d) + "'", double60 == (-1.0d));
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        code.src.Complex complex2 = code.src.Complex.polar((-288.4361024143587d), 520.0d);
        code.src.Complex complex5 = code.src.Complex.polar((-0.5440211108893698d), 9.866275920404853d);
        double double6 = complex5.imaginary;
        code.src.Complex complex7 = complex2.multiply(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.2324571024365446d + "'", double6 == 0.2324571024365446d);
        org.junit.Assert.assertNotNull(complex7);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.imaginary = 'a';
        code.src.Complex complex11 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        java.lang.String str12 = complex11.toString();
        code.src.Complex complex15 = code.src.Complex.polar((double) (short) 10, (double) 1.0f);
        double double16 = complex15.abs();
        code.src.Complex complex17 = complex11.sub(complex15);
        code.src.Complex complex18 = complex6.add(complex11);
        java.lang.String str19 = complex6.toString();
        complex6.imaginary = 214489.84591642267d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(1.0,0.0)" + "'", str12, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(-198.14967628541848,97.0)" + "'", str19, "(-198.14967628541848,97.0)");
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 280.95719905143267d);
        complex2.real = (-288.4361024143587d);
        code.src.Complex complex7 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double8 = complex7.abs();
        code.src.Complex complex11 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str12 = complex11.toString();
        code.src.Complex complex13 = complex7.multiply(complex11);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        double double21 = complex19.imaginary;
        double double22 = complex19.imaginary;
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex62 = complex45.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        code.src.Complex complex70 = complex45.sub(complex65);
        code.src.Complex complex71 = complex28.add(complex70);
        double double72 = complex71.abs();
        double double73 = complex71.imaginary;
        complex71.imaginary = 1L;
        code.src.Complex complex76 = complex19.sub(complex71);
        double double77 = complex76.real;
        code.src.Complex complex78 = complex7.multiply(complex76);
        code.src.Complex complex79 = complex2.sub(complex7);
        double double80 = complex79.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(100.0,10.0)" + "'", str12, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 43.756491210010616d + "'", double21 == 43.756491210010616d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 43.756491210010616d + "'", double22 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 572.0d + "'", double72 == 572.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 481.32140331011675d + "'", double73 == 481.32140331011675d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + (-280.95719905143267d) + "'", double77 == (-280.95719905143267d));
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + (-0.0d) + "'", double80 == (-0.0d));
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex7 = complex2.sub(complex6);
        complex6.imaginary = 437.56491210010614d;
        java.lang.String str10 = complex6.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(-489.10687533685115,437.56491210010614)" + "'", str10, "(-489.10687533685115,437.56491210010614)");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        code.src.Complex complex2 = new code.src.Complex(320.1223055909404d, 43.75649121001061d);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        code.src.Complex complex2 = new code.src.Complex(293.2270309501752d, 14834.400624071903d);
        double double3 = complex2.abs();
        code.src.Complex complex6 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex6.real = 582.9143981028653d;
        java.lang.String str9 = complex6.toString();
        code.src.Complex complex10 = complex2.add(complex6);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 14837.298405273943d + "'", double3 == 14837.298405273943d);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(582.9143981028653,43.756491210010616)" + "'", str9, "(582.9143981028653,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex10);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.real;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        double double24 = complex23.imaginary;
        code.src.Complex complex25 = complex15.sub(complex23);
        complex23.imaginary = 0.0d;
        code.src.Complex complex30 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex41.real = 10;
        code.src.Complex complex44 = complex33.multiply(complex41);
        java.lang.String str45 = complex33.toString();
        code.src.Complex complex46 = complex30.sub(complex33);
        code.src.Complex complex47 = complex23.multiply(complex33);
        java.lang.Class<?> wildcardClass48 = complex47.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 290.95719905143267d + "'", double16 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 437.56491210010614d + "'", double24 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, 52.0d);
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-47.42334105152451,287.0664006869592)" + "'", str3, "(-47.42334105152451,287.0664006869592)");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex15.real = 875.1298242002123d;
        complex15.imaginary = (-317.11773840932915d);
        complex15.real = 0.0d;
        code.src.Complex complex22 = complex12.sub(complex15);
        double double23 = complex12.imaginary;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 53.243508789989384d + "'", double23 == 53.243508789989384d);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        code.src.Complex complex2 = new code.src.Complex((-0.0d), 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, (double) '#');
        double double6 = complex5.imaginary;
        double double7 = complex5.abs();
        code.src.Complex complex10 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex59 = complex42.add(complex58);
        java.lang.String str60 = complex42.toString();
        double double61 = complex42.abs();
        code.src.Complex complex62 = complex26.multiply(complex42);
        code.src.Complex complex63 = complex10.add(complex62);
        code.src.Complex complex64 = complex5.multiply(complex63);
        double double65 = complex63.real;
        code.src.Complex complex66 = complex2.add(complex63);
        code.src.Complex complex69 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex72 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex75 = new code.src.Complex((double) 10L, (double) '#');
        double double76 = complex75.imaginary;
        code.src.Complex complex77 = complex72.multiply(complex75);
        code.src.Complex complex80 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex83 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex84 = complex80.multiply(complex83);
        double double85 = complex84.imaginary;
        code.src.Complex complex86 = complex77.multiply(complex84);
        code.src.Complex complex87 = complex69.sub(complex84);
        complex84.real = 213613.9236394847d;
        code.src.Complex complex90 = complex63.add(complex84);
        complex90.imaginary = 214489.84591642267d;
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 35.0d + "'", double6 == 35.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 36.40054944640259d + "'", double7 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str60, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 525.4704025737593d + "'", double61 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-106706.9606213186d) + "'", double65 == (-106706.9606213186d));
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 35.0d + "'", double76 == 35.0d);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 437.56491210010614d + "'", double85 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex90);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        double double16 = complex15.abs();
        code.src.Complex complex19 = code.src.Complex.polar(141.4213562373095d, (double) 10.0f);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        complex26.imaginary = 572.0d;
        complex26.real = (byte) 0;
        code.src.Complex complex32 = complex19.sub(complex26);
        code.src.Complex complex33 = complex15.add(complex26);
        double double34 = complex26.real;
        java.lang.String str35 = complex26.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 525.4704025737593d + "'", double16 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(0.0,572.0)" + "'", str35, "(0.0,572.0)");
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex(10.0d, 875.1298242002123d);
        code.src.Complex complex8 = complex2.multiply(complex7);
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex24.sub(complex44);
        code.src.Complex complex50 = new code.src.Complex();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        java.lang.String str74 = complex69.toString();
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex69.add(complex81);
        code.src.Complex complex83 = complex66.add(complex82);
        double double84 = complex83.real;
        code.src.Complex complex85 = complex50.multiply(complex83);
        code.src.Complex complex86 = complex24.multiply(complex83);
        code.src.Complex complex89 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        double double90 = complex89.imaginary;
        code.src.Complex complex91 = complex83.add(complex89);
        double double92 = complex91.real;
        code.src.Complex complex93 = complex8.multiply(complex91);
        code.src.Complex complex96 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex97 = complex93.sub(complex96);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(10.0,0.0)" + "'", str74, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 581.9143981028653d + "'", double84 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 437.56491210010614d + "'", double90 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 625.6708893128759d + "'", double92 == 625.6708893128759d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex97);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        code.src.Complex complex2 = new code.src.Complex(582.9143981028653d, 663.590879631022d);
        double double3 = complex2.real;
        code.src.Complex complex6 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = new code.src.Complex();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        java.lang.String str56 = complex51.toString();
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        code.src.Complex complex64 = complex51.add(complex63);
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        java.lang.String str72 = complex67.toString();
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        code.src.Complex complex80 = complex67.add(complex79);
        code.src.Complex complex81 = complex64.add(complex80);
        double double82 = complex81.real;
        code.src.Complex complex83 = complex48.multiply(complex81);
        code.src.Complex complex84 = complex22.multiply(complex81);
        code.src.Complex complex85 = complex6.sub(complex84);
        java.lang.String str86 = complex6.toString();
        double double87 = complex6.real;
        code.src.Complex complex88 = complex2.multiply(complex6);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 582.9143981028653d + "'", double3 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(10.0,0.0)" + "'", str56, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(10.0,0.0)" + "'", str72, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 581.9143981028653d + "'", double82 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "(100.0,10.0)" + "'", str86, "(100.0,10.0)");
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex50.abs();
        double double70 = complex50.abs();
        complex50.real = (byte) 100;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 525.4704025737593d + "'", double69 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 525.4704025737593d + "'", double70 == 525.4704025737593d);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        double double36 = complex32.abs();
        double double37 = complex32.imaginary;
        code.src.Complex complex40 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex41 = complex32.sub(complex40);
        complex32.imaginary = (-10971.653261183294d);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1050.9408051475186d + "'", double36 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex41);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        double double29 = complex2.imaginary;
        double double30 = complex2.real;
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 100.0d + "'", double29 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 1.0d + "'", double30 == 1.0d);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        complex2.real = (-101.0d);
        double double52 = complex2.abs();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 110.07102490215914d + "'", double52 == 110.07102490215914d);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) 10, (double) (-1));
        code.src.Complex complex5 = new code.src.Complex(87.48639198643185d, (-35.0d));
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex7 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex8 = complex2.add(complex7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        code.src.Complex complex15 = new code.src.Complex((double) 100, (double) 10.0f);
        complex15.real = (byte) 1;
        code.src.Complex complex18 = complex8.multiply(complex15);
        double double19 = complex15.real;
        java.lang.Class<?> wildcardClass20 = complex15.getClass();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex61.sub(complex81);
        double double87 = complex86.imaginary;
        complex86.real = 290.95719905143267d;
        java.lang.String str90 = complex86.toString();
        code.src.Complex complex91 = complex45.sub(complex86);
        complex45.real = 1091.0075601938674d;
        complex45.real = 119.9377093343606d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 437.56491210010614d + "'", double87 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str90, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        code.src.Complex complex2 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double10 = complex9.imaginary;
        code.src.Complex complex11 = complex5.add(complex9);
        code.src.Complex complex12 = new code.src.Complex();
        complex12.real = 1L;
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex48 = complex12.add(complex47);
        code.src.Complex complex49 = complex9.sub(complex12);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        java.lang.String str73 = complex59.toString();
        code.src.Complex complex74 = complex56.add(complex59);
        code.src.Complex complex75 = complex49.add(complex74);
        code.src.Complex complex78 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.add(complex81);
        code.src.Complex complex83 = complex49.sub(complex78);
        complex78.real = 46.219870416765744d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        double double46 = complex2.imaginary;
        complex2.imaginary = (byte) 0;
        complex2.real = 90.07221257685238d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-317.11773840932915d) + "'", double46 == (-317.11773840932915d));
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        code.src.Complex complex2 = code.src.Complex.polar((-0.0d), (-4.403023058681398d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex68.abs();
        code.src.Complex complex72 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex72.imaginary = (short) 0;
        complex72.imaginary = 100.0f;
        code.src.Complex complex77 = complex68.multiply(complex72);
        complex72.imaginary = 0.0d;
        java.lang.String str80 = complex72.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "(-0.0,0.0)" + "'", str80, "(-0.0,0.0)");
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        code.src.Complex complex2 = new code.src.Complex(35.014282800023196d, (-54.40211108893698d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        java.lang.String str45 = complex40.toString();
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        code.src.Complex complex53 = complex40.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        code.src.Complex complex70 = complex53.add(complex69);
        code.src.Complex complex71 = new code.src.Complex();
        code.src.Complex complex72 = complex70.add(complex71);
        code.src.Complex complex75 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex78 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex79 = complex75.multiply(complex78);
        double double80 = complex78.imaginary;
        java.lang.String str81 = complex78.toString();
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double85 = complex84.abs();
        double double86 = complex84.real;
        code.src.Complex complex87 = complex78.sub(complex84);
        code.src.Complex complex88 = complex71.sub(complex78);
        code.src.Complex complex89 = complex36.add(complex71);
        double double90 = complex89.real;
        double double91 = complex89.real;
        code.src.Complex complex92 = complex2.sub(complex89);
        code.src.Complex complex95 = new code.src.Complex((double) 10L, (double) 1);
        code.src.Complex complex96 = complex89.sub(complex95);
        double double97 = complex89.abs();
        double double98 = complex89.real;
        java.lang.String str99 = complex89.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "(10.0,0.0)" + "'", str45, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 43.756491210010616d + "'", double80 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str81, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 52.0d + "'", double85 == 52.0d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 28.09571990514327d + "'", double86 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 0.0d + "'", double98 == 0.0d);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "(0.0,0.0)" + "'", str99, "(0.0,0.0)");
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, (double) (short) -1);
        complex2.imaginary = (short) 100;
        code.src.Complex complex7 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex10 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        double double48 = complex47.real;
        code.src.Complex complex49 = complex10.add(complex47);
        code.src.Complex complex50 = complex7.multiply(complex49);
        double double51 = complex7.imaginary;
        code.src.Complex complex54 = code.src.Complex.polar(1.4142135623730951d, 213623.9212426372d);
        code.src.Complex complex55 = complex7.add(complex54);
        code.src.Complex complex56 = complex2.multiply(complex7);
        java.lang.Class<?> wildcardClass57 = complex7.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 582.9143981028653d + "'", double48 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-317.11773840932915d) + "'", double51 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, (-272.8614791462894d));
        code.src.Complex complex5 = code.src.Complex.polar(100.00499987500625d, 8.414709848078965d);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-62.41366882039954d) + "'", double7 == (-62.41366882039954d));
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex61.sub(complex81);
        double double87 = complex86.imaginary;
        complex86.real = 290.95719905143267d;
        java.lang.String str90 = complex86.toString();
        code.src.Complex complex91 = complex45.sub(complex86);
        complex45.real = 1091.0075601938674d;
        complex45.imaginary = 0.0d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 437.56491210010614d + "'", double87 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str90, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex91);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        code.src.Complex complex2 = new code.src.Complex(922.8939813892761d, (-581.9143981028653d));
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex9.imaginary;
        java.lang.String str11 = complex9.toString();
        double double12 = complex9.real;
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double16 = complex15.abs();
        java.lang.String str17 = complex15.toString();
        code.src.Complex complex18 = complex9.sub(complex15);
        code.src.Complex complex21 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex23 = complex2.add(complex21);
        code.src.Complex complex26 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str27 = complex26.toString();
        java.lang.String str28 = complex26.toString();
        java.lang.String str29 = complex26.toString();
        code.src.Complex complex32 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        double double40 = complex38.imaginary;
        java.lang.String str41 = complex38.toString();
        code.src.Complex complex42 = complex32.sub(complex38);
        code.src.Complex complex45 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex45.real = 875.1298242002123d;
        complex45.imaginary = (-317.11773840932915d);
        complex45.real = 0.0d;
        code.src.Complex complex52 = complex42.sub(complex45);
        code.src.Complex complex53 = complex26.sub(complex52);
        double double54 = complex53.abs();
        double double55 = complex53.abs();
        code.src.Complex complex56 = complex21.sub(complex53);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 437.56491210010614d + "'", double10 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str11, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 280.95719905143267d + "'", double12 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 52.0d + "'", double16 == 52.0d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str17, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(100.0,10.0)" + "'", str27, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(100.0,10.0)" + "'", str28, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(100.0,10.0)" + "'", str29, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 43.756491210010616d + "'", double40 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str41, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 361.4548352976297d + "'", double54 == 361.4548352976297d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 361.4548352976297d + "'", double55 == 361.4548352976297d);
        org.junit.Assert.assertNotNull(complex56);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        complex40.real = 291.12899491437645d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex46.imaginary;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double53 = complex52.abs();
        double double54 = complex52.real;
        code.src.Complex complex55 = complex46.sub(complex52);
        code.src.Complex complex56 = complex38.sub(complex46);
        code.src.Complex complex57 = new code.src.Complex();
        complex57.real = 1L;
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        java.lang.String str67 = complex62.toString();
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        code.src.Complex complex75 = complex62.add(complex74);
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        java.lang.String str83 = complex78.toString();
        code.src.Complex complex86 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex89 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex90 = complex86.multiply(complex89);
        code.src.Complex complex91 = complex78.add(complex90);
        code.src.Complex complex92 = complex75.add(complex91);
        code.src.Complex complex93 = complex57.add(complex92);
        java.lang.String str94 = complex57.toString();
        code.src.Complex complex95 = complex46.sub(complex57);
        double double96 = complex95.imaginary;
        complex95.real = 553.8186781977221d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 43.756491210010616d + "'", double48 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str49, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(10.0,0.0)" + "'", str67, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(10.0,0.0)" + "'", str83, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "(1.0,0.0)" + "'", str94, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 43.756491210010616d + "'", double96 == 43.756491210010616d);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.imaginary = 'a';
        double double9 = complex6.real;
        java.lang.String str10 = complex6.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-198.14967628541848d) + "'", double9 == (-198.14967628541848d));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(-198.14967628541848,97.0)" + "'", str10, "(-198.14967628541848,97.0)");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        code.src.Complex complex2 = code.src.Complex.polar((-28004.154374406793d), 243.39291758796492d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        code.src.Complex complex2 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        java.lang.String str3 = complex2.toString();
        double double4 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(-6.733935704569432,27.276795759674354)" + "'", str3, "(-6.733935704569432,27.276795759674354)");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-6.733935704569432d) + "'", double4 == (-6.733935704569432d));
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (double) (short) 10);
        double double3 = complex2.imaginary;
        double double4 = complex2.abs();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.4987562112089d + "'", double4 == 100.4987562112089d);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = code.src.Complex.polar(445.65251212240173d, 525.4704025737593d);
        code.src.Complex complex8 = complex2.multiply(complex7);
        complex8.real = 906.2883532154044d;
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex13.real = 582.9143981028653d;
        code.src.Complex complex18 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        code.src.Complex complex19 = complex13.multiply(complex18);
        code.src.Complex complex20 = complex8.sub(complex18);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        complex2.real = 9.866275920404853d;
        code.src.Complex complex46 = code.src.Complex.polar(875.8294407044641d, 104.0d);
        code.src.Complex complex47 = complex2.multiply(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        java.lang.String str71 = complex66.toString();
        code.src.Complex complex74 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex77 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex78 = complex74.multiply(complex77);
        code.src.Complex complex79 = complex66.add(complex78);
        code.src.Complex complex80 = complex63.add(complex79);
        code.src.Complex complex81 = new code.src.Complex();
        code.src.Complex complex82 = complex80.add(complex81);
        double double83 = complex80.imaginary;
        double double84 = complex80.abs();
        double double85 = complex80.imaginary;
        double double86 = complex80.imaginary;
        code.src.Complex complex87 = complex46.multiply(complex80);
        java.lang.Class<?> wildcardClass88 = complex46.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 875.1298242002123d + "'", double83 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 1050.9408051475186d + "'", double84 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 875.1298242002123d + "'", double85 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 875.1298242002123d + "'", double86 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        code.src.Complex complex2 = new code.src.Complex(88.75649121001061d, 52.0d);
        complex2.real = 8243.654474996218d;
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, 100.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        double double30 = complex2.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 141.4213562373095d + "'", double30 == 141.4213562373095d);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        code.src.Complex complex2 = code.src.Complex.polar(213613.9236394847d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex(1.0d, (double) ' ');
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar((double) ' ', 445.5830705563102d);
        code.src.Complex complex10 = new code.src.Complex();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        java.lang.String str18 = complex13.toString();
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        code.src.Complex complex26 = complex13.add(complex25);
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        java.lang.String str34 = complex29.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex42 = complex29.add(complex41);
        code.src.Complex complex43 = complex26.add(complex42);
        double double44 = complex43.real;
        code.src.Complex complex45 = complex10.multiply(complex43);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        java.lang.String str79 = complex61.toString();
        double double80 = complex61.abs();
        code.src.Complex complex81 = complex10.multiply(complex61);
        double double82 = complex61.imaginary;
        java.lang.String str83 = complex61.toString();
        code.src.Complex complex84 = complex9.add(complex61);
        java.lang.String str85 = complex9.toString();
        double double86 = complex9.real;
        code.src.Complex complex87 = complex2.add(complex9);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(10.0,0.0)" + "'", str34, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 581.9143981028653d + "'", double44 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str79, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 525.4704025737593d + "'", double80 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 437.56491210010614d + "'", double82 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(27.721009635482222,-15.985794468511779)" + "'", str85, "(27.721009635482222,-15.985794468511779)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 27.721009635482222d + "'", double86 == 27.721009635482222d);
        org.junit.Assert.assertNotNull(complex87);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) 10L);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex8 = new code.src.Complex((double) 10L, (double) '#');
        double double9 = complex8.imaginary;
        code.src.Complex complex10 = complex5.multiply(complex8);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        double double18 = complex17.imaginary;
        code.src.Complex complex19 = complex10.multiply(complex17);
        code.src.Complex complex20 = complex2.sub(complex17);
        complex17.real = 213613.9236394847d;
        double double23 = complex17.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 437.56491210010614d + "'", double18 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 213614.37179110374d + "'", double23 == 213614.37179110374d);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        code.src.Complex complex41 = new code.src.Complex();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        double double75 = complex74.real;
        code.src.Complex complex76 = complex41.multiply(complex74);
        code.src.Complex complex77 = complex15.multiply(complex74);
        complex77.imaginary = 663.590879631022d;
        java.lang.Class<?> wildcardClass80 = complex77.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 581.9143981028653d + "'", double75 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex16 = new code.src.Complex();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        double double50 = complex49.real;
        code.src.Complex complex51 = complex16.multiply(complex49);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex67.add(complex83);
        java.lang.String str85 = complex67.toString();
        double double86 = complex67.abs();
        code.src.Complex complex87 = complex16.multiply(complex67);
        code.src.Complex complex88 = complex15.add(complex87);
        code.src.Complex complex91 = new code.src.Complex(525.4704025737593d, (double) (byte) 100);
        complex91.real = 582.9143981028653d;
        code.src.Complex complex94 = complex15.add(complex91);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 581.9143981028653d + "'", double50 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str85, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 525.4704025737593d + "'", double86 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex94);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        code.src.Complex complex2 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = code.src.Complex.polar((double) 'a', (double) 1L);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        double double14 = complex12.real;
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        java.lang.String str48 = complex30.toString();
        double double49 = complex30.abs();
        double double50 = complex30.real;
        code.src.Complex complex51 = complex12.sub(complex30);
        code.src.Complex complex52 = complex9.sub(complex51);
        code.src.Complex complex53 = complex2.add(complex9);
        double double54 = complex9.real;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 28.09571990514327d + "'", double14 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str48, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 525.4704025737593d + "'", double49 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 290.95719905143267d + "'", double50 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 52.409323669209556d + "'", double54 == 52.409323669209556d);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        java.lang.String str4 = complex2.toString();
        java.lang.String str5 = complex2.toString();
        code.src.Complex complex8 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        double double16 = complex14.imaginary;
        java.lang.String str17 = complex14.toString();
        code.src.Complex complex18 = complex8.sub(complex14);
        code.src.Complex complex21 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex21.real = 875.1298242002123d;
        complex21.imaginary = (-317.11773840932915d);
        complex21.real = 0.0d;
        code.src.Complex complex28 = complex18.sub(complex21);
        code.src.Complex complex29 = complex2.sub(complex28);
        code.src.Complex complex32 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex33 = complex28.multiply(complex32);
        java.lang.String str34 = complex33.toString();
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex77 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex80 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex81 = complex77.multiply(complex80);
        code.src.Complex complex82 = complex57.sub(complex77);
        code.src.Complex complex83 = complex40.add(complex82);
        double double84 = complex83.abs();
        complex83.real = 10.0d;
        double double87 = complex83.abs();
        double double88 = complex83.imaginary;
        code.src.Complex complex89 = complex33.multiply(complex83);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(100.0,10.0)" + "'", str4, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(100.0,10.0)" + "'", str5, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 43.756491210010616d + "'", double16 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str17, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "(-3771.283602645884,105.77277869904867)" + "'", str34, "(-3771.283602645884,105.77277869904867)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 572.0d + "'", double84 == 572.0d);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 481.42527279362895d + "'", double87 == 481.42527279362895d);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 481.32140331011675d + "'", double88 == 481.32140331011675d);
        org.junit.Assert.assertNotNull(complex89);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        double double36 = complex32.abs();
        double double37 = complex32.imaginary;
        double double38 = complex32.imaginary;
        code.src.Complex complex41 = new code.src.Complex((-906.2883532154044d), 9.013372407959515d);
        code.src.Complex complex42 = complex32.sub(complex41);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 1050.9408051475186d + "'", double36 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 875.1298242002123d + "'", double38 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex42);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        code.src.Complex complex2 = new code.src.Complex(9766.154297888374d, 581.9143981028653d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str6 = complex5.toString();
        double double7 = complex5.abs();
        complex5.real = 1051.4948429356753d;
        code.src.Complex complex10 = complex2.sub(complex5);
        double double11 = complex2.abs();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(1.0,290.95719905143267)" + "'", str6, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 290.9589175121722d + "'", double7 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 9783.475565303108d + "'", double11 == 9783.475565303108d);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.imaginary;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 875.1298242002123d + "'", double37 == 875.1298242002123d);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        code.src.Complex complex2 = new code.src.Complex(0.0d, 708268.0426747819d);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        code.src.Complex complex2 = code.src.Complex.polar(491.60074581353115d, 865.1298242002123d);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 491.6007458135312d + "'", double3 == 491.6007458135312d);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        code.src.Complex complex2 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex5 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex6 = complex2.add(complex5);
        double double7 = complex6.imaginary;
        double double8 = complex6.abs();
        code.src.Complex complex11 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str12 = complex11.toString();
        code.src.Complex complex15 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex16 = complex11.sub(complex15);
        complex11.imaginary = (-1.0f);
        double double19 = complex11.real;
        double double20 = complex11.imaginary;
        complex11.real = (-325.1488062743758d);
        code.src.Complex complex23 = complex6.sub(complex11);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 235.63140523513093d + "'", double7 == 235.63140523513093d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1078.895181758881d + "'", double8 == 1078.895181758881d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(100.0,10.0)" + "'", str12, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertNotNull(complex23);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        code.src.Complex complex2 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex5 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.real = 481.32140331011675d;
        code.src.Complex complex11 = code.src.Complex.polar((double) (short) -1, 52.0d);
        code.src.Complex complex14 = new code.src.Complex((double) 100, (double) 10.0f);
        complex14.real = (byte) 1;
        complex14.real = 589.1068753368511d;
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex23 = new code.src.Complex();
        complex23.real = 1L;
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex58 = complex41.add(complex57);
        code.src.Complex complex59 = complex23.add(complex58);
        double double60 = complex59.real;
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex59.sub(complex66);
        code.src.Complex complex69 = complex22.add(complex66);
        code.src.Complex complex70 = complex14.sub(complex66);
        code.src.Complex complex71 = complex11.add(complex14);
        code.src.Complex complex72 = complex6.sub(complex14);
        complex14.real = 907.5648116969368d;
        java.lang.Class<?> wildcardClass75 = complex14.getClass();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(589.1068753368511,10.0)" + "'", str19, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 582.9143981028653d + "'", double60 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 875.1303955438267d;
        java.lang.String str5 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(875.1303955438267,43.756491210010616)" + "'", str5, "(875.1303955438267,43.756491210010616)");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, 393.80842089009553d);
        code.src.Complex complex5 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 100, (double) 10.0f);
        complex8.real = (byte) 1;
        complex8.imaginary = (short) 100;
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        double double50 = complex13.imaginary;
        double double51 = complex13.imaginary;
        java.lang.String str52 = complex13.toString();
        code.src.Complex complex53 = complex8.sub(complex13);
        code.src.Complex complex56 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex66 = complex56.sub(complex62);
        code.src.Complex complex69 = new code.src.Complex((double) 100, (double) 10.0f);
        complex69.real = (byte) 1;
        code.src.Complex complex72 = complex62.multiply(complex69);
        code.src.Complex complex73 = complex53.sub(complex72);
        code.src.Complex complex74 = complex5.multiply(complex72);
        double double75 = complex74.abs();
        code.src.Complex complex76 = complex2.sub(complex74);
        code.src.Complex complex79 = code.src.Complex.polar(0.0d, (double) (short) 1);
        code.src.Complex complex80 = complex74.sub(complex79);
        code.src.Complex complex83 = new code.src.Complex(552238.2879620573d, (-272.8614791462894d));
        code.src.Complex complex84 = complex74.multiply(complex83);
        double double85 = complex74.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(1.0,0.0)" + "'", str52, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5225.935322982863d + "'", double75 == 5225.935322982863d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + (-1886.6915610375788d) + "'", double85 == (-1886.6915610375788d));
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        code.src.Complex complex2 = new code.src.Complex(1367.439965418266d, 922.8939813892761d);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        code.src.Complex complex2 = code.src.Complex.polar(907.1298242002123d, (double) (short) 0);
        complex2.imaginary = 64.69613350837157d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        double double10 = complex8.imaginary;
        java.lang.String str11 = complex8.toString();
        code.src.Complex complex12 = complex2.sub(complex8);
        complex2.real = 1051.4948429356753d;
        java.lang.String str15 = complex2.toString();
        double double16 = complex2.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 43.756491210010616d + "'", double10 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str11, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(1051.4948429356753,97.0)" + "'", str15, "(1051.4948429356753,97.0)");
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1051.4948429356753d + "'", double16 == 1051.4948429356753d);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str8 = complex7.toString();
        code.src.Complex complex11 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex12 = complex7.sub(complex11);
        code.src.Complex complex13 = complex2.sub(complex11);
        code.src.Complex complex16 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str17 = complex16.toString();
        java.lang.String str18 = complex16.toString();
        java.lang.String str19 = complex16.toString();
        code.src.Complex complex22 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        double double30 = complex28.imaginary;
        java.lang.String str31 = complex28.toString();
        code.src.Complex complex32 = complex22.sub(complex28);
        code.src.Complex complex35 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        complex35.real = 875.1298242002123d;
        complex35.imaginary = (-317.11773840932915d);
        complex35.real = 0.0d;
        code.src.Complex complex42 = complex32.sub(complex35);
        code.src.Complex complex43 = complex16.sub(complex42);
        code.src.Complex complex44 = complex13.sub(complex43);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(100.0,10.0)" + "'", str8, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(100.0,10.0)" + "'", str17, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(100.0,10.0)" + "'", str18, "(100.0,10.0)");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(100.0,10.0)" + "'", str19, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 43.756491210010616d + "'", double30 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str31, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        code.src.Complex complex2 = code.src.Complex.polar(922.8939813892761d, 939.1298242002123d);
        complex2.imaginary = 0.0d;
        complex2.imaginary = 16815.052882360298d;
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        code.src.Complex complex2 = new code.src.Complex(922.8939813892761d, (-581.9143981028653d));
        java.lang.String str3 = complex2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(922.8939813892761,-581.9143981028653)" + "'", str3, "(922.8939813892761,-581.9143981028653)");
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        java.lang.String str8 = complex2.toString();
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        java.lang.String str32 = complex18.toString();
        code.src.Complex complex33 = complex15.add(complex18);
        code.src.Complex complex34 = complex2.sub(complex18);
        double double35 = complex34.real;
        double double36 = complex34.abs();
        double double37 = complex34.abs();
        complex34.real = 213613.92124332994d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(10.0,0.0)" + "'", str8, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        code.src.Complex complex2 = code.src.Complex.polar(12809.571990514327d, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        java.lang.String str8 = complex5.toString();
        double double9 = complex5.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str8, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, (double) '#');
        double double3 = complex2.imaginary;
        double double4 = complex2.abs();
        code.src.Complex complex7 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        java.lang.String str47 = complex42.toString();
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex42.add(complex54);
        code.src.Complex complex56 = complex39.add(complex55);
        java.lang.String str57 = complex39.toString();
        double double58 = complex39.abs();
        code.src.Complex complex59 = complex23.multiply(complex39);
        code.src.Complex complex60 = complex7.add(complex59);
        code.src.Complex complex61 = complex2.multiply(complex60);
        double double62 = complex60.real;
        java.lang.String str63 = complex60.toString();
        java.lang.String str64 = complex60.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 36.40054944640259d + "'", double4 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "(10.0,0.0)" + "'", str47, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str57, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 525.4704025737593d + "'", double58 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-106706.9606213186d) + "'", double62 == (-106706.9606213186d));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(-106706.9606213186,254625.32245566644)" + "'", str63, "(-106706.9606213186,254625.32245566644)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(-106706.9606213186,254625.32245566644)" + "'", str64, "(-106706.9606213186,254625.32245566644)");
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex37 = complex15.sub(complex36);
        double double38 = complex36.abs();
        double double39 = complex36.imaginary;
        double double40 = complex36.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        complex60.real = 572.0d;
        code.src.Complex complex76 = complex48.add(complex60);
        code.src.Complex complex79 = new code.src.Complex(101.9803902718557d, 2022.0451520447884d);
        code.src.Complex complex80 = complex60.sub(complex79);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex6.imaginary = 'a';
        java.lang.String str9 = complex6.toString();
        code.src.Complex complex10 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex11 = complex6.sub(complex10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "(-198.14967628541848,97.0)" + "'", str9, "(-198.14967628541848,97.0)");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        code.src.Complex complex2 = new code.src.Complex(3785.657142425869d, 109.15874002118079d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 109.15874002118079d + "'", double3 == 109.15874002118079d);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        java.lang.String str3 = complex2.toString();
        complex2.imaginary = 291.13071236105446d;
        double double6 = complex2.imaginary;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(10.0,0.0)" + "'", str3, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 291.13071236105446d + "'", double6 == 291.13071236105446d);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex7.imaginary;
        double double45 = complex7.imaginary;
        java.lang.String str46 = complex7.toString();
        code.src.Complex complex47 = complex2.sub(complex7);
        code.src.Complex complex50 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        double double58 = complex56.imaginary;
        java.lang.String str59 = complex56.toString();
        code.src.Complex complex60 = complex50.sub(complex56);
        code.src.Complex complex63 = new code.src.Complex((double) 100, (double) 10.0f);
        complex63.real = (byte) 1;
        code.src.Complex complex66 = complex56.multiply(complex63);
        code.src.Complex complex67 = complex47.sub(complex66);
        double double68 = complex47.real;
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(1.0,0.0)" + "'", str46, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 43.756491210010616d + "'", double58 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str59, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        code.src.Complex complex2 = new code.src.Complex(100.00499987500625d, 52.0d);
        code.src.Complex complex5 = new code.src.Complex(35.014282800023196d, (-54.40211108893698d));
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = new code.src.Complex();
        code.src.Complex complex40 = complex38.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        double double83 = complex81.imaginary;
        java.lang.String str84 = complex81.toString();
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double88 = complex87.abs();
        double double89 = complex87.real;
        code.src.Complex complex90 = complex81.sub(complex87);
        code.src.Complex complex91 = complex74.sub(complex81);
        code.src.Complex complex92 = complex39.add(complex74);
        double double93 = complex92.real;
        double double94 = complex92.real;
        code.src.Complex complex95 = complex5.sub(complex92);
        double double96 = complex5.abs();
        code.src.Complex complex97 = complex2.add(complex5);
        double double98 = complex97.real;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 43.756491210010616d + "'", double83 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str84, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 52.0d + "'", double88 == 52.0d);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 28.09571990514327d + "'", double89 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 64.69613350837157d + "'", double96 == 64.69613350837157d);
        org.junit.Assert.assertNotNull(complex97);
        org.junit.Assert.assertTrue("'" + double98 + "' != '" + 135.01928267502944d + "'", double98 == 135.01928267502944d);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        code.src.Complex complex2 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.sub(complex5);
        complex2.real = (-437.56491210010614d);
        double double9 = complex2.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex13 = complex2.sub(complex12);
        complex13.real = (-285.04312220503374d);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-437.56491210010614d) + "'", double9 == (-437.56491210010614d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        complex15.real = 0.0d;
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        java.lang.String str43 = complex38.toString();
        double double44 = complex38.real;
        code.src.Complex complex47 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex47.imaginary = (byte) 1;
        code.src.Complex complex50 = complex38.multiply(complex47);
        code.src.Complex complex51 = complex15.sub(complex47);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "(10.0,0.0)" + "'", str43, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10.0d + "'", double44 == 10.0d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        double double48 = complex46.imaginary;
        java.lang.String str49 = complex46.toString();
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double53 = complex52.abs();
        double double54 = complex52.real;
        code.src.Complex complex55 = complex46.sub(complex52);
        code.src.Complex complex56 = complex38.sub(complex46);
        double double57 = complex38.real;
        complex38.imaginary = 14834.400624071903d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 43.756491210010616d + "'", double48 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str49, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 52.0d + "'", double53 == 52.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 581.9143981028653d + "'", double57 == 581.9143981028653d);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        code.src.Complex complex2 = new code.src.Complex(10.0d, 875.1298242002123d);
        code.src.Complex complex5 = code.src.Complex.polar(437.56491210010614d, (-325.1488062743758d));
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex43.real;
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex43.sub(complex50);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex50.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex60 = complex55.add(complex59);
        complex55.real = 43.756491210010616d;
        complex55.imaginary = 100.0d;
        code.src.Complex complex67 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double68 = complex67.abs();
        code.src.Complex complex69 = complex55.add(complex67);
        java.lang.String str70 = complex67.toString();
        code.src.Complex complex73 = new code.src.Complex(625.6708893128759d, 170.71953646075502d);
        code.src.Complex complex74 = complex67.sub(complex73);
        code.src.Complex complex75 = complex6.sub(complex67);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 582.9143981028653d + "'", double44 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(-0.0,0.0)" + "'", str70, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double6 = complex5.abs();
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex11 = complex5.multiply(complex9);
        double double12 = complex9.real;
        complex9.imaginary = (-198.14967628541848d);
        code.src.Complex complex17 = code.src.Complex.polar((-489.10687533685115d), 520.0d);
        code.src.Complex complex20 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex21 = complex17.add(complex20);
        code.src.Complex complex22 = complex9.sub(complex20);
        code.src.Complex complex23 = complex2.multiply(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex34.real = 10;
        code.src.Complex complex37 = complex26.multiply(complex34);
        complex37.imaginary = 280.95719905143267d;
        code.src.Complex complex40 = complex2.add(complex37);
        double double41 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 138.97510027862512d + "'", double41 == 138.97510027862512d);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        code.src.Complex complex2 = new code.src.Complex(1050.9408051475186d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        code.src.Complex complex43 = complex5.add(complex41);
        double double44 = complex43.real;
        double double45 = complex43.abs();
        complex43.real = 10.04987562112089d;
        code.src.Complex complex48 = complex2.add(complex43);
        java.lang.String str49 = complex48.toString();
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 581.9143981028653d + "'", double44 == 581.9143981028653d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 1077.733215908709d + "'", double45 == 1077.733215908709d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1060.9906807686395,907.1298242002123)" + "'", str49, "(1060.9906807686395,907.1298242002123)");
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        code.src.Complex complex2 = new code.src.Complex((-438.56491210010614d), (-363960.5478434686d));
        complex2.real = 816.5801168455955d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex40 = complex23.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex23.sub(complex43);
        code.src.Complex complex49 = new code.src.Complex();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        double double83 = complex82.real;
        code.src.Complex complex84 = complex49.multiply(complex82);
        code.src.Complex complex85 = complex23.multiply(complex82);
        code.src.Complex complex86 = complex7.sub(complex85);
        complex7.imaginary = 0L;
        complex7.real = (byte) 10;
        code.src.Complex complex91 = complex2.add(complex7);
        code.src.Complex complex94 = new code.src.Complex(0.0d, 5225.935322982863d);
        code.src.Complex complex95 = complex91.multiply(complex94);
        double double96 = complex94.imaginary;
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 581.9143981028653d + "'", double83 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 5225.935322982863d + "'", double96 == 5225.935322982863d);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        code.src.Complex complex2 = code.src.Complex.polar((-0.5440211108893698d), 9.866275920404853d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        complex5.imaginary = (-1.0f);
        code.src.Complex complex14 = new code.src.Complex(907.1298242002123d, (-35.0d));
        code.src.Complex complex17 = code.src.Complex.polar(10.0d, (double) '4');
        double double18 = complex17.imaginary;
        code.src.Complex complex21 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex22 = new code.src.Complex();
        complex22.real = 1L;
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex57 = complex40.add(complex56);
        code.src.Complex complex58 = complex22.add(complex57);
        code.src.Complex complex59 = complex21.add(complex57);
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        double double67 = complex65.imaginary;
        java.lang.String str68 = complex65.toString();
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double72 = complex71.abs();
        double double73 = complex71.real;
        code.src.Complex complex74 = complex65.sub(complex71);
        code.src.Complex complex75 = complex57.sub(complex65);
        double double76 = complex57.real;
        code.src.Complex complex77 = complex17.multiply(complex57);
        code.src.Complex complex78 = complex14.add(complex57);
        code.src.Complex complex79 = complex5.multiply(complex14);
        code.src.Complex complex80 = complex2.add(complex79);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 9.866275920404853d + "'", double18 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 43.756491210010616d + "'", double67 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str68, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 52.0d + "'", double72 == 52.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 28.09571990514327d + "'", double73 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 581.9143981028653d + "'", double76 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        code.src.Complex complex2 = code.src.Complex.polar(437.56491210010614d, 35.0d);
        complex2.imaginary = 1.0d;
        double double5 = complex2.imaginary;
        java.lang.Class<?> wildcardClass6 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 1.0d + "'", double5 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        code.src.Complex complex2 = new code.src.Complex(288.4361024143587d, 32.0d);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = complex2.add(complex5);
        double double11 = complex2.imaginary;
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        code.src.Complex complex2 = code.src.Complex.polar(9.013372407959515d, 36.40054944640259d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        code.src.Complex complex2 = code.src.Complex.polar(352949.7590519551d, (-437.56491210010614d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double48 = complex47.abs();
        double double49 = complex47.real;
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        java.lang.String str83 = complex65.toString();
        double double84 = complex65.abs();
        double double85 = complex65.real;
        code.src.Complex complex86 = complex47.sub(complex65);
        java.lang.String str87 = complex47.toString();
        code.src.Complex complex88 = complex44.multiply(complex47);
        code.src.Complex complex89 = complex2.multiply(complex88);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 52.0d + "'", double48 == 52.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 28.09571990514327d + "'", double49 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str83, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 525.4704025737593d + "'", double84 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 290.95719905143267d + "'", double85 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str87, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        code.src.Complex complex2 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex5 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex2.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, (double) '#');
        double double11 = complex10.imaginary;
        double double12 = complex10.abs();
        code.src.Complex complex15 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        java.lang.String str55 = complex50.toString();
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        code.src.Complex complex63 = complex50.add(complex62);
        code.src.Complex complex64 = complex47.add(complex63);
        java.lang.String str65 = complex47.toString();
        double double66 = complex47.abs();
        code.src.Complex complex67 = complex31.multiply(complex47);
        code.src.Complex complex68 = complex15.add(complex67);
        code.src.Complex complex69 = complex10.multiply(complex68);
        complex10.imaginary = (-285.04312220503374d);
        code.src.Complex complex72 = complex2.sub(complex10);
        java.lang.String str73 = complex10.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 36.40054944640259d + "'", double12 == 36.40054944640259d);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(10.0,0.0)" + "'", str55, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str65, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 525.4704025737593d + "'", double66 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,-285.04312220503374)" + "'", str73, "(10.0,-285.04312220503374)");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        code.src.Complex complex2 = new code.src.Complex(0.9999999999999999d, 58.01650108462993d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.imaginary = 100L;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        java.lang.String str22 = complex17.toString();
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        code.src.Complex complex30 = complex17.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex47 = complex30.add(complex46);
        code.src.Complex complex50 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex50.multiply(complex53);
        code.src.Complex complex55 = complex30.sub(complex50);
        code.src.Complex complex56 = complex13.add(complex55);
        code.src.Complex complex57 = complex5.multiply(complex55);
        double double58 = complex57.imaginary;
        code.src.Complex complex59 = complex2.add(complex57);
        java.lang.String str60 = complex59.toString();
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "(10.0,0.0)" + "'", str22, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 71852.21111515388d + "'", double58 == 71852.21111515388d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(-15659.77130486735,71910.22761623851)" + "'", str60, "(-15659.77130486735,71910.22761623851)");
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex2.add(complex18);
        code.src.Complex complex39 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        double double40 = complex39.imaginary;
        double double41 = complex39.imaginary;
        code.src.Complex complex42 = complex18.sub(complex39);
        complex39.imaginary = 816.5801168455955d;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + (-54.40211108893698d) + "'", double40 == (-54.40211108893698d));
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + (-54.40211108893698d) + "'", double41 == (-54.40211108893698d));
        org.junit.Assert.assertNotNull(complex42);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex22.sub(complex42);
        code.src.Complex complex48 = complex5.add(complex47);
        double double49 = complex48.abs();
        complex48.real = 10.0d;
        double double52 = complex48.abs();
        double double53 = complex48.imaginary;
        double double54 = complex48.imaginary;
        double double55 = complex48.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 572.0d + "'", double49 == 572.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 481.42527279362895d + "'", double52 == 481.42527279362895d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 481.32140331011675d + "'", double53 == 481.32140331011675d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 481.32140331011675d + "'", double54 == 481.32140331011675d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 481.42527279362895d + "'", double55 == 481.42527279362895d);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        java.lang.String str33 = complex15.toString();
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex36.imaginary = (short) 0;
        java.lang.String str39 = complex36.toString();
        code.src.Complex complex40 = complex15.sub(complex36);
        complex40.imaginary = 21990.294301380844d;
        complex40.imaginary = 135.01928267502944d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str33, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(-0.0,0.0)" + "'", str39, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        code.src.Complex complex2 = code.src.Complex.polar(352.8614791462894d, (double) (short) 1);
        double double3 = complex2.imaginary;
        java.lang.Class<?> wildcardClass4 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 296.9226963579992d + "'", double3 == 296.9226963579992d);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.real = 525.4704025737593d;
        double double7 = complex2.real;
        double double8 = complex2.real;
        complex2.real = 148.66068747318505d;
        java.lang.String str11 = complex2.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 525.4704025737593d + "'", double7 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 525.4704025737593d + "'", double8 == 525.4704025737593d);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(148.66068747318505,0.0)" + "'", str11, "(148.66068747318505,0.0)");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex6.imaginary;
        java.lang.String str8 = complex6.toString();
        double double9 = complex6.real;
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double13 = complex12.abs();
        java.lang.String str14 = complex12.toString();
        code.src.Complex complex15 = complex6.sub(complex12);
        code.src.Complex complex18 = new code.src.Complex(100.0d, 0.0d);
        code.src.Complex complex19 = complex15.add(complex18);
        complex15.imaginary = 58910.68753368511d;
        complex15.real = 581.9143981028653d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 437.56491210010614d + "'", double7 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str8, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 280.95719905143267d + "'", double9 == 280.95719905143267d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str14, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex19);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        code.src.Complex complex52 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        double double60 = complex58.imaginary;
        java.lang.String str61 = complex58.toString();
        code.src.Complex complex62 = complex52.sub(complex58);
        code.src.Complex complex63 = complex2.multiply(complex62);
        complex62.real = 109.15415943981125d;
        double double66 = complex62.abs();
        double double67 = complex62.real;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 43.756491210010616d + "'", double60 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str61, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 121.44752674007574d + "'", double66 == 121.44752674007574d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 109.15415943981125d + "'", double67 == 109.15415943981125d);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex16 = new code.src.Complex();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        double double50 = complex49.real;
        code.src.Complex complex51 = complex16.multiply(complex49);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex67.add(complex83);
        java.lang.String str85 = complex67.toString();
        double double86 = complex67.abs();
        code.src.Complex complex87 = complex16.multiply(complex67);
        code.src.Complex complex88 = complex15.add(complex87);
        complex87.imaginary = (-22432.531388878706d);
        double double91 = complex87.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 581.9143981028653d + "'", double50 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str85, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 525.4704025737593d + "'", double86 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + (-22432.531388878706d) + "'", double91 == (-22432.531388878706d));
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        double double65 = complex54.imaginary;
        code.src.Complex complex66 = complex36.multiply(complex54);
        complex54.imaginary = 36.41428291206625d;
        code.src.Complex complex69 = null;
        // The following exception was thrown during execution in test generation
        try {
            code.src.Complex complex70 = complex54.multiply(complex69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 437.56491210010614d + "'", double65 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex66);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        code.src.Complex complex2 = code.src.Complex.polar(491.60074581353115d, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex5.imaginary = (short) 0;
        complex5.real = 525.4704025737593d;
        double double10 = complex5.real;
        complex5.imaginary = 100;
        double double13 = complex5.imaginary;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex53 = complex36.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex36.sub(complex56);
        code.src.Complex complex62 = complex19.add(complex61);
        double double63 = complex62.abs();
        double double64 = complex62.imaginary;
        complex62.imaginary = 1L;
        double double67 = complex62.real;
        code.src.Complex complex68 = complex5.add(complex62);
        code.src.Complex complex69 = complex2.multiply(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 525.4704025737593d + "'", double10 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 572.0d + "'", double63 == 572.0d);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 481.32140331011675d + "'", double64 == 481.32140331011675d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 309.0529189565759d + "'", double67 == 309.0529189565759d);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        code.src.Complex complex2 = new code.src.Complex(5225.935322982863d, 0.0d);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        code.src.Complex complex2 = new code.src.Complex(393.80842089009553d, 0.0d);
        complex2.imaginary = 1091.0075601938674d;
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        code.src.Complex complex2 = code.src.Complex.polar(317.11773840932915d, 320.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        double double11 = complex5.real;
        java.lang.String str12 = complex5.toString();
        code.src.Complex complex13 = complex2.add(complex5);
        complex5.real = 2.036599186399486d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        code.src.Complex complex2 = new code.src.Complex((double) '4', 320.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.real = 589.1068753368511d;
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex60 = complex13.add(complex57);
        code.src.Complex complex61 = complex5.sub(complex57);
        code.src.Complex complex62 = complex2.multiply(complex5);
        complex2.imaginary = 572.0d;
        complex2.real = (-223919.78339663558d);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(589.1068753368511,10.0)" + "'", str10, "(589.1068753368511,10.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.real = (byte) 1;
        complex2.imaginary = (short) 100;
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        double double23 = complex22.real;
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex22.multiply(complex26);
        code.src.Complex complex28 = complex2.multiply(complex22);
        code.src.Complex complex31 = new code.src.Complex((double) 100, (double) 10.0f);
        complex31.imaginary = 100L;
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex56.sub(complex76);
        code.src.Complex complex82 = complex39.add(complex81);
        code.src.Complex complex83 = complex31.multiply(complex81);
        code.src.Complex complex84 = complex2.sub(complex31);
        double double85 = complex2.real;
        java.lang.Class<?> wildcardClass86 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 290.95719905143267d + "'", double23 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 1.0d + "'", double85 == 1.0d);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        complex2.imaginary = 10L;
        code.src.Complex complex7 = new code.src.Complex((double) 1, 28.09571990514327d);
        code.src.Complex complex10 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex11 = new code.src.Complex();
        complex11.real = 1L;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex11.add(complex46);
        code.src.Complex complex48 = complex10.add(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double52 = complex51.abs();
        code.src.Complex complex53 = complex10.add(complex51);
        code.src.Complex complex54 = complex7.add(complex10);
        code.src.Complex complex55 = complex2.sub(complex54);
        code.src.Complex complex58 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        double double66 = complex64.imaginary;
        java.lang.String str67 = complex64.toString();
        code.src.Complex complex68 = complex58.sub(complex64);
        java.lang.String str69 = complex58.toString();
        code.src.Complex complex70 = complex54.sub(complex58);
        complex54.real = (-438.0712777412159d);
        code.src.Complex complex75 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double76 = complex75.abs();
        code.src.Complex complex79 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex82 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex83 = complex79.add(complex82);
        complex83.real = 1018.3729221500101d;
        code.src.Complex complex86 = complex75.multiply(complex83);
        code.src.Complex complex87 = complex54.sub(complex86);
        java.lang.Class<?> wildcardClass88 = complex54.getClass();
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 52.0d + "'", double52 == 52.0d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 43.756491210010616d + "'", double66 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str67, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(100.0,97.0)" + "'", str69, "(100.0,97.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 1018.3729221500101d + "'", double76 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        code.src.Complex complex2 = new code.src.Complex(552238.2879620573d, (-272.8614791462894d));
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex8 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double9 = complex8.imaginary;
        complex8.imaginary = (byte) 10;
        code.src.Complex complex12 = complex5.sub(complex8);
        double double13 = complex12.imaginary;
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        double double30 = complex29.real;
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        double double38 = complex37.imaginary;
        code.src.Complex complex39 = complex29.sub(complex37);
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        code.src.Complex complex73 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex76 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex77 = complex73.multiply(complex76);
        code.src.Complex complex78 = complex65.add(complex77);
        code.src.Complex complex79 = complex62.add(complex78);
        code.src.Complex complex82 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex85 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex86 = complex82.multiply(complex85);
        code.src.Complex complex87 = complex62.sub(complex82);
        code.src.Complex complex88 = complex45.add(complex87);
        code.src.Complex complex89 = complex39.add(complex45);
        complex39.imaginary = 875.1298242002123d;
        double double92 = complex39.real;
        code.src.Complex complex93 = complex12.multiply(complex39);
        complex12.imaginary = 27.295120203343835d;
        code.src.Complex complex96 = complex2.multiply(complex12);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-317.11773840932915d) + "'", double9 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-10.0d) + "'", double13 == (-10.0d));
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 290.95719905143267d + "'", double30 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 437.56491210010614d + "'", double38 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 10.0d + "'", double92 == 10.0d);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex96);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        code.src.Complex complex2 = new code.src.Complex(320.1223055909404d, 213613.92147670433d);
        java.lang.Class<?> wildcardClass3 = complex2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        java.lang.String str5 = complex2.toString();
        java.lang.Class<?> wildcardClass6 = complex2.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "(100.0,100.0)" + "'", str5, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        code.src.Complex complex2 = code.src.Complex.polar((-280.95719905143267d), 612077.1638882305d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        double double36 = complex35.real;
        code.src.Complex complex39 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex40 = complex35.sub(complex39);
        complex39.imaginary = 582.9143981028653d;
        code.src.Complex complex45 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex48 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex49 = complex45.add(complex48);
        code.src.Complex complex50 = complex39.add(complex49);
        complex39.imaginary = 907.5648116969368d;
        code.src.Complex complex53 = complex2.add(complex39);
        java.lang.Class<?> wildcardClass54 = complex53.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 581.9143981028653d + "'", double36 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex56.imaginary = (short) 0;
        complex56.imaginary = 100.0f;
        code.src.Complex complex61 = complex48.multiply(complex56);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        double double78 = complex77.abs();
        double double79 = complex77.real;
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double83 = complex82.abs();
        java.lang.String str84 = complex82.toString();
        code.src.Complex complex85 = complex77.add(complex82);
        code.src.Complex complex86 = complex61.multiply(complex77);
        double double87 = complex77.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 525.4704025737593d + "'", double78 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 290.95719905143267d + "'", double79 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 52.0d + "'", double83 == 52.0d);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str84, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 290.95719905143267d + "'", double87 == 290.95719905143267d);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        code.src.Complex complex2 = code.src.Complex.polar(43.756491210010616d, 522.8336537091443d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 525.4704025737593d);
        complex2.real = 589.1068753368511d;
        double double5 = complex2.real;
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex49.add(complex54);
        java.lang.String str56 = complex49.toString();
        double double57 = complex49.real;
        double double58 = complex49.real;
        code.src.Complex complex61 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        complex61.imaginary = ' ';
        complex61.real = 58911.02077697936d;
        code.src.Complex complex66 = complex49.add(complex61);
        code.src.Complex complex67 = complex2.add(complex61);
        java.lang.Class<?> wildcardClass68 = complex67.getClass();
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 589.1068753368511d + "'", double5 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str56, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 28.09571990514327d + "'", double57 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 28.09571990514327d + "'", double58 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        code.src.Complex complex2 = code.src.Complex.polar((double) 1L, (double) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.imaginary = 100L;
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex51 = complex34.add(complex50);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex34.sub(complex54);
        code.src.Complex complex60 = complex17.add(complex59);
        code.src.Complex complex61 = complex9.multiply(complex59);
        java.lang.String str62 = complex9.toString();
        code.src.Complex complex63 = complex2.multiply(complex9);
        java.lang.String str64 = complex9.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(100.0,100.0)" + "'", str62, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(100.0,100.0)" + "'", str64, "(100.0,100.0)");
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        double double30 = complex28.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        code.src.Complex complex2 = new code.src.Complex((double) 0L, 1018.3729221500101d);
        double double3 = complex2.imaginary;
        complex2.imaginary = 0.0d;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1018.3729221500101d + "'", double3 == 1018.3729221500101d);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, (-393.80842089009553d));
        complex2.real = (-0.0d);
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        code.src.Complex complex38 = new code.src.Complex();
        code.src.Complex complex39 = complex37.add(complex38);
        java.lang.String str40 = complex37.toString();
        code.src.Complex complex41 = complex2.multiply(complex37);
        java.lang.String str42 = complex37.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str40, "(581.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str42, "(581.9143981028653,875.1298242002123)");
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, 393.80842089009553d);
        code.src.Complex complex5 = code.src.Complex.polar((double) 10L, 100.0d);
        code.src.Complex complex8 = new code.src.Complex((double) 100, (double) 10.0f);
        complex8.real = (byte) 1;
        complex8.imaginary = (short) 100;
        code.src.Complex complex13 = new code.src.Complex();
        complex13.real = 1L;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        java.lang.String str39 = complex34.toString();
        code.src.Complex complex42 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex45 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex46 = complex42.multiply(complex45);
        code.src.Complex complex47 = complex34.add(complex46);
        code.src.Complex complex48 = complex31.add(complex47);
        code.src.Complex complex49 = complex13.add(complex48);
        double double50 = complex13.imaginary;
        double double51 = complex13.imaginary;
        java.lang.String str52 = complex13.toString();
        code.src.Complex complex53 = complex8.sub(complex13);
        code.src.Complex complex56 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        double double64 = complex62.imaginary;
        java.lang.String str65 = complex62.toString();
        code.src.Complex complex66 = complex56.sub(complex62);
        code.src.Complex complex69 = new code.src.Complex((double) 100, (double) 10.0f);
        complex69.real = (byte) 1;
        code.src.Complex complex72 = complex62.multiply(complex69);
        code.src.Complex complex73 = complex53.sub(complex72);
        code.src.Complex complex74 = complex5.multiply(complex72);
        double double75 = complex74.abs();
        code.src.Complex complex76 = complex2.sub(complex74);
        code.src.Complex complex79 = code.src.Complex.polar(0.0d, (double) (short) 1);
        code.src.Complex complex80 = complex74.sub(complex79);
        code.src.Complex complex83 = new code.src.Complex(552238.2879620573d, (-272.8614791462894d));
        code.src.Complex complex84 = complex74.multiply(complex83);
        double double85 = complex74.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "(10.0,0.0)" + "'", str39, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "(1.0,0.0)" + "'", str52, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 43.756491210010616d + "'", double64 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str65, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 5225.935322982863d + "'", double75 == 5225.935322982863d);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 5225.935322982863d + "'", double85 == 5225.935322982863d);
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        code.src.Complex complex2 = new code.src.Complex(58911.83144065723d, (-180.95719905143267d));
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex39 = new code.src.Complex();
        complex39.real = 1L;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex75 = complex39.add(complex74);
        double double76 = complex75.real;
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex75.sub(complex82);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex82.add(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex92 = complex87.add(complex91);
        code.src.Complex complex93 = complex36.multiply(complex92);
        code.src.Complex complex94 = complex2.multiply(complex36);
        double double95 = complex94.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 582.9143981028653d + "'", double76 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        code.src.Complex complex2 = code.src.Complex.polar(43.756491210010616d, 509250.64491133287d);
        double double3 = complex2.real;
        code.src.Complex complex6 = new code.src.Complex(112.71202242884297d, 279.7722729260128d);
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        double double44 = complex43.real;
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex43.sub(complex50);
        double double53 = complex43.imaginary;
        double double54 = complex43.real;
        double double55 = complex43.abs();
        code.src.Complex complex58 = new code.src.Complex((double) 100, (double) 10.0f);
        complex58.imaginary = '4';
        code.src.Complex complex63 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str64 = complex63.toString();
        double double65 = complex63.abs();
        code.src.Complex complex66 = complex58.multiply(complex63);
        code.src.Complex complex67 = complex43.sub(complex63);
        code.src.Complex complex68 = complex6.add(complex63);
        code.src.Complex complex69 = complex2.sub(complex68);
        double double70 = complex69.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 2.036599186399486d + "'", double3 == 2.036599186399486d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 582.9143981028653d + "'", double44 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 875.1298242002123d + "'", double53 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 582.9143981028653d + "'", double54 == 582.9143981028653d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 1051.4948429356753d + "'", double55 == 1051.4948429356753d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(1.0,290.95719905143267)" + "'", str64, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 290.9589175121722d + "'", double65 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + (-111.67542324244349d) + "'", double70 == (-111.67542324244349d));
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        code.src.Complex complex2 = new code.src.Complex(15125.23365654694d, (-131.01341704986802d));
        double double3 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 15125.23365654694d + "'", double3 == 15125.23365654694d);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        complex2.imaginary = 100L;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex27.sub(complex47);
        code.src.Complex complex53 = complex10.add(complex52);
        code.src.Complex complex54 = complex2.multiply(complex52);
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        double double62 = complex61.imaginary;
        java.lang.String str63 = complex61.toString();
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex52.sub(complex61);
        code.src.Complex complex68 = new code.src.Complex(15125.23365654694d, (-131.01341704986802d));
        code.src.Complex complex69 = complex61.add(complex68);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 437.56491210010614d + "'", double62 == 437.56491210010614d);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str63, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(280.95719905143267,437.56491210010614)" + "'", str64, "(280.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        code.src.Complex complex2 = code.src.Complex.polar(1018.3729221500101d, 0.0d);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex(102.46950765959599d, 5225.935322982863d);
        code.src.Complex complex8 = complex2.multiply(complex7);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1018.3729221500101d + "'", double3 == 1018.3729221500101d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1018.3729221500101d + "'", double4 == 1018.3729221500101d);
        org.junit.Assert.assertNotNull(complex8);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        code.src.Complex complex37 = new code.src.Complex((double) 100, (double) 10.0f);
        complex37.real = (byte) 1;
        complex37.imaginary = (short) 100;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        double double58 = complex57.real;
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex57.multiply(complex61);
        code.src.Complex complex63 = complex37.multiply(complex57);
        double double64 = complex37.imaginary;
        code.src.Complex complex65 = complex34.add(complex37);
        double double66 = complex65.abs();
        code.src.Complex complex69 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex72 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex73 = complex69.sub(complex72);
        code.src.Complex complex76 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        code.src.Complex complex77 = complex72.sub(complex76);
        java.lang.String str78 = complex76.toString();
        code.src.Complex complex79 = complex65.sub(complex76);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 290.95719905143267d + "'", double58 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 100.0d + "'", double64 == 100.0d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 1136.0754242392372d + "'", double66 == 1136.0754242392372d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "(537.1079693847927,-836.4961004935847)" + "'", str78, "(537.1079693847927,-836.4961004935847)");
        org.junit.Assert.assertNotNull(complex79);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        code.src.Complex complex2 = new code.src.Complex((double) '4', 1072.0212734397164d);
        complex2.real = (-118.66263362210499d);
        complex2.real = (-5.063656411097588d);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        code.src.Complex complex2 = new code.src.Complex(586.0264563281264d, 10.04987562112089d);
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        code.src.Complex complex2 = code.src.Complex.polar((-288.4361024143587d), 520.0d);
        code.src.Complex complex5 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex5.imaginary = (byte) 1;
        double double8 = complex5.abs();
        code.src.Complex complex9 = new code.src.Complex();
        complex9.real = 1L;
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        java.lang.String str19 = complex14.toString();
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        code.src.Complex complex27 = complex14.add(complex26);
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        java.lang.String str35 = complex30.toString();
        code.src.Complex complex38 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex41 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex42 = complex38.multiply(complex41);
        code.src.Complex complex43 = complex30.add(complex42);
        code.src.Complex complex44 = complex27.add(complex43);
        code.src.Complex complex45 = complex9.add(complex44);
        double double46 = complex45.real;
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex45.sub(complex52);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex52.add(complex57);
        code.src.Complex complex61 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex62 = complex57.add(complex61);
        code.src.Complex complex63 = complex5.sub(complex62);
        code.src.Complex complex64 = complex2.add(complex62);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.4142135623730951d + "'", double8 == 1.4142135623730951d);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "(10.0,0.0)" + "'", str35, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 582.9143981028653d + "'", double46 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        code.src.Complex complex2 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex5 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex6 = complex2.add(complex5);
        complex2.imaginary = 100L;
        double double9 = complex2.abs();
        double double10 = complex2.abs();
        double double11 = complex2.real;
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 109.15415943981125d + "'", double9 == 109.15415943981125d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 109.15415943981125d + "'", double10 == 109.15415943981125d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 43.756491210010616d + "'", double11 == 43.756491210010616d);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        code.src.Complex complex2 = new code.src.Complex(525.4704025737593d, 71852.21111515388d);
        complex2.imaginary = 102.46950765959599d;
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        code.src.Complex complex2 = code.src.Complex.polar(200.0d, 2809.571990514327d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        code.src.Complex complex2 = code.src.Complex.polar(904.2902405342309d, (-165.30108883409898d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        code.src.Complex complex2 = new code.src.Complex(288.43610241435874d, (-580728.1698323605d));
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-580728.1698323605d) + "'", double3 == (-580728.1698323605d));
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        code.src.Complex complex2 = new code.src.Complex((-8062.246137461803d), (-213613.9212426372d));
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex15.sub(complex35);
        complex35.imaginary = 52.0d;
        complex35.imaginary = 290.9589175121722d;
        code.src.Complex complex47 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex50 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex35.sub(complex47);
        code.src.Complex complex55 = code.src.Complex.polar(352.8614791462894d, (-495.7163425468028d));
        double double56 = complex55.real;
        double double57 = complex55.imaginary;
        code.src.Complex complex58 = complex52.add(complex55);
        double double59 = complex58.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 279.7722729260128d + "'", double56 == 279.7722729260128d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 215.031855238055d + "'", double57 == 215.031855238055d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 478.9437931522631d + "'", double59 == 478.9437931522631d);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        code.src.Complex complex20 = complex7.add(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex37 = complex20.add(complex36);
        java.lang.String str38 = complex20.toString();
        double double39 = complex20.abs();
        double double40 = complex20.real;
        code.src.Complex complex41 = complex2.sub(complex20);
        code.src.Complex complex44 = code.src.Complex.polar(875.1298242002123d, (double) (-1L));
        code.src.Complex complex45 = complex41.sub(complex44);
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        java.lang.String str69 = complex64.toString();
        code.src.Complex complex72 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex75 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex76 = complex72.multiply(complex75);
        code.src.Complex complex77 = complex64.add(complex76);
        code.src.Complex complex78 = complex61.add(complex77);
        code.src.Complex complex81 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex84 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex85 = complex81.multiply(complex84);
        code.src.Complex complex86 = complex61.sub(complex81);
        java.lang.String str87 = complex61.toString();
        code.src.Complex complex90 = new code.src.Complex((double) 100.0f, (double) (short) -1);
        code.src.Complex complex91 = complex61.add(complex90);
        code.src.Complex complex92 = complex45.multiply(complex61);
        complex61.imaginary = 589.1068753368511d;
        double double95 = complex61.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 52.0d + "'", double3 == 52.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 28.09571990514327d + "'", double4 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 525.4704025737593d + "'", double39 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 290.95719905143267d + "'", double40 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(10.0,0.0)" + "'", str69, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str87, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 657.0410963166636d + "'", double95 == 657.0410963166636d);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        code.src.Complex complex2 = new code.src.Complex(2809.571990514327d, 161.68806101217828d);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double3 = complex2.real;
        java.lang.String str4 = complex2.toString();
        code.src.Complex complex7 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex10 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex11 = complex7.multiply(complex10);
        java.lang.String str12 = complex7.toString();
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex15.real = 10;
        code.src.Complex complex18 = complex7.multiply(complex15);
        code.src.Complex complex21 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex22 = new code.src.Complex();
        complex22.real = 1L;
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex57 = complex40.add(complex56);
        code.src.Complex complex58 = complex22.add(complex57);
        double double59 = complex58.real;
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex58.sub(complex65);
        double double68 = complex58.imaginary;
        code.src.Complex complex69 = complex21.sub(complex58);
        code.src.Complex complex70 = complex15.add(complex21);
        code.src.Complex complex73 = code.src.Complex.polar((double) 100, 0.0d);
        code.src.Complex complex74 = complex21.add(complex73);
        complex74.real = 279.7722729260128d;
        code.src.Complex complex77 = complex2.multiply(complex74);
        java.lang.Class<?> wildcardClass78 = complex2.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 28.09571990514327d + "'", double3 == 28.09571990514327d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str4, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 582.9143981028653d + "'", double59 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 875.1298242002123d + "'", double68 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        code.src.Complex complex2 = new code.src.Complex(1449.9563176358188d, (-5.063656411097588d));
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double37 = complex36.abs();
        double double38 = complex36.real;
        code.src.Complex complex41 = new code.src.Complex(10.0d, 875.1298242002123d);
        code.src.Complex complex42 = complex36.multiply(complex41);
        complex41.real = 0.0d;
        code.src.Complex complex45 = complex15.sub(complex41);
        double double46 = complex41.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 52.0d + "'", double37 == 52.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 28.09571990514327d + "'", double38 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 875.1298242002123d + "'", double46 == 875.1298242002123d);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 1, 280.95719905143267d);
        double double3 = complex2.imaginary;
        double double4 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 280.95719905143267d + "'", double3 == 280.95719905143267d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 1.0d + "'", double4 == 1.0d);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        code.src.Complex complex38 = code.src.Complex.polar((double) ' ', 100.00499987500625d);
        code.src.Complex complex39 = complex32.add(complex38);
        complex38.imaginary = 322.91145534356957d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        code.src.Complex complex2 = code.src.Complex.polar(887156.2400733333d, 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        code.src.Complex complex2 = new code.src.Complex(479.0395796891049d, 704.4102877394573d);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        java.lang.String str38 = complex36.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        double double65 = complex54.imaginary;
        code.src.Complex complex66 = complex36.multiply(complex54);
        code.src.Complex complex69 = new code.src.Complex(52.0d, 430.3716436914759d);
        code.src.Complex complex70 = complex36.sub(complex69);
        double double71 = complex69.abs();
        double double72 = complex69.abs();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(582.9143981028653,875.1298242002123)" + "'", str38, "(582.9143981028653,875.1298242002123)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 437.56491210010614d + "'", double65 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 433.501732053867d + "'", double71 == 433.501732053867d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 433.501732053867d + "'", double72 == 433.501732053867d);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        code.src.Complex complex2 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        code.src.Complex complex5 = code.src.Complex.polar((double) 0.0f, 36.40054944640259d);
        double double6 = complex5.real;
        java.lang.String str7 = complex5.toString();
        code.src.Complex complex10 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex13 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex50.real;
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        code.src.Complex complex59 = complex50.sub(complex57);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex57.add(complex62);
        code.src.Complex complex64 = complex13.add(complex62);
        code.src.Complex complex65 = complex10.multiply(complex62);
        complex62.real = 100;
        double double68 = complex62.imaginary;
        code.src.Complex complex69 = complex5.add(complex62);
        code.src.Complex complex70 = complex2.sub(complex69);
        complex70.imaginary = 354081.6424874725d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(0.0,-0.0)" + "'", str7, "(0.0,-0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 582.9143981028653d + "'", double51 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 43.756491210010616d + "'", double68 == 43.756491210010616d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (-131.01341704986802d));
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        complex2.imaginary = (-1.0f);
        double double18 = complex2.real;
        double double19 = complex2.real;
        complex2.imaginary = 141.4213562373095d;
        code.src.Complex complex24 = new code.src.Complex((double) (byte) 1, (double) (-1.0f));
        complex24.imaginary = (byte) 1;
        code.src.Complex complex27 = complex2.multiply(complex24);
        double double28 = complex2.abs();
        code.src.Complex complex31 = code.src.Complex.polar((double) (short) 10, (double) (-1));
        code.src.Complex complex34 = new code.src.Complex(87.48639198643185d, (-35.0d));
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex2.multiply(complex31);
        code.src.Complex complex39 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double40 = complex39.abs();
        code.src.Complex complex43 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str44 = complex43.toString();
        code.src.Complex complex45 = complex39.multiply(complex43);
        java.lang.String str46 = complex39.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 100, (double) 10.0f);
        complex49.real = (byte) 1;
        complex49.imaginary = (short) 100;
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        java.lang.String str61 = complex56.toString();
        code.src.Complex complex64 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex67 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex68 = complex64.multiply(complex67);
        code.src.Complex complex69 = complex56.add(complex68);
        double double70 = complex69.real;
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex69.multiply(complex73);
        code.src.Complex complex75 = complex49.multiply(complex69);
        code.src.Complex complex78 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str79 = complex78.toString();
        code.src.Complex complex82 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex83 = complex78.sub(complex82);
        complex78.imaginary = (-1.0f);
        code.src.Complex complex86 = complex49.sub(complex78);
        code.src.Complex complex87 = complex39.sub(complex86);
        code.src.Complex complex88 = complex2.add(complex87);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 141.77446878757826d + "'", double28 == 141.77446878757826d);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(100.0,10.0)" + "'", str44, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(-0.0,0.0)" + "'", str46, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(10.0,0.0)" + "'", str61, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 290.95719905143267d + "'", double70 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "(100.0,10.0)" + "'", str79, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = code.src.Complex.polar(28.09571990514327d, 100.0d);
        code.src.Complex complex44 = complex40.add(complex43);
        complex40.real = 309.0529189565759d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        code.src.Complex complex2 = code.src.Complex.polar(9.866275920404853d, 119.9377093343606d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex53 = complex2.multiply(complex52);
        double double54 = complex52.abs();
        double double55 = complex52.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 104.0d + "'", double54 == 104.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 87.51298242002123d + "'", double55 == 87.51298242002123d);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        code.src.Complex complex2 = code.src.Complex.polar(3171.1773840932915d, 35.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        complex2.imaginary = (-43.756491210010616d);
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        java.lang.String str60 = complex55.toString();
        code.src.Complex complex63 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex66 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex67 = complex63.multiply(complex66);
        code.src.Complex complex68 = complex55.add(complex67);
        code.src.Complex complex71 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex74 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex75 = complex71.multiply(complex74);
        java.lang.String str76 = complex71.toString();
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex71.add(complex83);
        code.src.Complex complex85 = complex68.add(complex84);
        double double86 = complex85.real;
        code.src.Complex complex89 = code.src.Complex.polar((double) (byte) 100, 582.9143981028653d);
        code.src.Complex complex90 = complex85.sub(complex89);
        complex90.real = 'a';
        double double93 = complex90.real;
        code.src.Complex complex94 = complex2.add(complex90);
        complex90.imaginary = 0.0d;
        java.lang.Class<?> wildcardClass97 = complex90.getClass();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(10.0,0.0)" + "'", str60, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "(10.0,0.0)" + "'", str76, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 581.9143981028653d + "'", double86 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex89);
        org.junit.Assert.assertNotNull(complex90);
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 97.0d + "'", double93 == 97.0d);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        code.src.Complex complex2 = new code.src.Complex(43.756491210010616d, 437.56491210010614d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (double) (byte) 10);
        code.src.Complex complex6 = new code.src.Complex();
        code.src.Complex complex9 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex12 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex13 = complex9.multiply(complex12);
        java.lang.String str14 = complex9.toString();
        code.src.Complex complex17 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex20 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex21 = complex17.multiply(complex20);
        code.src.Complex complex22 = complex9.add(complex21);
        code.src.Complex complex25 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex28 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex29 = complex25.multiply(complex28);
        java.lang.String str30 = complex25.toString();
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        code.src.Complex complex38 = complex25.add(complex37);
        code.src.Complex complex39 = complex22.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex41 = complex6.multiply(complex39);
        double double42 = complex39.abs();
        code.src.Complex complex43 = complex5.sub(complex39);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex46.imaginary = (short) 0;
        complex46.imaginary = 100.0f;
        code.src.Complex complex53 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str54 = complex53.toString();
        code.src.Complex complex57 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex58 = complex53.sub(complex57);
        code.src.Complex complex59 = complex46.multiply(complex58);
        java.lang.String str60 = complex58.toString();
        double double61 = complex58.real;
        code.src.Complex complex62 = complex5.add(complex58);
        code.src.Complex complex63 = complex2.add(complex5);
        double double64 = complex5.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "(10.0,0.0)" + "'", str14, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "(10.0,0.0)" + "'", str30, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 581.9143981028653d + "'", double40 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 1050.9408051475186d + "'", double42 == 1050.9408051475186d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(100.0,10.0)" + "'", str54, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str60, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 589.1068753368511d + "'", double61 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        code.src.Complex complex2 = code.src.Complex.polar(445.65251212240173d, 524.9173550026002d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        code.src.Complex complex2 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex5 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex8 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        double double9 = complex8.imaginary;
        complex8.imaginary = (byte) 10;
        code.src.Complex complex12 = complex5.sub(complex8);
        double double13 = complex12.imaginary;
        code.src.Complex complex14 = complex2.multiply(complex12);
        code.src.Complex complex17 = code.src.Complex.polar((-317.11773840932915d), (double) 0.0f);
        double double18 = complex17.real;
        code.src.Complex complex19 = complex14.multiply(complex17);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-317.11773840932915d) + "'", double9 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-10.0d) + "'", double13 == (-10.0d));
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-317.11773840932915d) + "'", double18 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex19);
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        code.src.Complex complex2 = new code.src.Complex(998.947820022602d, 100.00499987500625d);
        code.src.Complex complex5 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex5.imaginary = (short) 0;
        double double8 = complex5.abs();
        double double9 = complex5.real;
        double double10 = complex5.real;
        double double11 = complex5.imaginary;
        complex5.imaginary = 811.5511719071119d;
        code.src.Complex complex14 = complex2.sub(complex5);
        double double15 = complex14.imaginary;
        double double16 = complex14.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-0.0d) + "'", double9 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-0.0d) + "'", double10 == (-0.0d));
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-711.5461720321057d) + "'", double15 == (-711.5461720321057d));
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1226.4561557844013d + "'", double16 == 1226.4561557844013d);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        code.src.Complex complex2 = new code.src.Complex((double) (byte) 100, 437.56491210010614d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex46.add(complex51);
        code.src.Complex complex53 = complex2.add(complex51);
        double double54 = complex51.real;
        double double55 = complex51.real;
        java.lang.Class<?> wildcardClass56 = complex51.getClass();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 28.09571990514327d + "'", double54 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 28.09571990514327d + "'", double55 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (-288.4361024143587d));
        complex2.imaginary = 148.66068747318505d;
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        code.src.Complex complex2 = code.src.Complex.polar(141.4213562373095d, 393.80842089009553d);
        code.src.Complex complex5 = code.src.Complex.polar(491.60074581353115d, (double) 100);
        code.src.Complex complex6 = complex2.sub(complex5);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        complex48.real = 43.756491210010616d;
        complex48.imaginary = 100.0d;
        code.src.Complex complex60 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double61 = complex60.abs();
        code.src.Complex complex62 = complex48.add(complex60);
        java.lang.String str63 = complex60.toString();
        code.src.Complex complex66 = new code.src.Complex(625.6708893128759d, 170.71953646075502d);
        code.src.Complex complex67 = complex60.sub(complex66);
        complex67.real = 100;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "(-0.0,0.0)" + "'", str63, "(-0.0,0.0)");
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        code.src.Complex complex2 = new code.src.Complex(0.2324571024365446d, 788.0924986456808d);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        code.src.Complex complex2 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str3 = complex2.toString();
        code.src.Complex complex6 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex7 = complex2.sub(complex6);
        complex2.real = (-213613.9212426372d);
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        double double26 = complex25.real;
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        double double34 = complex33.imaginary;
        code.src.Complex complex35 = complex25.sub(complex33);
        code.src.Complex complex38 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex39 = complex25.multiply(complex38);
        double double40 = complex25.abs();
        java.lang.String str41 = complex25.toString();
        complex25.imaginary = 235.63140523513093d;
        code.src.Complex complex44 = complex2.add(complex25);
        code.src.Complex complex47 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        complex47.real = 1051.4948429356753d;
        complex47.real = 9.013372407959515d;
        code.src.Complex complex52 = complex2.sub(complex47);
        double double53 = complex2.abs();
        double double54 = complex2.real;
        complex2.imaginary = 488.02853129039795d;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "(100.0,10.0)" + "'", str3, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 290.95719905143267d + "'", double26 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 437.56491210010614d + "'", double34 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 525.4704025737593d + "'", double40 == 525.4704025737593d);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str41, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 213613.92147670433d + "'", double53 == 213613.92147670433d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-213613.9212426372d) + "'", double54 == (-213613.9212426372d));
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        code.src.Complex complex0 = new code.src.Complex();
        complex0.real = 1L;
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = complex0.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex36.sub(complex43);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex43.add(complex48);
        code.src.Complex complex52 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex53 = complex48.add(complex52);
        code.src.Complex complex56 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex57 = complex53.add(complex56);
        code.src.Complex complex60 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex63 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex64 = complex60.add(complex63);
        double double65 = complex60.imaginary;
        code.src.Complex complex66 = complex56.multiply(complex60);
        double double67 = complex66.abs();
        java.lang.String str68 = complex66.toString();
        java.lang.String str69 = complex66.toString();
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 582.9143981028653d + "'", double37 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + (-317.11773840932915d) + "'", double65 == (-317.11773840932915d));
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 8243.654474996218d + "'", double67 == 8243.654474996218d);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "(-1719.8913692752199,-8062.246137461803)" + "'", str68, "(-1719.8913692752199,-8062.246137461803)");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "(-1719.8913692752199,-8062.246137461803)" + "'", str69, "(-1719.8913692752199,-8062.246137461803)");
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex16 = new code.src.Complex();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        double double50 = complex49.real;
        code.src.Complex complex51 = complex16.multiply(complex49);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex67.add(complex83);
        java.lang.String str85 = complex67.toString();
        double double86 = complex67.abs();
        code.src.Complex complex87 = complex16.multiply(complex67);
        code.src.Complex complex88 = complex15.add(complex87);
        complex15.real = (-198.14967628541848d);
        complex15.real = 148.66068747318505d;
        complex15.imaginary = 309.0529189565759d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 581.9143981028653d + "'", double50 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str85, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 525.4704025737593d + "'", double86 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        code.src.Complex complex2 = code.src.Complex.polar(0.0d, 99.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        code.src.Complex complex2 = new code.src.Complex(318.2958031472754d, 1042.070607321742d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        code.src.Complex complex36 = new code.src.Complex();
        code.src.Complex complex37 = complex35.add(complex36);
        double double38 = complex35.imaginary;
        double double39 = complex35.abs();
        double double40 = complex35.imaginary;
        code.src.Complex complex43 = code.src.Complex.polar((-317.11773840932915d), 445.65251212240173d);
        code.src.Complex complex46 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        double double47 = complex46.abs();
        code.src.Complex complex50 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str51 = complex50.toString();
        code.src.Complex complex52 = complex46.multiply(complex50);
        double double53 = complex50.real;
        complex50.imaginary = (-198.14967628541848d);
        code.src.Complex complex58 = code.src.Complex.polar((-489.10687533685115d), 520.0d);
        code.src.Complex complex61 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex62 = complex58.add(complex61);
        code.src.Complex complex63 = complex50.sub(complex61);
        code.src.Complex complex64 = complex43.multiply(complex63);
        code.src.Complex complex65 = complex35.multiply(complex64);
        double double66 = complex65.abs();
        code.src.Complex complex67 = complex2.multiply(complex65);
        double double68 = complex2.imaginary;
        complex2.imaginary = (-468.7234411152983d);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 875.1298242002123d + "'", double38 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 1050.9408051475186d + "'", double39 == 1050.9408051475186d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 875.1298242002123d + "'", double40 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "(100.0,10.0)" + "'", str51, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 8.230399429810259E7d + "'", double66 == 8.230399429810259E7d);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 1042.070607321742d + "'", double68 == 1042.070607321742d);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex39 = new code.src.Complex();
        complex39.real = 1L;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex75 = complex39.add(complex74);
        double double76 = complex75.real;
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex75.sub(complex82);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex82.add(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex92 = complex87.add(complex91);
        code.src.Complex complex93 = complex36.multiply(complex92);
        code.src.Complex complex94 = complex2.multiply(complex36);
        complex94.real = 100L;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 582.9143981028653d + "'", double76 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        code.src.Complex complex2 = code.src.Complex.polar(522.5935322982863d, (double) (short) 100);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        code.src.Complex complex2 = code.src.Complex.polar(10.0d, (double) '4');
        double double3 = complex2.imaginary;
        code.src.Complex complex6 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex7 = new code.src.Complex();
        complex7.real = 1L;
        code.src.Complex complex12 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex15 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex16 = complex12.multiply(complex15);
        java.lang.String str17 = complex12.toString();
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        code.src.Complex complex25 = complex12.add(complex24);
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        java.lang.String str33 = complex28.toString();
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        code.src.Complex complex41 = complex28.add(complex40);
        code.src.Complex complex42 = complex25.add(complex41);
        code.src.Complex complex43 = complex7.add(complex42);
        code.src.Complex complex44 = complex6.add(complex42);
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        double double52 = complex50.imaginary;
        java.lang.String str53 = complex50.toString();
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double57 = complex56.abs();
        double double58 = complex56.real;
        code.src.Complex complex59 = complex50.sub(complex56);
        code.src.Complex complex60 = complex42.sub(complex50);
        double double61 = complex42.real;
        code.src.Complex complex62 = complex2.multiply(complex42);
        code.src.Complex complex65 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex68 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex69 = complex65.multiply(complex68);
        java.lang.String str70 = complex65.toString();
        java.lang.String str71 = complex65.toString();
        code.src.Complex complex72 = complex62.multiply(complex65);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 9.866275920404853d + "'", double3 == 9.866275920404853d);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "(10.0,0.0)" + "'", str17, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(10.0,0.0)" + "'", str33, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 43.756491210010616d + "'", double52 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str53, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 52.0d + "'", double57 == 52.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 28.09571990514327d + "'", double58 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 581.9143981028653d + "'", double61 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "(10.0,0.0)" + "'", str70, "(10.0,0.0)");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(10.0,0.0)" + "'", str71, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex72);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        code.src.Complex complex2 = new code.src.Complex(1.0d, 28.09571990514327d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        java.lang.String str26 = complex21.toString();
        code.src.Complex complex29 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex32 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex33 = complex29.multiply(complex32);
        code.src.Complex complex34 = complex21.add(complex33);
        code.src.Complex complex35 = complex18.add(complex34);
        java.lang.String str36 = complex18.toString();
        double double37 = complex18.abs();
        double double38 = complex18.real;
        complex18.imaginary = 582.9143981028653d;
        complex18.real = 0.0f;
        code.src.Complex complex43 = complex2.sub(complex18);
        double double44 = complex43.real;
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "(10.0,0.0)" + "'", str26, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str36, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 525.4704025737593d + "'", double37 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 290.95719905143267d + "'", double38 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 1.0d + "'", double44 == 1.0d);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex33.sub(complex53);
        double double59 = complex33.abs();
        code.src.Complex complex60 = complex14.multiply(complex33);
        double double61 = complex60.abs();
        java.lang.String str62 = complex60.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str16, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 589.1068753368511d + "'", double17 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 525.4704025737593d + "'", double59 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 354080.08284857025d + "'", double61 == 354080.08284857025d);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "(28269.6419364881,352949.7590519551)" + "'", str62, "(28269.6419364881,352949.7590519551)");
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        code.src.Complex complex2 = new code.src.Complex((-393.80842089009553d), 58.24763401216367d);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        code.src.Complex complex2 = code.src.Complex.polar(664.513247068464d, 51.46657711748192d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        code.src.Complex complex2 = new code.src.Complex(214489.27308040016d, 1046.2741264173828d);
        double double3 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 214489.27308040016d + "'", double3 == 214489.27308040016d);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex40.real = 10;
        code.src.Complex complex43 = complex32.multiply(complex40);
        code.src.Complex complex46 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex47 = complex40.add(complex46);
        complex40.imaginary = '#';
        code.src.Complex complex50 = complex2.add(complex40);
        code.src.Complex complex53 = code.src.Complex.polar((-180.95719905143267d), 213613.92387355183d);
        code.src.Complex complex54 = complex2.multiply(complex53);
        code.src.Complex complex57 = new code.src.Complex((double) 100, (double) 10.0f);
        complex57.imaginary = 100L;
        java.lang.String str60 = complex57.toString();
        code.src.Complex complex61 = complex2.multiply(complex57);
        double double62 = complex61.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(100.0,100.0)" + "'", str60, "(100.0,100.0)");
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + (-24986.618709695285d) + "'", double62 == (-24986.618709695285d));
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex5 = code.src.Complex.polar(28.09571990514327d, (double) 0);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex44 = complex5.add(complex42);
        code.src.Complex complex45 = complex2.multiply(complex44);
        double double46 = complex2.imaginary;
        complex2.imaginary = (byte) 0;
        double double49 = complex2.abs();
        code.src.Complex complex52 = new code.src.Complex(437.56491210010614d, (-393.80842089009553d));
        code.src.Complex complex53 = complex2.sub(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) (short) 0, 8.414709848078965d);
        double double57 = complex56.real;
        code.src.Complex complex58 = complex53.add(complex56);
        code.src.Complex complex61 = code.src.Complex.polar(875.1869567153606d, (double) (short) -1);
        complex61.real = 35.0d;
        code.src.Complex complex64 = complex58.add(complex61);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + (-317.11773840932915d) + "'", double46 == (-317.11773840932915d));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 10.0d + "'", double49 == 10.0d);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex64);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        code.src.Complex complex2 = code.src.Complex.polar(290.95719905143267d, (double) 1.0f);
        code.src.Complex complex5 = new code.src.Complex((double) ' ', 100.00499987500625d);
        code.src.Complex complex6 = complex2.sub(complex5);
        code.src.Complex complex9 = code.src.Complex.polar(994.0878718290595d, (double) (byte) -1);
        code.src.Complex complex10 = complex5.sub(complex9);
        double double11 = complex9.imaginary;
        code.src.Complex complex14 = code.src.Complex.polar((-317.11773840932915d), (double) 0.0f);
        complex14.real = (-278.7120481991623d);
        code.src.Complex complex17 = complex9.multiply(complex14);
        code.src.Complex complex20 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex23 = code.src.Complex.polar((double) (byte) 10, (double) (short) 0);
        code.src.Complex complex24 = complex20.multiply(complex23);
        double double25 = complex20.imaginary;
        double double26 = complex20.real;
        complex20.real = 552238.2879620573d;
        code.src.Complex complex31 = code.src.Complex.polar((double) (byte) 1, (double) 0.0f);
        code.src.Complex complex34 = new code.src.Complex(100.0d, (-1.0d));
        code.src.Complex complex35 = complex31.add(complex34);
        code.src.Complex complex38 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        java.lang.String str46 = complex41.toString();
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        code.src.Complex complex54 = complex41.add(complex53);
        double double55 = complex54.real;
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex62.imaginary;
        code.src.Complex complex64 = complex54.sub(complex62);
        code.src.Complex complex65 = complex38.add(complex64);
        code.src.Complex complex66 = complex35.add(complex38);
        code.src.Complex complex67 = complex20.add(complex66);
        code.src.Complex complex68 = complex9.sub(complex66);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-836.4961004935847d) + "'", double11 == (-836.4961004935847d));
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 907.1298242002123d + "'", double25 == 907.1298242002123d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 28.09571990514327d + "'", double26 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "(10.0,0.0)" + "'", str46, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 290.95719905143267d + "'", double55 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 437.56491210010614d + "'", double63 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        double double7 = complex5.imaginary;
        double double8 = complex5.abs();
        double double9 = complex5.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 43.756491210010616d + "'", double7 == 43.756491210010616d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 43.756491210010616d + "'", double9 == 43.756491210010616d);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        code.src.Complex complex2 = new code.src.Complex(0.0d, (-10.0d));
        complex2.real = (-100.59299479274858d);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        complex13.imaginary = 280.95719905143267d;
        code.src.Complex complex18 = code.src.Complex.polar((double) (short) -1, (double) (byte) 0);
        code.src.Complex complex21 = code.src.Complex.polar(28.09571990514327d, (-213613.9212426372d));
        code.src.Complex complex22 = complex18.sub(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex24 = complex13.multiply(complex18);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(-1.0,-0.0)" + "'", str23, "(-1.0,-0.0)");
        org.junit.Assert.assertNotNull(complex24);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        code.src.Complex complex2 = new code.src.Complex(12046.425621707125d, 114.57729804551057d);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        code.src.Complex complex2 = code.src.Complex.polar(119.9377093343606d, 112.71645842555559d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex52 = complex5.add(complex49);
        code.src.Complex complex55 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex61.imaginary;
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex55.sub(complex61);
        code.src.Complex complex66 = complex5.multiply(complex65);
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        java.lang.String str74 = complex69.toString();
        code.src.Complex complex77 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex77.real = 10;
        code.src.Complex complex80 = complex69.multiply(complex77);
        java.lang.String str81 = complex69.toString();
        code.src.Complex complex84 = code.src.Complex.polar(317.11773840932915d, 663.590879631022d);
        code.src.Complex complex85 = complex69.multiply(complex84);
        code.src.Complex complex86 = complex66.sub(complex69);
        code.src.Complex complex87 = complex2.sub(complex66);
        double double88 = complex87.real;
        double double89 = complex87.real;
        code.src.Complex complex92 = code.src.Complex.polar(875.1298242002123d, (-43.756491210010616d));
        complex92.real = 1051.4948429356753d;
        code.src.Complex complex95 = complex87.multiply(complex92);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 43.756491210010616d + "'", double63 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str64, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "(10.0,0.0)" + "'", str74, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex77);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(10.0,0.0)" + "'", str81, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-4749.336038853687d) + "'", double88 == (-4749.336038853687d));
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + (-4749.336038853687d) + "'", double89 == (-4749.336038853687d));
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex95);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        code.src.Complex complex2 = new code.src.Complex(100.0d, (-1.0d));
        double double3 = complex2.abs();
        java.lang.String str4 = complex2.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 100.00499987500625d + "'", double3 == 100.00499987500625d);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "(100.0,-1.0)" + "'", str4, "(100.0,-1.0)");
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        java.lang.String str16 = complex2.toString();
        complex2.imaginary = '#';
        code.src.Complex complex21 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex24 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex25 = complex21.multiply(complex24);
        double double26 = complex24.imaginary;
        java.lang.String str27 = complex24.toString();
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double31 = complex30.abs();
        double double32 = complex30.real;
        code.src.Complex complex33 = complex24.sub(complex30);
        code.src.Complex complex34 = complex2.add(complex24);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 43.756491210010616d + "'", double26 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str27, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 52.0d + "'", double31 == 52.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 28.09571990514327d + "'", double32 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        code.src.Complex complex2 = code.src.Complex.polar(12046.425621707125d, 0.0d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        code.src.Complex complex2 = new code.src.Complex(8101.177047836208d, 5723247.3589574285d);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        code.src.Complex complex2 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        complex2.real = 582.9143981028653d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str8 = complex7.toString();
        code.src.Complex complex11 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex12 = complex7.sub(complex11);
        code.src.Complex complex13 = complex2.sub(complex11);
        double double14 = complex13.imaginary;
        double double15 = complex13.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "(100.0,10.0)" + "'", str8, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 360.87422961933976d + "'", double14 == 360.87422961933976d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 360.87422961933976d + "'", double15 == 360.87422961933976d);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        code.src.Complex complex2 = code.src.Complex.polar((-62.9683262670583d), (-0.5063656411097588d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        code.src.Complex complex36 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex37 = complex15.sub(complex36);
        java.lang.String str38 = complex37.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 100, (double) 10.0f);
        complex41.real = (byte) 1;
        complex41.imaginary = (short) 100;
        code.src.Complex complex48 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex51 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex52 = complex48.multiply(complex51);
        java.lang.String str53 = complex48.toString();
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex48.add(complex60);
        double double62 = complex61.real;
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex61.multiply(complex65);
        code.src.Complex complex67 = complex41.multiply(complex61);
        code.src.Complex complex70 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str71 = complex70.toString();
        code.src.Complex complex74 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex75 = complex70.sub(complex74);
        complex70.imaginary = (-1.0f);
        code.src.Complex complex78 = complex41.sub(complex70);
        double double79 = complex41.real;
        code.src.Complex complex80 = complex37.multiply(complex41);
        complex37.imaginary = 1246.4447622874072d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str38, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(10.0,0.0)" + "'", str53, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 290.95719905143267d + "'", double62 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "(100.0,10.0)" + "'", str71, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 1.0d + "'", double79 == 1.0d);
        org.junit.Assert.assertNotNull(complex80);
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        code.src.Complex complex2 = new code.src.Complex((double) 1.0f, (double) '#');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex9 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex10 = complex6.add(complex9);
        complex10.real = 0.0d;
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex15.imaginary = (short) 0;
        complex15.imaginary = 100.0f;
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str23 = complex22.toString();
        code.src.Complex complex26 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex27 = complex22.sub(complex26);
        code.src.Complex complex28 = complex15.multiply(complex27);
        java.lang.String str29 = complex27.toString();
        double double30 = complex27.real;
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex63 = complex46.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex46.sub(complex66);
        double double72 = complex46.abs();
        code.src.Complex complex73 = complex27.multiply(complex46);
        code.src.Complex complex74 = complex10.add(complex46);
        java.lang.String str75 = complex74.toString();
        code.src.Complex complex76 = complex2.add(complex74);
        double double77 = complex74.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.014282800023196d + "'", double3 == 35.014282800023196d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,10.0)" + "'", str23, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str29, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 589.1068753368511d + "'", double30 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 525.4704025737593d + "'", double72 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str75, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 290.95719905143267d + "'", double77 == 290.95719905143267d);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        code.src.Complex complex2 = code.src.Complex.polar((-50.09571990514327d), 58.24763401216367d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        code.src.Complex complex2 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex5 = new code.src.Complex(290.95719905143267d, (-213613.9212426372d));
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        complex9.real = (byte) 1;
        complex9.imaginary = (short) 100;
        code.src.Complex complex14 = new code.src.Complex();
        complex14.real = 1L;
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        code.src.Complex complex50 = complex14.add(complex49);
        double double51 = complex14.imaginary;
        double double52 = complex14.imaginary;
        java.lang.String str53 = complex14.toString();
        code.src.Complex complex54 = complex9.sub(complex14);
        code.src.Complex complex57 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        double double65 = complex63.imaginary;
        java.lang.String str66 = complex63.toString();
        code.src.Complex complex67 = complex57.sub(complex63);
        code.src.Complex complex70 = new code.src.Complex((double) 100, (double) 10.0f);
        complex70.real = (byte) 1;
        code.src.Complex complex73 = complex63.multiply(complex70);
        code.src.Complex complex74 = complex54.sub(complex73);
        code.src.Complex complex75 = complex6.sub(complex74);
        complex74.real = 291.13071236105446d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "(1.0,0.0)" + "'", str53, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 43.756491210010616d + "'", double65 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str66, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        code.src.Complex complex16 = new code.src.Complex();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        java.lang.String str24 = complex19.toString();
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        code.src.Complex complex32 = complex19.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        java.lang.String str40 = complex35.toString();
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex35.add(complex47);
        code.src.Complex complex49 = complex32.add(complex48);
        double double50 = complex49.real;
        code.src.Complex complex51 = complex16.multiply(complex49);
        code.src.Complex complex54 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex57 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex58 = complex54.multiply(complex57);
        java.lang.String str59 = complex54.toString();
        code.src.Complex complex62 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex65 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex66 = complex62.multiply(complex65);
        code.src.Complex complex67 = complex54.add(complex66);
        code.src.Complex complex70 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex73 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex74 = complex70.multiply(complex73);
        java.lang.String str75 = complex70.toString();
        code.src.Complex complex78 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex81 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex82 = complex78.multiply(complex81);
        code.src.Complex complex83 = complex70.add(complex82);
        code.src.Complex complex84 = complex67.add(complex83);
        java.lang.String str85 = complex67.toString();
        double double86 = complex67.abs();
        code.src.Complex complex87 = complex16.multiply(complex67);
        code.src.Complex complex88 = complex15.add(complex87);
        complex15.real = (-198.14967628541848d);
        double double91 = complex15.abs();
        complex15.imaginary = 528.7686600293723d;
        code.src.Complex complex96 = code.src.Complex.polar(572.0d, 525.4704025737593d);
        complex96.real = 30.29973903975837d;
        code.src.Complex complex99 = complex15.multiply(complex96);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "(10.0,0.0)" + "'", str24, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "(10.0,0.0)" + "'", str40, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 581.9143981028653d + "'", double50 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(10.0,0.0)" + "'", str59, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(10.0,0.0)" + "'", str75, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str85, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 525.4704025737593d + "'", double86 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 58911.02077697936d + "'", double91 == 58911.02077697936d);
        org.junit.Assert.assertNotNull(complex96);
        org.junit.Assert.assertNotNull(complex99);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        code.src.Complex complex2 = new code.src.Complex(1118.3729221500103d, 904.2902405342309d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 904.2902405342309d + "'", double3 == 904.2902405342309d);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        code.src.Complex complex2 = code.src.Complex.polar((double) '#', 625.6708893128759d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        code.src.Complex complex2 = new code.src.Complex(290.9589175121722d, (double) 10);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = complex2.add(complex5);
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        java.lang.String str21 = complex16.toString();
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        code.src.Complex complex29 = complex16.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex43 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex44 = complex40.multiply(complex43);
        code.src.Complex complex45 = complex32.add(complex44);
        code.src.Complex complex46 = complex29.add(complex45);
        code.src.Complex complex47 = complex13.add(complex29);
        code.src.Complex complex50 = code.src.Complex.polar((double) 100.0f, (double) 10.0f);
        double double51 = complex50.imaginary;
        double double52 = complex50.imaginary;
        code.src.Complex complex53 = complex29.sub(complex50);
        code.src.Complex complex54 = complex10.add(complex29);
        code.src.Complex complex57 = code.src.Complex.polar(71852.21111515388d, 589.1068753368511d);
        java.lang.String str58 = complex57.toString();
        java.lang.String str59 = complex57.toString();
        code.src.Complex complex60 = complex10.add(complex57);
        code.src.Complex complex63 = code.src.Complex.polar(554.8186781977221d, 8.230399429810259E7d);
        code.src.Complex complex64 = complex10.add(complex63);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "(10.0,0.0)" + "'", str21, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + (-54.40211108893698d) + "'", double51 == (-54.40211108893698d));
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + (-54.40211108893698d) + "'", double52 == (-54.40211108893698d));
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(4183.224855649765,-71730.33439169037)" + "'", str58, "(4183.224855649765,-71730.33439169037)");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "(4183.224855649765,-71730.33439169037)" + "'", str59, "(4183.224855649765,-71730.33439169037)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex35 = new code.src.Complex((double) (short) 10, (-317.11773840932915d));
        code.src.Complex complex36 = complex15.sub(complex35);
        complex35.imaginary = 46.529597426240684d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex36);
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        code.src.Complex complex2 = code.src.Complex.polar((double) ' ', (double) (byte) 100);
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 31.999999999999996d + "'", double3 == 31.999999999999996d);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.imaginary;
        double double36 = complex32.real;
        java.lang.String str37 = complex32.toString();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 875.1298242002123d + "'", double35 == 875.1298242002123d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 581.9143981028653d + "'", double36 == 581.9143981028653d);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str37, "(581.9143981028653,875.1298242002123)");
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        code.src.Complex complex2 = new code.src.Complex(0.1820978992688351d, 276080.4779057942d);
        complex2.imaginary = 352949.8873651941d;
        code.src.Complex complex7 = code.src.Complex.polar(572.0d, (-393.80842089009553d));
        complex7.real = 0.0d;
        code.src.Complex complex12 = new code.src.Complex(3624.868782803608d, 0.0d);
        code.src.Complex complex13 = complex7.sub(complex12);
        code.src.Complex complex14 = complex2.add(complex12);
        org.junit.Assert.assertNotNull(complex7);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 0, (double) ' ');
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        code.src.Complex complex40 = complex2.add(complex38);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        java.lang.String str48 = complex43.toString();
        code.src.Complex complex51 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex54 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex55 = complex51.multiply(complex54);
        code.src.Complex complex56 = complex43.add(complex55);
        code.src.Complex complex59 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex62 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex63 = complex59.multiply(complex62);
        java.lang.String str64 = complex59.toString();
        code.src.Complex complex67 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex70 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex71 = complex67.multiply(complex70);
        code.src.Complex complex72 = complex59.add(complex71);
        code.src.Complex complex73 = complex56.add(complex72);
        code.src.Complex complex74 = new code.src.Complex();
        code.src.Complex complex75 = complex73.add(complex74);
        code.src.Complex complex76 = complex40.add(complex74);
        complex40.imaginary = (-1);
        code.src.Complex complex81 = new code.src.Complex(10.0d, 875.1298242002123d);
        code.src.Complex complex82 = complex40.sub(complex81);
        complex40.real = (-389.10687533685115d);
        java.lang.Class<?> wildcardClass85 = complex40.getClass();
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "(10.0,0.0)" + "'", str48, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(10.0,0.0)" + "'", str64, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        code.src.Complex complex2 = code.src.Complex.polar((-17.518915988621924d), 553.5830136072623d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        code.src.Complex complex2 = new code.src.Complex(939.1298242002123d, 181.33944529425008d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        double double6 = complex5.abs();
        double double7 = complex5.real;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex40 = complex23.add(complex39);
        double double41 = complex23.real;
        double double42 = complex23.real;
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        java.lang.String str50 = complex45.toString();
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex45.add(complex57);
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        java.lang.String str66 = complex61.toString();
        code.src.Complex complex69 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex72 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex73 = complex69.multiply(complex72);
        code.src.Complex complex74 = complex61.add(complex73);
        code.src.Complex complex75 = complex58.add(complex74);
        code.src.Complex complex76 = complex23.sub(complex58);
        double double77 = complex76.abs();
        code.src.Complex complex78 = complex5.multiply(complex76);
        code.src.Complex complex79 = complex2.multiply(complex76);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 52.0d + "'", double6 == 52.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 28.09571990514327d + "'", double7 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 290.95719905143267d + "'", double41 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 290.95719905143267d + "'", double42 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "(10.0,0.0)" + "'", str50, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "(10.0,0.0)" + "'", str66, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        org.junit.Assert.assertNotNull(complex78);
        org.junit.Assert.assertNotNull(complex79);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        java.lang.String str33 = complex15.toString();
        double double34 = complex15.abs();
        double double35 = complex15.abs();
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "(290.95719905143267,437.56491210010614)" + "'", str33, "(290.95719905143267,437.56491210010614)");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 525.4704025737593d + "'", double34 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 525.4704025737593d + "'", double35 == 525.4704025737593d);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        code.src.Complex complex2 = code.src.Complex.polar((double) '#', (-317.11773840932915d));
        double double3 = complex2.abs();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.0d + "'", double3 == 35.0d);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        double double33 = complex15.real;
        double double34 = complex15.real;
        code.src.Complex complex37 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex40 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex41 = complex37.multiply(complex40);
        java.lang.String str42 = complex37.toString();
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex37.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        java.lang.String str58 = complex53.toString();
        code.src.Complex complex61 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex64 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex65 = complex61.multiply(complex64);
        code.src.Complex complex66 = complex53.add(complex65);
        code.src.Complex complex67 = complex50.add(complex66);
        code.src.Complex complex68 = complex15.sub(complex50);
        double double69 = complex50.abs();
        complex50.imaginary = 1.0d;
        double double72 = complex50.real;
        complex50.imaginary = 10.0d;
        complex50.real = 89.47120611810979d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 290.95719905143267d + "'", double33 == 290.95719905143267d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 290.95719905143267d + "'", double34 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "(10.0,0.0)" + "'", str42, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "(10.0,0.0)" + "'", str58, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 525.4704025737593d + "'", double69 == 525.4704025737593d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 290.95719905143267d + "'", double72 == 290.95719905143267d);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        code.src.Complex complex2 = new code.src.Complex(520.0d, 46.529597426240684d);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        code.src.Complex complex2 = code.src.Complex.polar(525.4704025737593d, (double) '#');
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        double double19 = complex18.real;
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        double double27 = complex26.imaginary;
        code.src.Complex complex28 = complex18.sub(complex26);
        code.src.Complex complex29 = complex2.add(complex28);
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        java.lang.String str37 = complex32.toString();
        code.src.Complex complex40 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex40.real = 10;
        code.src.Complex complex43 = complex32.multiply(complex40);
        code.src.Complex complex46 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex47 = complex40.add(complex46);
        complex40.imaginary = '#';
        code.src.Complex complex50 = complex2.add(complex40);
        code.src.Complex complex53 = code.src.Complex.polar((-180.95719905143267d), 213613.92387355183d);
        code.src.Complex complex54 = complex2.multiply(complex53);
        complex53.imaginary = 887156.2400733333d;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 290.95719905143267d + "'", double19 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 437.56491210010614d + "'", double27 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "(10.0,0.0)" + "'", str37, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        double double8 = complex2.real;
        code.src.Complex complex11 = new code.src.Complex(28.09571990514327d, 907.1298242002123d);
        code.src.Complex complex12 = complex2.multiply(complex11);
        complex11.real = (byte) 100;
        code.src.Complex complex17 = code.src.Complex.polar(214489.24976920983d, (-36073.24762350389d));
        code.src.Complex complex18 = complex11.sub(complex17);
        double double19 = complex11.abs();
        double double20 = complex11.imaginary;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 912.6250697594868d + "'", double19 == 912.6250697594868d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 907.1298242002123d + "'", double20 == 907.1298242002123d);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        code.src.Complex complex15 = complex2.add(complex14);
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        code.src.Complex complex32 = complex15.add(complex31);
        code.src.Complex complex33 = new code.src.Complex();
        code.src.Complex complex34 = complex32.add(complex33);
        double double35 = complex32.real;
        complex32.real = 14837.298405273943d;
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 581.9143981028653d + "'", double35 == 581.9143981028653d);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        code.src.Complex complex2 = new code.src.Complex(5002.155884140813d, 430.3716436914759d);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        code.src.Complex complex2 = new code.src.Complex(611.0101180080086d, 834.4460041012325d);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex2.imaginary = (short) 0;
        complex2.imaginary = 100.0f;
        code.src.Complex complex9 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str10 = complex9.toString();
        code.src.Complex complex13 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex14 = complex9.sub(complex13);
        code.src.Complex complex15 = complex2.multiply(complex14);
        java.lang.String str16 = complex14.toString();
        double double17 = complex14.real;
        code.src.Complex complex20 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex23 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex24 = complex20.multiply(complex23);
        java.lang.String str25 = complex20.toString();
        code.src.Complex complex28 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex31 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex32 = complex28.multiply(complex31);
        code.src.Complex complex33 = complex20.add(complex32);
        code.src.Complex complex36 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex39 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex40 = complex36.multiply(complex39);
        java.lang.String str41 = complex36.toString();
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        code.src.Complex complex49 = complex36.add(complex48);
        code.src.Complex complex50 = complex33.add(complex49);
        code.src.Complex complex53 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex56 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex57 = complex53.multiply(complex56);
        code.src.Complex complex58 = complex33.sub(complex53);
        double double59 = complex33.abs();
        code.src.Complex complex60 = complex14.multiply(complex33);
        java.lang.String str61 = complex60.toString();
        double double62 = complex60.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(100.0,10.0)" + "'", str10, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str16, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 589.1068753368511d + "'", double17 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "(10.0,0.0)" + "'", str25, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertNotNull(complex32);
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "(10.0,0.0)" + "'", str41, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 525.4704025737593d + "'", double59 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(28269.6419364881,352949.7590519551)" + "'", str61, "(28269.6419364881,352949.7590519551)");
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 352949.7590519551d + "'", double62 == 352949.7590519551d);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        code.src.Complex complex2 = code.src.Complex.polar((double) 10.0f, (-393.80842089009553d));
        complex2.real = (-0.0d);
        code.src.Complex complex5 = new code.src.Complex();
        complex5.real = 1L;
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex40 = complex23.add(complex39);
        code.src.Complex complex41 = complex5.add(complex40);
        double double42 = complex41.real;
        code.src.Complex complex45 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex48 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex49 = complex45.multiply(complex48);
        code.src.Complex complex50 = complex41.sub(complex48);
        code.src.Complex complex53 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex54 = complex48.add(complex53);
        java.lang.String str55 = complex48.toString();
        double double56 = complex48.real;
        double double57 = complex48.real;
        code.src.Complex complex60 = code.src.Complex.polar(492.8116754934422d, (double) (byte) 100);
        complex60.imaginary = ' ';
        complex60.real = 58911.02077697936d;
        code.src.Complex complex65 = complex48.add(complex60);
        double double66 = complex60.real;
        code.src.Complex complex67 = complex2.add(complex60);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 582.9143981028653d + "'", double42 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str55, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 28.09571990514327d + "'", double56 == 28.09571990514327d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 28.09571990514327d + "'", double57 == 28.09571990514327d);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 58911.02077697936d + "'", double66 == 58911.02077697936d);
        org.junit.Assert.assertNotNull(complex67);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        code.src.Complex complex2 = new code.src.Complex(200.4993765576342d, 1077.3170643789679d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        code.src.Complex complex13 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex16 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex17 = complex13.multiply(complex16);
        code.src.Complex complex18 = complex5.add(complex17);
        java.lang.String str19 = complex5.toString();
        double double20 = complex5.abs();
        complex5.real = 0.0d;
        code.src.Complex complex23 = complex2.sub(complex5);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex16);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "(10.0,0.0)" + "'", str19, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertNotNull(complex23);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        code.src.Complex complex2 = code.src.Complex.polar(141.77446878757826d, 379.96219892643893d);
        double double3 = complex2.real;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + (-139.71845396252124d) + "'", double3 == (-139.71845396252124d));
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        code.src.Complex complex2 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex5 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex6 = complex2.add(complex5);
        code.src.Complex complex9 = new code.src.Complex((double) 100.0f, (double) 100.0f);
        code.src.Complex complex12 = code.src.Complex.polar(10.0d, (double) '4');
        code.src.Complex complex13 = complex9.add(complex12);
        complex9.real = 875.1869567153606d;
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        java.lang.String str23 = complex18.toString();
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        code.src.Complex complex31 = complex18.add(complex30);
        double double32 = complex31.real;
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        double double40 = complex39.imaginary;
        code.src.Complex complex41 = complex31.sub(complex39);
        code.src.Complex complex44 = code.src.Complex.polar(0.0d, (double) (short) -1);
        code.src.Complex complex45 = complex31.multiply(complex44);
        code.src.Complex complex48 = code.src.Complex.polar(148.66068747318505d, (-272.8614791462894d));
        code.src.Complex complex49 = complex44.add(complex48);
        code.src.Complex complex50 = complex9.multiply(complex48);
        code.src.Complex complex51 = complex5.multiply(complex9);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(10.0,0.0)" + "'", str23, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 290.95719905143267d + "'", double32 == 290.95719905143267d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 437.56491210010614d + "'", double40 == 437.56491210010614d);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        code.src.Complex complex2 = code.src.Complex.polar((-317.11773840932915d), (double) (-1.0f));
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        double double49 = complex39.imaginary;
        code.src.Complex complex50 = complex2.sub(complex39);
        double double51 = complex39.imaginary;
        code.src.Complex complex54 = new code.src.Complex((double) 100, (double) 10.0f);
        complex54.imaginary = '4';
        code.src.Complex complex59 = new code.src.Complex((double) (short) 1, 290.95719905143267d);
        java.lang.String str60 = complex59.toString();
        double double61 = complex59.abs();
        code.src.Complex complex62 = complex54.multiply(complex59);
        code.src.Complex complex63 = complex39.sub(complex59);
        double double64 = complex63.imaginary;
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 875.1298242002123d + "'", double49 == 875.1298242002123d);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 875.1298242002123d + "'", double51 == 875.1298242002123d);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "(1.0,290.95719905143267)" + "'", str60, "(1.0,290.95719905143267)");
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 290.9589175121722d + "'", double61 == 290.9589175121722d);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 584.1726251487796d + "'", double64 == 584.1726251487796d);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        code.src.Complex complex2 = code.src.Complex.polar(467.07736184459986d, (-285.04312220503374d));
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        code.src.Complex complex2 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex5 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex6 = complex2.multiply(complex5);
        java.lang.String str7 = complex2.toString();
        code.src.Complex complex10 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex10.real = 10;
        code.src.Complex complex13 = complex2.multiply(complex10);
        code.src.Complex complex16 = new code.src.Complex(100.0d, (double) 100);
        code.src.Complex complex17 = complex10.add(complex16);
        java.lang.String str18 = complex10.toString();
        code.src.Complex complex21 = code.src.Complex.polar(309.0529189565759d, 0.0d);
        double double22 = complex21.imaginary;
        code.src.Complex complex23 = complex10.add(complex21);
        code.src.Complex complex26 = code.src.Complex.polar(1077.733215908709d, 291.95719905143267d);
        code.src.Complex complex29 = new code.src.Complex((double) 1.0f, (double) 10.0f);
        code.src.Complex complex30 = complex26.add(complex29);
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex63 = complex46.add(complex62);
        code.src.Complex complex64 = new code.src.Complex();
        code.src.Complex complex65 = complex63.add(complex64);
        complex63.real = 10;
        code.src.Complex complex68 = complex26.sub(complex63);
        code.src.Complex complex69 = complex23.multiply(complex63);
        org.junit.Assert.assertNotNull(complex5);
        org.junit.Assert.assertNotNull(complex6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "(10.0,0.0)" + "'", str7, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "(10.0,0.0)" + "'", str18, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex68);
        org.junit.Assert.assertNotNull(complex69);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        code.src.Complex complex2 = new code.src.Complex((-438.56491210010614d), (-363960.5478434686d));
        complex2.real = 816.5801168455955d;
        code.src.Complex complex7 = new code.src.Complex((double) 100, (double) 10.0f);
        code.src.Complex complex10 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex13 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex14 = complex10.multiply(complex13);
        java.lang.String str15 = complex10.toString();
        code.src.Complex complex18 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex21 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex22 = complex18.multiply(complex21);
        code.src.Complex complex23 = complex10.add(complex22);
        code.src.Complex complex26 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex29 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex30 = complex26.multiply(complex29);
        java.lang.String str31 = complex26.toString();
        code.src.Complex complex34 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex37 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex38 = complex34.multiply(complex37);
        code.src.Complex complex39 = complex26.add(complex38);
        code.src.Complex complex40 = complex23.add(complex39);
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex23.sub(complex43);
        code.src.Complex complex49 = new code.src.Complex();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        java.lang.String str57 = complex52.toString();
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        code.src.Complex complex65 = complex52.add(complex64);
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        java.lang.String str73 = complex68.toString();
        code.src.Complex complex76 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex79 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        code.src.Complex complex81 = complex68.add(complex80);
        code.src.Complex complex82 = complex65.add(complex81);
        double double83 = complex82.real;
        code.src.Complex complex84 = complex49.multiply(complex82);
        code.src.Complex complex85 = complex23.multiply(complex82);
        code.src.Complex complex86 = complex7.sub(complex85);
        complex7.imaginary = 0L;
        complex7.real = (byte) 10;
        code.src.Complex complex91 = complex2.add(complex7);
        code.src.Complex complex94 = new code.src.Complex(0.0d, 5225.935322982863d);
        code.src.Complex complex95 = complex91.multiply(complex94);
        double double96 = complex91.imaginary;
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "(10.0,0.0)" + "'", str15, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex29);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "(10.0,0.0)" + "'", str31, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "(10.0,0.0)" + "'", str57, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "(10.0,0.0)" + "'", str73, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex79);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertNotNull(complex81);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 581.9143981028653d + "'", double83 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex85);
        org.junit.Assert.assertNotNull(complex86);
        org.junit.Assert.assertNotNull(complex91);
        org.junit.Assert.assertNotNull(complex95);
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + (-363960.5478434686d) + "'", double96 == (-363960.5478434686d));
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        code.src.Complex complex2 = code.src.Complex.polar(104.0d, 266.8453756393511d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        code.src.Complex complex2 = new code.src.Complex(572.0d, (double) 1L);
        code.src.Complex complex5 = new code.src.Complex((double) 100, (double) 10.0f);
        complex5.real = (byte) 1;
        complex5.imaginary = (short) 100;
        code.src.Complex complex10 = new code.src.Complex();
        complex10.real = 1L;
        code.src.Complex complex15 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex18 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex19 = complex15.multiply(complex18);
        java.lang.String str20 = complex15.toString();
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        code.src.Complex complex28 = complex15.add(complex27);
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        java.lang.String str36 = complex31.toString();
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        code.src.Complex complex44 = complex31.add(complex43);
        code.src.Complex complex45 = complex28.add(complex44);
        code.src.Complex complex46 = complex10.add(complex45);
        double double47 = complex10.imaginary;
        double double48 = complex10.imaginary;
        java.lang.String str49 = complex10.toString();
        code.src.Complex complex50 = complex5.sub(complex10);
        code.src.Complex complex51 = complex2.multiply(complex50);
        code.src.Complex complex54 = code.src.Complex.polar((double) (short) 0, (-213613.9212426372d));
        code.src.Complex complex55 = complex51.multiply(complex54);
        complex51.real = 511.0653454891018d;
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "(10.0,0.0)" + "'", str20, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "(10.0,0.0)" + "'", str36, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(1.0,0.0)" + "'", str49, "(1.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex54);
        org.junit.Assert.assertNotNull(complex55);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        code.src.Complex complex2 = new code.src.Complex(290.95719905143267d, 0.0d);
        double double3 = complex2.imaginary;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        code.src.Complex complex2 = new code.src.Complex((double) 1.0f, (double) '#');
        double double3 = complex2.abs();
        code.src.Complex complex6 = new code.src.Complex(43.756491210010616d, 0.0d);
        code.src.Complex complex9 = new code.src.Complex(10.0d, (-906.2883532154044d));
        code.src.Complex complex10 = complex6.add(complex9);
        complex10.real = 0.0d;
        code.src.Complex complex15 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        complex15.imaginary = (short) 0;
        complex15.imaginary = 100.0f;
        code.src.Complex complex22 = new code.src.Complex((double) 100, (double) 10.0f);
        java.lang.String str23 = complex22.toString();
        code.src.Complex complex26 = code.src.Complex.polar(582.9143981028653d, (double) (byte) 10);
        code.src.Complex complex27 = complex22.sub(complex26);
        code.src.Complex complex28 = complex15.multiply(complex27);
        java.lang.String str29 = complex27.toString();
        double double30 = complex27.real;
        code.src.Complex complex33 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex36 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex37 = complex33.multiply(complex36);
        java.lang.String str38 = complex33.toString();
        code.src.Complex complex41 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex44 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex45 = complex41.multiply(complex44);
        code.src.Complex complex46 = complex33.add(complex45);
        code.src.Complex complex49 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex52 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex53 = complex49.multiply(complex52);
        java.lang.String str54 = complex49.toString();
        code.src.Complex complex57 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex60 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex61 = complex57.multiply(complex60);
        code.src.Complex complex62 = complex49.add(complex61);
        code.src.Complex complex63 = complex46.add(complex62);
        code.src.Complex complex66 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex69 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex46.sub(complex66);
        double double72 = complex46.abs();
        code.src.Complex complex73 = complex27.multiply(complex46);
        code.src.Complex complex74 = complex10.add(complex46);
        java.lang.String str75 = complex74.toString();
        code.src.Complex complex76 = complex2.add(complex74);
        code.src.Complex complex79 = new code.src.Complex(1091.0075601938674d, (double) (byte) -1);
        code.src.Complex complex80 = complex76.multiply(complex79);
        java.lang.String str81 = complex76.toString();
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 35.014282800023196d + "'", double3 == 35.014282800023196d);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "(100.0,10.0)" + "'", str23, "(100.0,10.0)");
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(589.1068753368511,327.11773840932915)" + "'", str29, "(589.1068753368511,327.11773840932915)");
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 589.1068753368511d + "'", double30 == 589.1068753368511d);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "(10.0,0.0)" + "'", str38, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex44);
        org.junit.Assert.assertNotNull(complex45);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "(10.0,0.0)" + "'", str54, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 525.4704025737593d + "'", double72 == 525.4704025737593d);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "(290.95719905143267,-468.7234411152983)" + "'", str75, "(290.95719905143267,-468.7234411152983)");
        org.junit.Assert.assertNotNull(complex76);
        org.junit.Assert.assertNotNull(complex80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "(291.95719905143267,-433.7234411152983)" + "'", str81, "(291.95719905143267,-433.7234411152983)");
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        double double50 = complex46.imaginary;
        double double51 = complex46.imaginary;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 43.756491210010616d + "'", double50 == 43.756491210010616d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 43.756491210010616d + "'", double51 == 43.756491210010616d);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        code.src.Complex complex2 = new code.src.Complex(322.91145534356957d, 1.2901027673467858d);
        code.src.Complex complex5 = new code.src.Complex(0.0d, 437.56491210010614d);
        java.lang.String str6 = complex5.toString();
        code.src.Complex complex7 = complex2.multiply(complex5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "(0.0,437.56491210010614)" + "'", str6, "(0.0,437.56491210010614)");
        org.junit.Assert.assertNotNull(complex7);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        code.src.Complex complex2 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex3 = new code.src.Complex();
        complex3.real = 1L;
        code.src.Complex complex8 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex11 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex12 = complex8.multiply(complex11);
        java.lang.String str13 = complex8.toString();
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex21 = complex8.add(complex20);
        code.src.Complex complex24 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex27 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex28 = complex24.multiply(complex27);
        java.lang.String str29 = complex24.toString();
        code.src.Complex complex32 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex35 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex36 = complex32.multiply(complex35);
        code.src.Complex complex37 = complex24.add(complex36);
        code.src.Complex complex38 = complex21.add(complex37);
        code.src.Complex complex39 = complex3.add(complex38);
        double double40 = complex39.real;
        code.src.Complex complex43 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex46 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex47 = complex43.multiply(complex46);
        code.src.Complex complex48 = complex39.sub(complex46);
        code.src.Complex complex49 = complex2.add(complex46);
        code.src.Complex complex52 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex55 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex58 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex59 = complex55.multiply(complex58);
        double double60 = complex58.imaginary;
        java.lang.String str61 = complex58.toString();
        code.src.Complex complex62 = complex52.sub(complex58);
        code.src.Complex complex63 = complex2.multiply(complex62);
        complex62.real = 109.15415943981125d;
        complex62.real = 22801.876198575297d;
        org.junit.Assert.assertNotNull(complex11);
        org.junit.Assert.assertNotNull(complex12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "(10.0,0.0)" + "'", str13, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex21);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertNotNull(complex28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "(10.0,0.0)" + "'", str29, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex37);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 582.9143981028653d + "'", double40 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex46);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex58);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 43.756491210010616d + "'", double60 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str61, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertNotNull(complex63);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        code.src.Complex complex2 = new code.src.Complex(520.4261639086258d, 0.0d);
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        code.src.Complex complex2 = code.src.Complex.polar((-29033.18836270004d), 288.43610241435874d);
        org.junit.Assert.assertNotNull(complex2);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        code.src.Complex complex2 = new code.src.Complex((-1.0d), (double) 1.0f);
        double double3 = complex2.abs();
        double double4 = complex2.real;
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 1.4142135623730951d + "'", double3 == 1.4142135623730951d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        code.src.Complex complex2 = code.src.Complex.polar(317.11773840932915d, 320.0d);
        code.src.Complex complex5 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex8 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex9 = complex5.multiply(complex8);
        java.lang.String str10 = complex5.toString();
        double double11 = complex5.real;
        java.lang.String str12 = complex5.toString();
        code.src.Complex complex13 = complex2.add(complex5);
        code.src.Complex complex16 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex19 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex20 = complex16.multiply(complex19);
        code.src.Complex complex23 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex26 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex27 = complex23.multiply(complex26);
        java.lang.String str28 = complex23.toString();
        code.src.Complex complex31 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex34 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex35 = complex31.multiply(complex34);
        code.src.Complex complex36 = complex23.add(complex35);
        code.src.Complex complex39 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex42 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex43 = complex39.multiply(complex42);
        java.lang.String str44 = complex39.toString();
        code.src.Complex complex47 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex50 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex51 = complex47.multiply(complex50);
        code.src.Complex complex52 = complex39.add(complex51);
        code.src.Complex complex53 = complex36.add(complex52);
        code.src.Complex complex56 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex59 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex60 = complex56.multiply(complex59);
        code.src.Complex complex61 = complex36.sub(complex56);
        code.src.Complex complex62 = complex19.add(complex61);
        double double63 = complex62.abs();
        code.src.Complex complex66 = new code.src.Complex(10.0d, (double) 10L);
        code.src.Complex complex69 = code.src.Complex.polar((double) '#', (double) (byte) 100);
        code.src.Complex complex70 = complex66.multiply(complex69);
        code.src.Complex complex71 = complex62.add(complex70);
        java.lang.String str72 = complex70.toString();
        code.src.Complex complex73 = complex2.sub(complex70);
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex8);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "(10.0,0.0)" + "'", str10, "(10.0,0.0)");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "(10.0,0.0)" + "'", str12, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex13);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex20);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertNotNull(complex27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "(10.0,0.0)" + "'", str28, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertNotNull(complex43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "(10.0,0.0)" + "'", str44, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex53);
        org.junit.Assert.assertNotNull(complex59);
        org.junit.Assert.assertNotNull(complex60);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 572.0d + "'", double63 == 572.0d);
        org.junit.Assert.assertNotNull(complex69);
        org.junit.Assert.assertNotNull(complex70);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "(479.0395796891049,124.58363091227383)" + "'", str72, "(479.0395796891049,124.58363091227383)");
        org.junit.Assert.assertNotNull(complex73);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        code.src.Complex complex2 = new code.src.Complex(1449.9563176358188d, 1091.0075601938674d);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        code.src.Complex complex2 = code.src.Complex.polar((double) (byte) 0, (double) 'a');
        code.src.Complex complex3 = new code.src.Complex();
        code.src.Complex complex6 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex9 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex10 = complex6.multiply(complex9);
        java.lang.String str11 = complex6.toString();
        code.src.Complex complex14 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex17 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex18 = complex14.multiply(complex17);
        code.src.Complex complex19 = complex6.add(complex18);
        code.src.Complex complex22 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex25 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex26 = complex22.multiply(complex25);
        java.lang.String str27 = complex22.toString();
        code.src.Complex complex30 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex33 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex34 = complex30.multiply(complex33);
        code.src.Complex complex35 = complex22.add(complex34);
        code.src.Complex complex36 = complex19.add(complex35);
        double double37 = complex36.real;
        code.src.Complex complex38 = complex3.multiply(complex36);
        code.src.Complex complex39 = new code.src.Complex();
        complex39.real = 1L;
        code.src.Complex complex44 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex47 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex48 = complex44.multiply(complex47);
        java.lang.String str49 = complex44.toString();
        code.src.Complex complex52 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex55 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex56 = complex52.multiply(complex55);
        code.src.Complex complex57 = complex44.add(complex56);
        code.src.Complex complex60 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex63 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex64 = complex60.multiply(complex63);
        java.lang.String str65 = complex60.toString();
        code.src.Complex complex68 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex71 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex72 = complex68.multiply(complex71);
        code.src.Complex complex73 = complex60.add(complex72);
        code.src.Complex complex74 = complex57.add(complex73);
        code.src.Complex complex75 = complex39.add(complex74);
        double double76 = complex75.real;
        code.src.Complex complex79 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex82 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex83 = complex79.multiply(complex82);
        code.src.Complex complex84 = complex75.sub(complex82);
        code.src.Complex complex87 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex88 = complex82.add(complex87);
        code.src.Complex complex91 = new code.src.Complex((double) 10L, (double) '#');
        code.src.Complex complex92 = complex87.add(complex91);
        code.src.Complex complex93 = complex36.multiply(complex92);
        code.src.Complex complex94 = complex2.multiply(complex36);
        java.lang.String str95 = complex36.toString();
        org.junit.Assert.assertNotNull(complex2);
        org.junit.Assert.assertNotNull(complex9);
        org.junit.Assert.assertNotNull(complex10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "(10.0,0.0)" + "'", str11, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex17);
        org.junit.Assert.assertNotNull(complex18);
        org.junit.Assert.assertNotNull(complex19);
        org.junit.Assert.assertNotNull(complex25);
        org.junit.Assert.assertNotNull(complex26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "(10.0,0.0)" + "'", str27, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex33);
        org.junit.Assert.assertNotNull(complex34);
        org.junit.Assert.assertNotNull(complex35);
        org.junit.Assert.assertNotNull(complex36);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 581.9143981028653d + "'", double37 == 581.9143981028653d);
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex47);
        org.junit.Assert.assertNotNull(complex48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "(10.0,0.0)" + "'", str49, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex55);
        org.junit.Assert.assertNotNull(complex56);
        org.junit.Assert.assertNotNull(complex57);
        org.junit.Assert.assertNotNull(complex63);
        org.junit.Assert.assertNotNull(complex64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "(10.0,0.0)" + "'", str65, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertNotNull(complex72);
        org.junit.Assert.assertNotNull(complex73);
        org.junit.Assert.assertNotNull(complex74);
        org.junit.Assert.assertNotNull(complex75);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 582.9143981028653d + "'", double76 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex82);
        org.junit.Assert.assertNotNull(complex83);
        org.junit.Assert.assertNotNull(complex84);
        org.junit.Assert.assertNotNull(complex87);
        org.junit.Assert.assertNotNull(complex88);
        org.junit.Assert.assertNotNull(complex92);
        org.junit.Assert.assertNotNull(complex93);
        org.junit.Assert.assertNotNull(complex94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "(581.9143981028653,875.1298242002123)" + "'", str95, "(581.9143981028653,875.1298242002123)");
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        code.src.Complex complex2 = new code.src.Complex(27.594203913205885d, 15125.23365654694d);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        code.src.Complex complex2 = new code.src.Complex(141.4213562373095d, 36.40054944640259d);
        code.src.Complex complex5 = new code.src.Complex((double) (short) 100, 43.756491210010616d);
        code.src.Complex complex6 = new code.src.Complex();
        complex6.real = 1L;
        code.src.Complex complex11 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex14 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex15 = complex11.multiply(complex14);
        java.lang.String str16 = complex11.toString();
        code.src.Complex complex19 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex22 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex23 = complex19.multiply(complex22);
        code.src.Complex complex24 = complex11.add(complex23);
        code.src.Complex complex27 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex30 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex31 = complex27.multiply(complex30);
        java.lang.String str32 = complex27.toString();
        code.src.Complex complex35 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex38 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex39 = complex35.multiply(complex38);
        code.src.Complex complex40 = complex27.add(complex39);
        code.src.Complex complex41 = complex24.add(complex40);
        code.src.Complex complex42 = complex6.add(complex41);
        double double43 = complex42.real;
        code.src.Complex complex46 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex49 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex50 = complex46.multiply(complex49);
        code.src.Complex complex51 = complex42.sub(complex49);
        code.src.Complex complex52 = complex5.add(complex49);
        code.src.Complex complex55 = new code.src.Complex((double) (byte) 100, (double) 'a');
        code.src.Complex complex58 = new code.src.Complex((double) 10L, 0.0d);
        code.src.Complex complex61 = code.src.Complex.polar((double) '4', (double) (byte) 1);
        code.src.Complex complex62 = complex58.multiply(complex61);
        double double63 = complex61.imaginary;
        java.lang.String str64 = complex61.toString();
        code.src.Complex complex65 = complex55.sub(complex61);
        code.src.Complex complex66 = complex5.multiply(complex65);
        code.src.Complex complex67 = complex2.multiply(complex65);
        code.src.Complex complex70 = new code.src.Complex((-54.40211108893698d), 1050.9408051475186d);
        code.src.Complex complex71 = complex65.sub(complex70);
        double double72 = complex71.real;
        org.junit.Assert.assertNotNull(complex14);
        org.junit.Assert.assertNotNull(complex15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "(10.0,0.0)" + "'", str16, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex22);
        org.junit.Assert.assertNotNull(complex23);
        org.junit.Assert.assertNotNull(complex24);
        org.junit.Assert.assertNotNull(complex30);
        org.junit.Assert.assertNotNull(complex31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "(10.0,0.0)" + "'", str32, "(10.0,0.0)");
        org.junit.Assert.assertNotNull(complex38);
        org.junit.Assert.assertNotNull(complex39);
        org.junit.Assert.assertNotNull(complex40);
        org.junit.Assert.assertNotNull(complex41);
        org.junit.Assert.assertNotNull(complex42);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 582.9143981028653d + "'", double43 == 582.9143981028653d);
        org.junit.Assert.assertNotNull(complex49);
        org.junit.Assert.assertNotNull(complex50);
        org.junit.Assert.assertNotNull(complex51);
        org.junit.Assert.assertNotNull(complex52);
        org.junit.Assert.assertNotNull(complex61);
        org.junit.Assert.assertNotNull(complex62);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 43.756491210010616d + "'", double63 == 43.756491210010616d);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "(28.09571990514327,43.756491210010616)" + "'", str64, "(28.09571990514327,43.756491210010616)");
        org.junit.Assert.assertNotNull(complex65);
        org.junit.Assert.assertNotNull(complex66);
        org.junit.Assert.assertNotNull(complex67);
        org.junit.Assert.assertNotNull(complex71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 126.3063911837937d + "'", double72 == 126.3063911837937d);
    }
}

